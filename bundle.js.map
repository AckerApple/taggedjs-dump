{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://taggedjs-dump/webpack/bootstrap","webpack://taggedjs-dump/webpack/runtime/define property getters","webpack://taggedjs-dump/webpack/runtime/hasOwnProperty shorthand","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/ValueTypes.enum.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/subject/signal.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/isInstance.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/subject/subject.utils.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/subject/Subject.class.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/subject/combineLatest.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/subject/ValueSubject.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/state/state.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/state/states.utils.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/state/state.utils.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/state/getStateValue.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/state/stateHandlers.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/state/setUseMemory.object.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/state/syncStates.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/state/watch.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/state/subject.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/state/states.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/state/letProp.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/errors.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/deepFunctions.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/getTemplaterResult.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/tag.utils.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/alterProp.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/executeWrap.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/cloneValueArray.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/getSupport.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/clonePropsBy.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/getTagWrap.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/tag.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/hasPropChanges.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/hasSupportChanged.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/paint.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/updateBeforeTemplate.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/tagRunner.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/getChildTagsToDestroy.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/smartRemoveKids.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/destroySupport.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/update/compareArrayItems.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/checkDestroyPrevious.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/update/processRegularValue.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/update/getNewGlobal.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/isLikeTags.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/interpolations/attributes/howToSetInputValue.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/interpolations/attributes/specialAttribute.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/state/handleProviderChanges.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/interpolations/attributes/getUpTags.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/render/renderSupport.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/state/providersChangeCheck.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/interpolations/attributes/renderTagArray.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/interpolations/attributes/bindSubjectCallback.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/interpolations/attributes/processNameValueAttribute.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/interpolations/attributes/addSupportEventListener.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/interpolations/attributes/processAttributeCallback.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/interpolations/attributes/isSpecialAttribute.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/processUpdateAttrContext.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/interpolations/attributes/updateAttribute.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/interpolations/attributes/processAttribute.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/interpolations/optimizers/attachDomElements.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/buildBeforeElement.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/domMetaCollector.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/getStringsId.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/isLastRunMatched.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/interpolations/optimizers/htmlInterpolationToDomMeta.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/interpolations/optimizers/parseHTML.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/interpolations/optimizers/restorePlaceholders.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/update/processTag.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/processUpdateContext.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/updateSupportBy.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/update/processNewValue.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/update/processTagArray.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/update/updateExistingValue.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/update/updateExistingTagComponent.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/checkTagValueChange.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/checkStateMismatch.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/afterRender.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/render/renderTagOnly.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/update/processNewSubjectTag.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/update/processFirstSubjectValue.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/update/processFirstSubjectComponent.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/update/processTagResult.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/update/oneRenderToSupport.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/interpolations/subscribeToTemplate.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/interpolations/processSubscriptionUpdate.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/update/syncPriorPropFunction.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/update/updateExistingArray.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/update/updateExistingObject.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/render/softDestroySupport.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/render/renderWithSupport.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/render/renderExistingTag.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/state/callbackMaker.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/getSupportInCycle.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/getDomTag.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/interpolations/optimizers/replacePlaceholders.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/html.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/index.js","webpack://taggedjs-dump/./ts/columnEditor.component.ts","webpack://taggedjs-dump/./ts/arrayTable.component.ts","webpack://taggedjs-dump/./ts/arrayDisplay.tag.ts","webpack://taggedjs-dump/./ts/arraysDisplay.component.ts","webpack://taggedjs-dump/./ts/dumpArray.tag.ts","webpack://taggedjs-dump/./ts/copyText.function.ts","webpack://taggedjs-dump/./ts/dumpSimple.tag.ts","webpack://taggedjs-dump/./ts/dumpObject.tag.ts","webpack://taggedjs-dump/./ts/controlPanel.tag.ts","webpack://taggedjs-dump/./ts/dump.tag.ts","webpack://taggedjs-dump/./node_modules/taggedjs/js/state/onInit.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","export const empty = '';\nexport var ImmutableTypes;\n(function (ImmutableTypes) {\n    ImmutableTypes[\"string\"] = \"string\";\n    ImmutableTypes[\"number\"] = \"number\";\n    ImmutableTypes[\"boolean\"] = \"boolean\";\n    ImmutableTypes[\"undefined\"] = \"undefined\";\n})(ImmutableTypes || (ImmutableTypes = {}));\nexport var BasicTypes;\n(function (BasicTypes) {\n    BasicTypes[\"function\"] = \"function\";\n    BasicTypes[\"date\"] = \"date\";\n    BasicTypes[\"unknown\"] = \"unknown\";\n    BasicTypes[\"object\"] = \"object\";\n})(BasicTypes || (BasicTypes = {}));\nconst version = Date.now();\n/** Used as direct memory comparisons, the strings are never compared, just the array */\nexport const ValueTypes = {\n    tag: 'html', // html'' aka StringTag | DomTag\n    dom: 'dom', // compiled version of html''\n    templater: 'templater',\n    tagComponent: 'tagComponent',\n    tagArray: 'tagArray',\n    subject: 'subject',\n    tagJsSubject: 'tagJsSubject',\n    renderOnce: 'renderOnce',\n    stateRender: 'stateRender',\n    version,\n};\n//# sourceMappingURL=ValueTypes.enum.js.map","import { state } from '../state/index.js';\nimport { getSupportInCycle } from '../tag/getSupportInCycle.function.js';\n/** Checks if rendering cycle in process. Then creates object with \"value\" key and ability to \"subscribe\" to value changes */\nexport function signal(initialValue) {\n    const support = getSupportInCycle();\n    if (support) {\n        return state(() => Signal(initialValue));\n    }\n    return Signal(initialValue);\n}\n/** Creates object with \"value\" key and ability to \"subscribe\" to value changes */\nexport function Signal(initialValue) {\n    let value = initialValue;\n    const subscribers = new Set();\n    return {\n        get value() {\n            return value;\n        },\n        set value(newValue) {\n            if (value !== newValue) {\n                value = newValue;\n                // Notify all subscribers\n                subscribers.forEach(callback => callback(newValue));\n            }\n        },\n        subscribe(callback) {\n            callback(value); // emit initial value\n            subscribers.add(callback);\n            // Return an unsubscribe function\n            const unsub = () => subscribers.delete(callback);\n            // support traditional unsubscribe\n            unsub.unsubscribe = unsub;\n            return unsub;\n        },\n    };\n}\n//# sourceMappingURL=signal.function.js.map","import { BasicTypes, ImmutableTypes, ValueTypes } from './tag/ValueTypes.enum.js';\nexport function isSimpleType(value) {\n    switch (value) {\n        case ImmutableTypes.string:\n        case ImmutableTypes.number:\n        case ImmutableTypes.boolean:\n            return true;\n    }\n    return false;\n}\nexport function isStaticTag(value) {\n    if (!value) {\n        return false;\n    }\n    const tagJsType = value.tagJsType;\n    switch (tagJsType) {\n        case ValueTypes.dom:\n        case ValueTypes.tag:\n        case ValueTypes.templater:\n            return true;\n    }\n    return false;\n}\n/** passed in is expected to be a TemplaterResult */\nexport function isTagComponent(value) {\n    const tagType = value?.tagJsType;\n    return tagType === ValueTypes.tagComponent || tagType === ValueTypes.stateRender;\n}\n// isSubjectLike\nexport function isSubjectInstance(subject) {\n    return isObject(subject) && typeof subject.subscribe === BasicTypes.function;\n}\nexport function isPromise(value) {\n    return value && isFunction(value.then);\n}\nexport function isFunction(value) {\n    return typeof value === BasicTypes.function;\n}\nexport function isObject(value) {\n    return typeof (value) === BasicTypes.object && value !== null;\n}\nexport function isArray(value) {\n    return Array.isArray(value);\n}\n//# sourceMappingURL=isInstance.js.map","import { Subject } from './Subject.class.js';\nfunction removeSubFromArray(subscribers, callback) {\n    const index = subscribers.findIndex(sub => sub.callback === callback);\n    if (index !== -1) {\n        subscribers.splice(index, 1);\n    }\n}\nexport function getSubscription(subject, callback, subscribers) {\n    const countSubject = Subject.globalSubCount$;\n    Subject.globalSubCount$.next(countSubject.value + 1);\n    const subscription = function () {\n        subscription.unsubscribe();\n    };\n    subscription.callback = callback;\n    subscription.subscriptions = [];\n    // Return a function to unsubscribe from the BehaviorSubject\n    subscription.unsubscribe = function () {\n        return unsubscribe(subscription, subscribers, callback);\n    };\n    subscription.add = (sub) => {\n        subscription.subscriptions.push(sub);\n        return subscription;\n    };\n    subscription.next = (value) => {\n        callback(value, subscription);\n    };\n    return subscription;\n}\nexport function runPipedMethods(value, methods, onComplete) {\n    const cloneMethods = [...methods];\n    const firstMethod = cloneMethods.shift();\n    const next = (newValue) => {\n        if (cloneMethods.length) {\n            return runPipedMethods(newValue, cloneMethods, onComplete);\n        }\n        onComplete(newValue);\n    };\n    let handler = next;\n    const setHandler = (x) => handler = x;\n    const pipeUtils = { setHandler, next };\n    const methodResponse = firstMethod(value, pipeUtils);\n    handler(methodResponse);\n}\nfunction unsubscribe(subscription, subscribers, callback) {\n    removeSubFromArray(subscribers, callback); // each will be called when update comes in\n    const valSub = Subject.globalSubCount$;\n    Subject.globalSubCount$.next(valSub.value - 1);\n    // any double unsubscribes will be ignored\n    subscription.unsubscribe = () => subscription;\n    // unsubscribe from any combined subjects\n    const subscriptions = subscription.subscriptions;\n    for (const sub of subscriptions) {\n        sub.unsubscribe();\n    }\n    return subscription;\n}\n//# sourceMappingURL=subject.utils.js.map","import { isSubjectInstance } from '../isInstance.js';\nimport { combineLatest } from './combineLatest.function.js';\nimport { getSubscription, runPipedMethods } from './subject.utils.js';\nexport class Subject {\n    value;\n    onSubscription;\n    // private?\n    methods = [];\n    isSubject = true;\n    // private?\n    subscribers = [];\n    subscribeWith;\n    constructor(value, \n    // private? - only used by extending classes\n    onSubscription) {\n        this.value = value;\n        this.onSubscription = onSubscription;\n        // defineValueOn(this)\n    }\n    subscribe(callback) {\n        const subscription = getSubscription(this, callback, this.subscribers);\n        // are we within a pipe?\n        const subscribeWith = this.subscribeWith;\n        if (subscribeWith) {\n            // are we in a pipe?\n            if (this.methods.length) {\n                const orgCallback = callback;\n                callback = (value) => {\n                    runPipedMethods(value, this.methods, lastValue => orgCallback(lastValue, subscription));\n                };\n            }\n            return subscribeWith(callback);\n        }\n        this.subscribers.push(subscription);\n        if (this.onSubscription) {\n            this.onSubscription(subscription);\n        }\n        return subscription;\n    }\n    next(value) {\n        this.value = value;\n        this.emit();\n    }\n    set = this.next.bind(this);\n    emit() {\n        const value = this.value;\n        // Notify all subscribers with the new value\n        // const subs = [...this.subscribers] // subs may change as we call callbacks\n        const subs = this.subscribers; // subs may change as we call callbacks\n        // const length = subs.length\n        for (const sub of subs) {\n            sub.callback(value, sub);\n        }\n    }\n    toPromise() {\n        return new Promise(res => {\n            this.subscribe((x, subscription) => {\n                subscription.unsubscribe();\n                res(x);\n            });\n        });\n    }\n    /** like toPromise but faster */\n    toCallback(callback) {\n        const subscription = this.subscribe((x, runtimeSub) => {\n            const tagJsUnsub = runtimeSub?.unsubscribe;\n            if (tagJsUnsub) {\n                tagJsUnsub(); // its from taggedjs\n            }\n            else {\n                setTimeout(() => subscription.unsubscribe(), 0);\n            }\n            callback(x);\n        });\n        return this;\n    }\n    pipe(...operations) {\n        const subject = new Subject(this.value);\n        subject.setMethods(operations);\n        subject.subscribeWith = (x) => this.subscribe(x);\n        subject.next = x => this.next(x);\n        return subject;\n    }\n    setMethods(operations) {\n        this.methods = operations;\n    }\n    static all(args) {\n        const switched = args.map(arg => {\n            if (isSubjectInstance(arg))\n                return arg;\n            // Call the callback immediately with the current value\n            const x = new Subject(arg, subscription => {\n                subscription.next(arg);\n                return subscription;\n            });\n            return x;\n        });\n        return combineLatest(switched);\n    }\n    static globalSubCount$ = new Subject(0); // for ease of debugging}\n}\nexport class Subjective extends Subject {\n    value;\n    onSubscription;\n    _value;\n    constructor(value, \n    // private?\n    onSubscription) {\n        super(value, onSubscription);\n        this.value = value;\n        this.onSubscription = onSubscription;\n        this._value = value;\n        defineValueOn(this);\n    }\n    next(value) {\n        this._value = value;\n        this.emit();\n    }\n    emit() {\n        const value = this._value;\n        // Notify all subscribers with the new value\n        // const subs = [...this.subscribers] // subs may change as we call callbacks\n        const subs = this.subscribers; // subs may change as we call callbacks\n        // const length = subs.length\n        for (const sub of subs) {\n            sub.callback(value, sub);\n        }\n    }\n}\nexport function defineValueOn(subject) {\n    Object.defineProperty(subject, 'value', {\n        // supports subject.value = x\n        set(value) {\n            subject._value = value;\n            subject.emit();\n        },\n        // supports subject.value\n        get() {\n            return subject._value;\n        }\n    });\n}\n//# sourceMappingURL=Subject.class.js.map","import { Subject } from './Subject.class.js';\nexport function combineLatest(subjects) {\n    const output = new Subject();\n    const subscribe = (callback) => {\n        const valuesSeen = [];\n        const values = [];\n        const setValue = (x, index) => {\n            valuesSeen[index] = true;\n            values[index] = x;\n            const countMatched = valuesSeen.length === subjects.length;\n            if (!countMatched) {\n                return;\n            }\n            for (const item of valuesSeen) {\n                if (!item) {\n                    return;\n                }\n            }\n            // everyone has reported values\n            callback(values, subscription);\n        };\n        const clones = [...subjects];\n        const firstSub = clones.shift();\n        const subscription = firstSub.subscribe(x => setValue(x, 0));\n        const subscriptions = clones.map((subject, index) => {\n            return subject.subscribe(x => setValue(x, index + 1));\n        });\n        subscription.subscriptions = subscriptions;\n        return subscription;\n    };\n    output.subscribeWith = subscribe;\n    return output;\n}\n//# sourceMappingURL=combineLatest.function.js.map","import { Subject, defineValueOn } from './Subject.class.js';\nexport class ValueSubject extends Subject {\n    value;\n    constructor(value) {\n        super(value);\n        this.value = value;\n    }\n    subscribe(callback) {\n        const subscription = super.subscribe(callback);\n        // Call the callback immediately with the current value\n        callback(this.value, subscription);\n        return subscription;\n    }\n}\nexport class ValueSubjective extends Subject {\n    value;\n    constructor(value) {\n        super(value);\n        this.value = value;\n        this._value = value;\n        defineValueOn(this); // if you extend this AND have a constructor, you must call this in your extension\n    }\n    subscribe(callback) {\n        const subscription = super.subscribe(callback);\n        // Call the callback immediately with the current value\n        callback(this._value, subscription);\n        return subscription;\n    }\n}\n//# sourceMappingURL=ValueSubject.js.map","import { setUseMemory } from './setUseMemory.object.js';\n/** Used for variables that need to remain the same variable during render passes */\nexport function state(defaultValue) {\n    return setUseMemory.stateConfig.handlers.handler(defaultValue);\n}\n//# sourceMappingURL=state.function.js.map","import { setUseMemory } from './setUseMemory.object.js';\nimport { state } from './state.function.js';\nexport function firstStatesHandler(setter) {\n    const config = setUseMemory.stateConfig;\n    // State first time run\n    config.states[config.statesIndex] = setter;\n    const support = config.support;\n    support.states[config.statesIndex] = setter;\n    ++config.statesIndex;\n    return setter((...args) => {\n        state(args);\n        return args;\n    });\n}\nexport function reStatesHandler(setter) {\n    const config = setUseMemory.stateConfig;\n    const support = config.support;\n    const statesIndex = config.statesIndex;\n    const prevSupport = config.prevSupport;\n    const oldStates = prevSupport?.states[statesIndex];\n    const lastValues = [];\n    const regetter = (...args) => {\n        lastValues.push(args);\n        return args;\n    };\n    oldStates(regetter);\n    let index = 0;\n    const resetter = (...args) => {\n        // state(value) // fake call and do not care about result\n        // fake state() having been called\n        config.stateArray.push({\n            get: () => args,\n            defaultValue: args,\n        });\n        const lastValue = lastValues[index];\n        ++index;\n        return lastValue;\n    };\n    support.states[config.statesIndex] = setter;\n    ++config.statesIndex;\n    return setter(resetter);\n}\n//# sourceMappingURL=states.utils.js.map","import { runFirstState, runRestate } from './stateHandlers.js';\nimport { firstStatesHandler, reStatesHandler } from './states.utils.js';\nexport function initState(support, config) {\n    config.handlers.handler = runFirstState;\n    config.handlers.statesHandler = firstStatesHandler;\n    config.rearray = [];\n    config.stateArray = [];\n    config.states = [];\n    config.statesIndex = 0;\n    config.support = support;\n}\nexport function reState(support, config, prevState, prevStates) {\n    // set previous state memory\n    config.rearray = prevState;\n    config.stateArray = [];\n    config.states = prevStates;\n    config.statesIndex = 0;\n    config.handlers.handler = runRestate;\n    config.handlers.statesHandler = reStatesHandler;\n    config.support = support;\n}\nexport class StateEchoBack {\n}\n/** sends a fake value and then sets back to received value */\nexport function getCallbackValue(callback) {\n    const [value] = callback(StateEchoBack); // get value and set to undefined\n    const [checkValue] = callback(value); // set back to original value\n    return [value, checkValue];\n}\n//# sourceMappingURL=state.utils.js.map","import { getCallbackValue } from './state.utils.js';\nexport function getStateValue(state) {\n    const callback = state.callback;\n    if (!callback) {\n        return state.defaultValue;\n    }\n    const [value] = getCallbackValue(callback);\n    return value;\n}\n//# sourceMappingURL=getStateValue.function.js.map","import { setUseMemory } from './setUseMemory.object.js';\nimport { getStateValue } from './getStateValue.function.js';\nimport { BasicTypes } from '../tag/ValueTypes.enum.js';\nexport function runRestate() {\n    const config = setUseMemory.stateConfig;\n    const rearray = config.rearray;\n    const restate = rearray[config.stateArray.length];\n    config.stateArray.push(restate);\n    return restate.defaultValue;\n}\nexport function runFirstState(defaultValue) {\n    const config = setUseMemory.stateConfig;\n    // State first time run\n    let initValue = defaultValue;\n    if (typeof (defaultValue) === BasicTypes.function) {\n        initValue = defaultValue();\n    }\n    // the state is actually intended to be a function\n    if (typeof (initValue) === BasicTypes.function) {\n        const original = initValue;\n        initValue = function initValueFun(...args) {\n            const result = original(...args);\n            return result;\n        };\n        initValue.original = original;\n    }\n    const push = {\n        get: function pushState() {\n            return getStateValue(push);\n        },\n        defaultValue: initValue,\n    };\n    config.stateArray.push(push);\n    return initValue;\n}\n//# sourceMappingURL=stateHandlers.js.map","import { firstStatesHandler } from './states.utils.js';\nimport { runFirstState } from './stateHandlers.js';\nexport const setUseMemory = {\n    stateConfig: {\n        stateArray: [], // state memory on the first render\n        version: Date.now(),\n        handlers: {\n            handler: runFirstState,\n            statesHandler: firstStatesHandler,\n        }\n    },\n};\n//# sourceMappingURL=setUseMemory.object.js.map","/**\n * Sync two supports\n * @param support FROM\n * @param newestSupport  ONTO\n * @returns\n */\nexport function syncSupports(support, // from\nnewestSupport) {\n    for (let index = 0; index < support.states.length; ++index) {\n        let got;\n        const getter = support.states[index];\n        const setter = newestSupport.states[index];\n        getter((...x) => {\n            got = x;\n            return x;\n        });\n        setter(() => {\n            return got;\n        });\n    }\n    return;\n}\n/** @deprecated favor using syncSupports */\nexport function syncStates(stateFrom, stateTo, intoStates, statesFrom) {\n    for (let index = stateFrom.length - 1; index >= 0; --index) {\n        const stateFromTarget = stateFrom[index];\n        const fromValue = stateFromTarget.get(); // get without setting\n        // const fromValue = getStateValue(stateFromTarget) // get without setting\n        const stateToTarget = stateTo[index];\n        const callback = stateToTarget.callback; // is it a let state?\n        if (!callback) {\n            continue;\n        }\n        callback(fromValue); // set the value\n    }\n    // loop statesFrom to set on the oldStates\n    for (let index = statesFrom.length - 1; index >= 0; --index) {\n        const oldValues = [];\n        const oldGetCallback = (...args) => {\n            oldValues.push(args);\n            return args;\n        };\n        const stateFromTarget = statesFrom[index];\n        // trigger getting all old values\n        stateFromTarget(oldGetCallback);\n        let getIndex = 0;\n        // This is the \"get\" argument that will be called and all arguments are ignored\n        const newSetCallback = (..._) => {\n            return oldValues[getIndex++];\n        };\n        // trigger setting updated values\n        intoStates[index](newSetCallback);\n    }\n}\n//# sourceMappingURL=syncStates.function.js.map","import { ValueSubject } from '../subject/index.js';\nimport { getSupportInCycle } from '../tag/getSupportInCycle.function.js';\nimport { setUseMemory } from './setUseMemory.object.js';\nimport { state } from './state.function.js';\nimport { syncStates } from './syncStates.function.js';\n/**\n * When an item in watch array changes, callback function will be triggered.\n * Triggers on initial watch setup. TIP: try watch.noInit()\n * @param currentValues T[]\n * @param callback WatchCallback\n * @returns T[]\n */\nexport const watch = ((currentValues, callback) => {\n    return setupWatch(currentValues, callback);\n});\nconst defaultFinally = (x) => x;\nfunction newWatch(setup) {\n    const method = (currentValues, callback) => {\n        return setupWatch(currentValues, callback, setup);\n    };\n    method.setup = setup;\n    defineOnMethod(() => method, method);\n    return method;\n}\n/**\n * puts above functionality together\n * @param currentValues values being watched\n * @param callback (currentValue, previousValues) => resolveToValue\n * @param param2\n * @returns\n */\nconst setupWatch = (currentValues, callback, { init, before, final = defaultFinally, } = {}) => {\n    const previous = state({\n        pastResult: undefined,\n        values: undefined,\n    });\n    const previousValues = previous.values;\n    // First time running watch?\n    if (previousValues === undefined) {\n        if (before && !before(currentValues)) {\n            previous.values = currentValues;\n            return previous.pastResult; // do not continue\n        }\n        const castedInit = init || callback;\n        const result = castedInit(currentValues, previousValues);\n        previous.pastResult = final(result);\n        previous.values = currentValues;\n        return previous.pastResult;\n    }\n    const allExact = currentValues.every((item, index) => item === previousValues[index]);\n    if (allExact) {\n        return previous.pastResult;\n    }\n    if (before && !before(currentValues)) {\n        previous.values = currentValues;\n        return previous.pastResult; // do not continue\n    }\n    const result = callback(currentValues, previousValues);\n    previous.pastResult = final(result);\n    previousValues.length = 0;\n    previousValues.push(...currentValues);\n    return previous.pastResult;\n};\nfunction defineOnMethod(getWatch, attachTo) {\n    Object.defineProperty(attachTo, 'noInit', {\n        get() {\n            const watch = getWatch();\n            watch.setup.init = () => undefined;\n            return watch;\n        },\n    });\n    Object.defineProperty(attachTo, 'asSubject', {\n        get() {\n            const oldWatch = getWatch();\n            const firstSupport = state(() => getSupportInCycle());\n            const subject = state(() => new ValueSubject(undefined));\n            const oldState = state(() => ({\n                stateArray: setUseMemory.stateConfig.stateArray,\n                states: setUseMemory.stateConfig.states,\n            }));\n            const method = (currentValues, callback) => {\n                setupWatch(currentValues, (currentValues, previousValues) => {\n                    const nowSupport = getSupportInCycle();\n                    const setTo = callback(currentValues, previousValues);\n                    if (nowSupport !== firstSupport) {\n                        const newestState = oldState.stateArray;\n                        const global = firstSupport.subject.global;\n                        const oldest = global.oldest;\n                        const oldestState = oldest.state;\n                        const newStates = oldState.states;\n                        const oldStates = oldest.states;\n                        syncStates(newestState, oldestState, newStates, oldStates);\n                    }\n                    subject.next(setTo);\n                }, oldWatch.setup);\n                return subject;\n            };\n            method.setup = oldWatch.setup;\n            defineOnMethod(() => method, method);\n            return method;\n        },\n    });\n    Object.defineProperty(attachTo, 'truthy', {\n        get() {\n            const watch = getWatch();\n            watch.setup.before = (currentValues) => currentValues.every(x => x);\n            return watch;\n        },\n    });\n    return attachTo;\n}\ndefineOnMethod(() => newWatch({}), watch);\n//# sourceMappingURL=watch.function.js.map","import { Subject, ValueSubject } from '../subject/index.js';\nimport { getSupportInCycle } from '../tag/getSupportInCycle.function.js';\nimport { setUseMemory } from './setUseMemory.object.js';\nimport { state } from './state.function.js';\nimport { syncStates } from './syncStates.function.js';\n/** Create a Subject that on updates will sync state values to keep chained functions using latest variables */\nexport function subject(initialValue) {\n    const support = getSupportInCycle();\n    if (support) {\n        return state(() => new Subject(initialValue));\n    }\n    return new Subject(initialValue);\n}\nsubject._value = (value) => {\n    const oldestState = state(function subjectValue() {\n        return {\n            stateArray: setUseMemory.stateConfig.stateArray,\n            states: setUseMemory.stateConfig.states,\n        };\n    });\n    const nowSupport = getSupportInCycle();\n    return state(function subjectValue() {\n        const subject = new ValueSubject(value).pipe(x => {\n            syncStates(nowSupport.state, oldestState.stateArray, nowSupport.states, oldestState.states);\n            return x;\n        });\n        return subject;\n    });\n};\nfunction all(args) {\n    const oldestState = state(() => ({\n        stateArray: setUseMemory.stateConfig.stateArray,\n        states: setUseMemory.stateConfig.states,\n    }));\n    const nowSupport = getSupportInCycle();\n    return Subject.all(args).pipe(x => {\n        syncStates(nowSupport.state, oldestState.stateArray, nowSupport.states, oldestState.states);\n        return x;\n    });\n}\nsubject.all = all;\n//# sourceMappingURL=subject.function.js.map","import { setUseMemory } from './setUseMemory.object.js';\n/** Used for variables that need to remain the same variable during render passes. If defaultValue is a function it is called only once, its return value is first state, and let value can changed */\nexport function states(setter) {\n    const config = setUseMemory.stateConfig;\n    return config.handlers.statesHandler(setter);\n}\n//# sourceMappingURL=states.function.js.map","import { signal } from '../subject/signal.function.js';\nimport { states } from './states.function.js';\nimport { watch } from './watch.function.js';\n/**\n * Enables the ability to maintain a change to a props value until the prop itself changes\n * @param prop typically the name of an existing prop\n * @returns immediately call the returned function: letProp(y)(x => [y, y=x])\n */\nexport function letProp(setter) {\n    const propStates2 = signal([]);\n    const passes = signal(0);\n    const passedOn = signal(0);\n    let nowValues = [];\n    let passed = 0;\n    passedOn.value = passes.value;\n    setter((...values) => {\n        nowValues = values;\n        return values;\n    });\n    // When the watched variable changes, then the local prop variable has to update\n    watch(nowValues, () => {\n        ++passed; // first time values and changed values cause new state\n        propStates2.value = nowValues;\n        setter(() => nowValues);\n    });\n    // called and only used during sync'ing processes\n    states(() => {\n        if (passed) {\n            setter((...values) => {\n                propStates2.value = values;\n                if (passes != passedOn) {\n                    return propStates2.value;\n                }\n                return values; // propStates2.value\n            });\n            passedOn.value = passes.value;\n            ++passes.value;\n            return;\n        }\n        setter(() => propStates2.value);\n    });\n    ++passed;\n    return propStates2.value;\n}\n//# sourceMappingURL=letProp.function.js.map","export class TagError extends Error {\n    details;\n    constructor(message, errorCode, details = {}) {\n        super(message);\n        this.name = TagError.name;\n        this.details = { ...details, errorCode };\n    }\n}\nexport class ArrayNoKeyError extends TagError {\n    constructor(message, details) {\n        super(message, 'array-no-key-error', details);\n        this.name = ArrayNoKeyError.name;\n    }\n}\nexport class StateMismatchError extends TagError {\n    constructor(message, details) {\n        super(message, 'state-mismatch-error', details);\n        this.name = StateMismatchError.name;\n    }\n}\nexport class SyncCallbackError extends TagError {\n    constructor(message, details) {\n        super(message, 'sync-callback-error', details);\n        this.name = SyncCallbackError.name;\n    }\n}\n//# sourceMappingURL=errors.js.map","import { isArray, isFunction } from './isInstance.js';\nimport { BasicTypes } from './tag/ValueTypes.enum.js';\nexport function deepClone(obj, maxDepth) {\n    // return makeDeepClone(obj, new WeakMap())\n    return makeDeepClone(obj, maxDepth);\n}\nfunction makeDeepClone(obj, \n// visited: WeakMap<any, any>\nmaxDepth) {\n    // If obj is a primitive type or null, return it directly\n    if (obj === null || typeof obj !== BasicTypes.object) {\n        return obj;\n    }\n    // If obj is already visited, return the cloned reference\n    /*\n    if (visited.has(obj)) {\n      return visited.get(obj)\n    }\n    */\n    if (maxDepth < 0) {\n        return obj;\n    }\n    // Handle special cases like Date and RegExp\n    if (obj instanceof Date) {\n        return new Date(obj);\n    }\n    if (obj instanceof RegExp) {\n        return new RegExp(obj);\n    }\n    // Create an empty object or array with the same prototype\n    const clone = isArray(obj) ? [] : Object.create(Object.getPrototypeOf(obj));\n    // Clone each property or element of the object or array\n    if (isArray(obj)) {\n        for (let i = 0; i < obj.length; i++) {\n            clone[i] = makeDeepClone(obj[i], maxDepth - 1);\n        }\n    }\n    else {\n        for (const key in obj) {\n            if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                clone[key] = makeDeepClone(obj[key], maxDepth - 1);\n            }\n        }\n    }\n    return clone;\n}\nexport function deepEqual(obj1, obj2, maxDepth) {\n    return isDeepEqual(obj1, obj2, maxDepth);\n}\nfunction isDeepEqual(obj1, obj2, \n// visited: WeakMap<any, any>,\nmaxDepth) {\n    const directEqual = obj1 === obj2;\n    if (directEqual || isSameFunctions(obj1, obj2)) {\n        return true;\n    }\n    // If obj is already visited, return the cloned reference\n    // if (visited.has(obj1)) {\n    if (maxDepth < 0) {\n        return true;\n    }\n    if (typeof obj1 === BasicTypes.object && typeof obj2 === BasicTypes.object) {\n        // both are dates and were already determined not the same\n        if (obj1 instanceof Date && obj2 instanceof Date) {\n            return obj1.getTime() === obj2.getTime();\n        }\n        // Register the cloned object to avoid cyclic references\n        // visited.set(obj1, 0)\n        // Check if obj1 and obj2 are both arrays\n        if (isArray(obj1) && isArray(obj2)) {\n            return isArrayDeepEqual(obj1, obj2, maxDepth - 1);\n        }\n        else if (isArray(obj1) || isArray(obj2)) {\n            // One is an array, and the other is not\n            return false;\n        }\n        // return isObjectDeepEqual(obj1, obj2, visited)\n        return isObjectDeepEqual(obj1, obj2, maxDepth - 1);\n    }\n    return false;\n}\nfunction isObjectDeepEqual(obj1, obj2, \n// visited: WeakMap<any, any>,\nmaxDepth) {\n    const keys1 = Object.keys(obj1);\n    const keys2 = Object.keys(obj2);\n    if (keys1.length === 0 && keys2.length === 0) {\n        return true;\n    }\n    if (keys1.length !== keys2.length) {\n        return false;\n    }\n    for (const key of keys1) {\n        const keyFound = keys2.includes(key);\n        if (!keyFound || !isDeepEqual(obj1[key], obj2[key], maxDepth - 1)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction isArrayDeepEqual(obj1, obj2, maxDepth) {\n    if (obj1.length !== obj2.length) {\n        return false;\n    }\n    for (let i = 0; i < obj1.length; i++) {\n        if (!isDeepEqual(obj1[i], obj2[i], maxDepth - 1)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction isSameFunctions(fn0, fn1) {\n    const bothFunction = isFunction(fn0) && isFunction(fn1);\n    return bothFunction && fn0.toString() === fn1.toString();\n}\n//# sourceMappingURL=deepFunctions.js.map","import { ValueTypes } from './ValueTypes.enum.js';\nexport function getTemplaterResult(propWatch, props) {\n    const templater = {\n        propWatch,\n        props,\n        tagJsType: ValueTypes.templater,\n        key: function keyTemplate(arrayValue) {\n            templater.arrayValue = arrayValue;\n            return templater;\n        }\n    };\n    return templater;\n}\n//# sourceMappingURL=getTemplaterResult.function.js.map","export const tags = [];\n//# sourceMappingURL=tag.utils.js.map","import { isInlineHtml, renderInlineHtml } from './tag/render/renderSupport.function.js';\nimport { renderExistingReadyTag } from './tag/render/renderExistingTag.function.js';\nimport { getSupportInCycle } from './tag/getSupportInCycle.function.js';\nimport { deepCompareDepth } from './tag/hasSupportChanged.function.js';\nimport { isArray, isStaticTag } from './isInstance.js';\nimport { BasicTypes } from './tag/ValueTypes.enum.js';\nimport { setUseMemory } from './state/index.js';\nexport function castProps(props, newSupport, depth) {\n    return props.map(prop => alterProp(prop, newSupport.ownerSupport, newSupport, depth));\n}\n/* Used to rewrite props that are functions. When they are called it should cause parent rendering */\nexport function alterProp(prop, ownerSupport, newSupport, depth) {\n    if (isStaticTag(prop) || !prop) {\n        return prop;\n    }\n    if (!ownerSupport) {\n        return prop; // no one above me\n    }\n    return checkProp(prop, ownerSupport, newSupport, depth);\n}\nexport function checkProp(value, ownerSupport, newSupport, depth) {\n    if (!value) {\n        return value;\n    }\n    if (value.tagJsType) {\n        return value;\n    }\n    if (typeof (value) === BasicTypes.function) {\n        return getPropWrap(value, ownerSupport);\n    }\n    if (depth === deepCompareDepth) {\n        return value;\n    }\n    const skip = isSkipPropValue(value);\n    if (skip) {\n        return value; // no children to crawl through\n    }\n    if (isArray(value)) {\n        return checkArrayProp(value, newSupport, ownerSupport, depth);\n    }\n    return checkObjectProp(value, newSupport, ownerSupport, depth);\n}\nfunction checkArrayProp(value, newSupport, ownerSupport, depth) {\n    for (let index = value.length - 1; index >= 0; --index) {\n        const subValue = value[index];\n        value[index] = checkProp(subValue, ownerSupport, newSupport, depth + 1);\n        if (typeof (subValue) === BasicTypes.function) {\n            if (subValue.mem) {\n                continue;\n            }\n            afterCheckProp(depth + 1, index, subValue, value, newSupport);\n        }\n    }\n    return value;\n}\nfunction checkObjectProp(value, newSupport, ownerSupport, depth) {\n    const keys = Object.keys(value);\n    for (const name of keys) {\n        const subValue = value[name];\n        const result = checkProp(subValue, ownerSupport, newSupport, depth + 1);\n        const newSubValue = value[name];\n        if (newSubValue === result) {\n            continue;\n        }\n        const getset = Object.getOwnPropertyDescriptor(value, name);\n        const hasSetter = getset?.get || getset?.set;\n        if (hasSetter) {\n            continue;\n        }\n        value[name] = result;\n        if (typeof (result) === BasicTypes.function) {\n            if (subValue.mem) {\n                continue;\n            }\n            afterCheckProp(depth + 1, name, subValue, value, newSupport);\n        }\n    }\n    return value;\n}\nfunction afterCheckProp(depth, index, originalValue, newProp, newSupport) {\n    // restore object to have original function on destroy\n    if (depth > 0) {\n        const global = newSupport.subject.global;\n        newProp[index].subscription = global.destroy$.toCallback(function alterCheckProcessor() {\n            newProp[index] = originalValue;\n        });\n    }\n}\nexport function getPropWrap(value, ownerSupport) {\n    const already = value.mem;\n    // already previously converted by a parent?\n    if (already) {\n        return value;\n    }\n    const wrap = function wrapRunner(...args) {\n        return wrap.toCall(...args);\n    }; // what gets called can switch over parent state changes\n    wrap.original = value;\n    wrap.mem = value;\n    // Currently, call self but over parent state changes, I may need to call a newer parent tag owner\n    wrap.toCall = function toCallRunner(...args) {\n        return callbackPropOwner(wrap.mem, args, ownerSupport);\n    };\n    // copy data properties that maybe on source function\n    Object.assign(wrap, value);\n    return wrap;\n}\n/** Function shared by alterProps() and updateExistingTagComponent... TODO: May want to have to functions to reduce cycle checking?  */\nexport function callbackPropOwner(toCall, callWith, ownerSupport) {\n    const global = ownerSupport.subject.global;\n    const newest = global?.newest || ownerSupport;\n    const supportInCycle = getSupportInCycle();\n    const noCycle = supportInCycle === undefined;\n    const callbackResult = toCall(...callWith);\n    const run = function propCallbackProcessor() {\n        const global = newest.subject.global;\n        // are we in a rendering cycle? then its being called by alterProps\n        if (noCycle === false) {\n            const allMatched = global.locked === true;\n            if (allMatched) {\n                return callbackResult; // owner did not change\n            }\n        }\n        safeRenderSupport(newest, ownerSupport);\n        return callbackResult;\n    };\n    if (noCycle) {\n        return run();\n    }\n    setUseMemory.tagClosed$.toCallback(run);\n    return callbackResult;\n}\nexport function isSkipPropValue(value) {\n    return typeof (value) !== BasicTypes.object || !value || value.tagJsType;\n}\nexport function safeRenderSupport(newest, ownerSupport) {\n    const subject = newest.subject;\n    const isInline = isInlineHtml(newest.templater);\n    if (isInline) {\n        const result = renderInlineHtml(ownerSupport, newest);\n        // TODO: below maybe never true\n        /*\n        const global = subject.global as TagGlobal\n        if(global) {\n          delete global.locked\n        }\n        */\n        return result;\n    }\n    const global = subject.global;\n    global.locked = true;\n    renderExistingReadyTag(global.newest, newest, ownerSupport, subject);\n    delete global.locked;\n}\n//# sourceMappingURL=alterProp.function.js.map","import { BasicTypes, ValueTypes } from './ValueTypes.enum.js';\nimport { setUseMemory } from '../state/setUseMemory.object.js';\nexport function executeWrap(templater, result, useSupport, castedProps) {\n    const originalFunction = result.original; // (innerTagWrap as any).original as unknown as TagComponent\n    const stateless = templater.tagJsType === ValueTypes.stateRender;\n    let tag;\n    if (stateless) {\n        tag = templater();\n    }\n    else {\n        tag = originalFunction(...castedProps);\n        // CALL ORIGINAL COMPONENT FUNCTION\n        if (typeof (tag) === BasicTypes.function) {\n            tag = tag();\n        }\n    }\n    tag.templater = templater;\n    templater.tag = tag;\n    const config = setUseMemory.stateConfig;\n    useSupport.state = config.stateArray;\n    useSupport.states = config.states;\n    // ++useSupport.subject.renderCount\n    return useSupport;\n}\n//# sourceMappingURL=executeWrap.function.js.map","import { deepClone } from '../deepFunctions.js';\nimport { ValueTypes } from './ValueTypes.enum.js';\nimport { isArray } from '../isInstance.js';\nexport function cloneValueArray(values) {\n    return values.map(cloneTagJsValue);\n}\n/** clones only what is needed to compare differences later */\nexport function cloneTagJsValue(value, maxDepth) {\n    const tag = value;\n    const tagJsType = value?.tagJsType;\n    if (tagJsType) {\n        switch (tagJsType) {\n            case ValueTypes.stateRender:\n                return undefined;\n            case ValueTypes.dom:\n            case ValueTypes.tag:\n            case ValueTypes.templater:\n                return cloneValueArray(tag.values);\n        }\n    }\n    if (isArray(value)) {\n        return cloneValueArray(tag);\n    }\n    return deepClone(value, maxDepth);\n}\n//# sourceMappingURL=cloneValueArray.function.js.map","import { clonePropsBy } from './clonePropsBy.function.js';\nimport { Subject } from '../subject/Subject.class.js';\n/** used only for apps, otherwise use Support */\nexport function getBaseSupport(templater, subject, castedProps) {\n    const baseSupport = {\n        templater,\n        subject,\n        castedProps,\n        appSupport: undefined,\n    };\n    // baseSupport.appSupport = baseSupport\n    const global = subject.global;\n    global.blocked = [];\n    global.destroy$ = new Subject();\n    return baseSupport;\n}\nexport function upgradeBaseToSupport(templater, // at runtime rendering of a tag, it needs to be married to a new Support()\nsupport, appSupport, castedProps) {\n    ;\n    support.state = [];\n    support.states = [];\n    support.appSupport = appSupport;\n    const props = templater.props; // natural props\n    if (props) {\n        support.propsConfig = clonePropsBy(support, props, castedProps);\n    }\n    return support;\n}\nexport function getHtmlSupport(templater, // at runtime rendering of a tag, it needs to be married to a new Support()\nownerSupport, appSupport, subject, castedProps) {\n    const support = {\n        templater,\n        subject,\n        castedProps,\n        appSupport: undefined,\n    };\n    support.ownerSupport = ownerSupport;\n    support.appSupport = appSupport;\n    return support;\n}\nexport function getSupport(templater, // at runtime rendering of a tag, it needs to be married to a new Support()\nownerSupport, appSupport, subject, castedProps) {\n    const support = getBaseSupport(templater, subject, castedProps);\n    support.ownerSupport = ownerSupport;\n    return upgradeBaseToSupport(templater, support, appSupport, castedProps);\n}\n//# sourceMappingURL=getSupport.function.js.map","import { ValueTypes } from './ValueTypes.enum.js';\nimport { cloneTagJsValue } from './cloneValueArray.function.js';\nimport { deepCompareDepth, shallowCompareDepth } from './hasSupportChanged.function.js';\nimport { PropWatches } from './tag.function.js';\nexport function clonePropsBy(support, props, castProps) {\n    const templater = support.templater;\n    if (templater.tagJsType === ValueTypes.stateRender) {\n        return;\n    }\n    switch (templater.propWatch) {\n        case PropWatches.IMMUTABLE:\n            return support.propsConfig = {\n                latest: props,\n                castProps,\n            };\n        case PropWatches.SHALLOW:\n            return support.propsConfig = {\n                latest: props.map(x => cloneTagJsValue(x, shallowCompareDepth)),\n                castProps,\n            };\n    }\n    return support.propsConfig = {\n        latest: props.map(props => cloneTagJsValue(props, deepCompareDepth)),\n        castProps,\n    };\n}\n//# sourceMappingURL=clonePropsBy.function.js.map","import { castProps } from '../alterProp.function.js';\nimport { syncFunctionProps } from './update/updateExistingTagComponent.function.js';\nimport { executeWrap } from './executeWrap.function.js';\nimport { PropWatches } from './tag.function.js';\nimport { deepCompareDepth, shallowCompareDepth } from './hasSupportChanged.function.js';\nimport { getSupport } from './getSupport.function.js';\n/** creates/returns a function that when called then calls the original component function\n * Gets used as templater.wrapper()\n */\nexport function getTagWrap(templater, result) {\n    // this function gets called by taggedjs\n    const wrapper = function tagFunWrap(newSupport, subject, lastSupport // subject.global.newest\n    ) {\n        // wrap any prop functions that are passed in\n        const castedProps = getCastedProps(templater, newSupport, lastSupport);\n        const ownerSupport = newSupport.ownerSupport;\n        const useSupport = getSupport(templater, ownerSupport, newSupport.appSupport, // ownerSupport.appSupport as AnySupport,\n        subject, castedProps);\n        return executeWrap(templater, result, useSupport, castedProps);\n    };\n    return wrapper;\n}\nexport function getCastedProps(templater, newSupport, lastSupport) {\n    const maxDepth = templater.propWatch === PropWatches.DEEP ? deepCompareDepth : shallowCompareDepth;\n    const props = templater.props;\n    const propsConfig = newSupport.propsConfig;\n    // When defined, this must be an update where my new props have already been made for me\n    let preCastedProps = propsConfig.castProps;\n    const lastPropsConfig = lastSupport?.propsConfig;\n    const lastCastProps = lastPropsConfig?.castProps;\n    if (lastCastProps) {\n        propsConfig.castProps = lastCastProps;\n        preCastedProps = syncFunctionProps(newSupport, lastSupport, lastSupport.ownerSupport, props, maxDepth);\n    }\n    const castedProps = preCastedProps || castProps(props, newSupport, 0);\n    return castedProps;\n}\n//# sourceMappingURL=getTagWrap.function.js.map","// taggedjs-no-compile\nimport { setUseMemory } from '../state/index.js';\nimport { getTemplaterResult } from './getTemplaterResult.function.js';\nimport { tags } from './tag.utils.js';\nimport { getTagWrap } from './getTagWrap.function.js';\nimport { ValueTypes } from './ValueTypes.enum.js';\nlet tagCount = 0;\n/** How to handle checking for prop changes aka argument changes */\nexport var PropWatches;\n(function (PropWatches) {\n    PropWatches[\"DEEP\"] = \"deep\";\n    /** checks all values up to 2 levels deep */\n    PropWatches[\"SHALLOW\"] = \"shallow\";\n    PropWatches[\"NONE\"] = \"none\";\n    PropWatches[\"IMMUTABLE\"] = \"immutable\";\n})(PropWatches || (PropWatches = {}));\n/** Wraps a function tag in a state manager and calls wrapped function on event cycles\n * For single rendering, no event cycles, use: tag.renderOnce = (props) => html``\n */\nexport function tag(tagComponent, propWatch = PropWatches.SHALLOW) {\n    /** function developer triggers */\n    const parentWrap = function tagWrapper(...props) {\n        const templater = getTemplaterResult(propWatch, props);\n        templater.tagJsType = ValueTypes.tagComponent;\n        // attach memory back to original function that contains developer display logic\n        const innerTagWrap = getTagWrap(templater, parentWrap);\n        innerTagWrap.original = tagComponent;\n        /*\n            if(!innerTagWrap.parentWrap) {\n              innerTagWrap.parentWrap = parentWrap as TagWrapper<unknown>\n            }\n        */\n        templater.wrapper = innerTagWrap;\n        return templater;\n    }; // we override the function provided and pretend original is what's returned\n    const tag = tagComponent;\n    parentWrap.original = tagComponent;\n    // group tags together and have hmr pickup\n    tag.tags = tags;\n    tag.setUse = setUseMemory;\n    tag.ValueTypes = ValueTypes;\n    tag.tagIndex = tagCount++; // needed for things like HMR\n    tags.push(parentWrap);\n    return parentWrap;\n}\ntag.renderOnce = renderOnceFn;\nfunction renderOnceFn() {\n    throw new Error('Do not call tag.renderOnce as a function but instead set it as: `(props) => tag.renderOnce = () => html`` `');\n}\n/** Used to create variable scoping when calling a function that lives within a prop container function */\nfunction tagUseFn() {\n    throw new Error('Do not call tag.use as a function but instead set it as: `(props) => tag.use = (use) => html`` `');\n}\n/** deprecated */\n;\ntag.state = tagUseFn;\ntag.use = tagUseFn;\ntag.route = routeFn;\nfunction routeFn(_routeProps) {\n    throw new Error('Do not call tag.route as a function but instead set it as: `tag.route = (routeProps: RouteProps) => (state) => html`` `');\n}\n/** Use to structure and define a browser tag route handler\n * Example: export default tag.route = (routeProps: RouteProps) => (state) => html``\n */\n;\ntag.app = function (_routeTag) {\n    throw new Error('Do not call tag.route as a function but instead set it as: `tag.route = (routeProps: RouteProps) => (state) => html`` `');\n};\ntag.deepPropWatch = tag;\ntag.immutableProps = function immutableProps(tagComponent) {\n    return tag(tagComponent, PropWatches.IMMUTABLE);\n};\ntag.watchProps = function watchProps(tagComponent) {\n    return tag(tagComponent, PropWatches.SHALLOW);\n};\n/* BELOW: Cast functions into setters with no getters */\nObject.defineProperty(tag, 'renderOnce', {\n    set(oneRenderFunction) {\n        oneRenderFunction.tagJsType = ValueTypes.renderOnce;\n    },\n});\n// TODO: deprecate this\nObject.defineProperty(tag, 'state', {\n    set(renderFunction) {\n        ;\n        renderFunction.original = {\n            setUse: setUseMemory,\n            tags,\n        };\n        renderFunction.tagJsType = ValueTypes.stateRender;\n    },\n});\nObject.defineProperty(tag, 'use', {\n    set(renderFunction) {\n        ;\n        renderFunction.original = {\n            setUse: setUseMemory,\n            tags,\n        };\n        renderFunction.tagJsType = ValueTypes.stateRender;\n    },\n});\n//# sourceMappingURL=tag.function.js.map","import { deepEqual } from '../deepFunctions.js';\nimport { deepCompareDepth, immutablePropMatch, shallowPropMatch } from './hasSupportChanged.function.js';\nimport { hasPropLengthsChanged } from './render/renderSupport.function.js';\nimport { PropWatches } from './tag.function.js';\nimport { BasicTypes } from './ValueTypes.enum.js';\n/**\n *\n * @param props\n * @param pastCloneProps\n * @returns WHEN number then props have changed. WHEN false props have not changed\n */\nexport function hasPropChanges(props, // natural props\npastCloneProps, // previously cloned props\npropWatch) {\n    const hasLenChanged = hasPropLengthsChanged(props, pastCloneProps);\n    if (hasLenChanged) {\n        return 11;\n    }\n    switch (propWatch) {\n        case PropWatches.NONE:\n            return 1; // always render\n        case PropWatches.SHALLOW: // determining equal is same as immutable, its the previous cloning step thats different\n            return shallowPropMatch(props, pastCloneProps);\n        case PropWatches.IMMUTABLE:\n            return immutablePropMatch(props, pastCloneProps);\n    }\n    return deepPropChangeCompare(props, pastCloneProps);\n}\nfunction deepPropChangeCompare(props, pastCloneProps) {\n    // DEEP watch\n    let castedProps = props;\n    let castedPastProps = pastCloneProps;\n    castedProps = [...props];\n    castedPastProps = [...(pastCloneProps || [])];\n    const allFunctionsMatch = castedProps.every((value, index) => onePropCompare(value, index, castedProps, castedPastProps));\n    if (!allFunctionsMatch) {\n        return 7; // a change has been detected by function comparisons\n    }\n    return false;\n}\nfunction onePropCompare(value, index, castedProps, castedPastProps) {\n    const compare = castedPastProps[index];\n    if (typeof (value) === BasicTypes.object) {\n        const subCastedProps = { ...value };\n        const subCompareProps = { ...compare || {} };\n        const matched = Object.entries(subCastedProps).every(([key, value]) => compareProps(value, subCompareProps[key], () => {\n            delete subCastedProps[key]; // its a function and not needed to be compared\n            delete subCompareProps[key]; // its a function and not needed to be compared\n        }));\n        return matched;\n    }\n    return compareProps(value, compare, () => {\n        castedProps.splice(index, 1);\n        castedPastProps.splice(index, 1);\n    });\n}\n/** returning a number means true good comparison */\nfunction compareProps(value, compare, onDelete) {\n    if (!(typeof (value) === BasicTypes.function)) {\n        return deepEqual(value, compare, deepCompareDepth) ? 4 : false;\n    }\n    const compareFn = compare;\n    if (!(typeof (compareFn) === BasicTypes.function)) {\n        return false; // its a function now but was not before\n    }\n    // ensure we are comparing apples to apples as function get wrapped\n    const compareOriginal = compare?.original;\n    if (compareOriginal) {\n        compare = compareOriginal;\n    }\n    const original = value.original;\n    if (original) {\n        value = value.original;\n    }\n    const valueString = value.toString();\n    const compareString = compare.toString();\n    if (valueString === compareString) {\n        onDelete();\n        return 5; // both are function the same\n    }\n    onDelete();\n    return 6;\n}\n//# sourceMappingURL=hasPropChanges.function.js.map","import { isArray } from '../isInstance.js';\nimport { hasPropChanges } from './hasPropChanges.function.js';\nimport { BasicTypes } from './ValueTypes.enum.js';\nexport function hasSupportChanged(lastSupport, newTemplater) {\n    const latestProps = newTemplater.props;\n    const propsConfig = lastSupport.propsConfig;\n    const pastCloneProps = propsConfig.latest;\n    const propsChanged = hasPropChanges(latestProps, pastCloneProps, lastSupport.templater.propWatch);\n    return propsChanged;\n}\nexport function immutablePropMatch(props, pastCloneProps) {\n    // if every prop the same, then no changes\n    const len = props.length;\n    for (let index = 0; index < len; ++index) {\n        const prop = props[index];\n        const pastProp = pastCloneProps[index];\n        if (prop !== pastProp) {\n            return 2;\n        }\n    }\n    return false; // false means has not changed\n}\nexport function shallowPropMatch(props, pastCloneProps) {\n    // if every prop the same, then no changes\n    const len = props.length;\n    for (let index = 0; index < len; ++index) {\n        const prop = props[index];\n        const pastProp = pastCloneProps[index];\n        if (isArray(prop) && isArray(pastProp)) {\n            if (prop === pastProp) {\n                continue;\n            }\n            return 3.0; // not equal array\n        }\n        if (typeof (prop) === BasicTypes.function && typeof (pastProp) === BasicTypes.function) {\n            continue; // considered good\n        }\n        if (typeof (prop) === BasicTypes.object) {\n            if (typeof (pastCloneProps) === BasicTypes.object) {\n                const obEntries = Object.entries(prop);\n                for (const subItem of obEntries) {\n                    const result = objectItemMatches(subItem, pastProp);\n                    if (!result) {\n                        return 3.1;\n                    }\n                }\n            }\n            continue; // all sub objects matched\n        }\n        if (prop === pastProp) {\n            continue; // matched good\n        }\n        return 3.3; // not equal\n    }\n    return false; // false means has not changed\n}\nexport const shallowCompareDepth = 3;\nexport const deepCompareDepth = 10;\nfunction objectItemMatches([name, value], pastProp) {\n    const pastValue = pastProp[name];\n    if (typeof (value) === BasicTypes.function && typeof (pastValue) === BasicTypes.function) {\n        return true;\n    }\n    return pastValue === value;\n}\n//# sourceMappingURL=hasSupportChanged.function.js.map","export let paintRemoves = [];\nexport let paintContent = [];\nexport let setContent = [];\n/** array memory that runs and completes BEFORE paintInsertBefores array */\nexport let paintAppends = [];\n/** array memory that runs and completes AFTER paintAppends array */\nexport let paintInsertBefores = [];\nexport let paintAfters = []; // callbacks after all painted\nexport const painting = {\n    locks: 0\n};\nexport function paint() {\n    if (painting.locks > 0) {\n        return;\n    }\n    for (let index = paintRemoves.length - 1; index >= 0; --index) {\n        const toRemove = paintRemoves[index];\n        const parentNode = toRemove.parentNode;\n        parentNode.removeChild(toRemove);\n    }\n    for (const content of paintContent) {\n        content();\n    }\n    for (const [text, textNode] of setContent) {\n        textNode.textContent = text;\n    }\n    for (const now of paintAppends) {\n        now.relative.appendChild(now.element);\n    }\n    for (const { element, relative } of paintInsertBefores) {\n        relative.parentNode.insertBefore(element, relative);\n    }\n    paintRemoves = [];\n    paintContent = [];\n    paintAppends = [];\n    paintInsertBefores = [];\n    setContent = [];\n    for (const now of paintAfters) {\n        now();\n    }\n    paintAfters = [];\n}\n//# sourceMappingURL=paint.function.js.map","import { paintInsertBefores } from './tag/paint.function.js';\nimport { empty } from './tag/ValueTypes.enum.js';\n// Function to update the value of x\nexport function updateBeforeTemplate(value, // value should be casted before calling here\nlastFirstChild) {\n    const textNode = document.createTextNode(value); // never innerHTML\n    paintInsertBefores.push({\n        element: textNode,\n        relative: lastFirstChild,\n    });\n    return textNode;\n}\nexport function castTextValue(value) {\n    switch (value) {\n        case undefined:\n        case false:\n        case null:\n            return empty;\n    }\n    return value;\n}\n//# sourceMappingURL=updateBeforeTemplate.function.js.map","import { getSupportInCycle } from './getSupportInCycle.function.js';\nimport { setUseMemory } from '../state/index.js';\nimport { Subject } from '../subject/index.js';\n// Emits event at the end of a tag being rendered. Use tagClosed$.toPromise() to render a tag after a current tag is done rendering\nsetUseMemory.tagClosed$ = new Subject(undefined, function tagCloser(subscription) {\n    if (!getSupportInCycle()) {\n        subscription.next(); // we are not currently processing so process now\n    }\n});\n// Life cycle 4 - end of life\nexport function runBeforeDestroy(support) {\n    // TODO: We don't need to remove from parents if parent is being destroyed\n    // remove me from my parents\n    const global = support.subject.global;\n    const providers = global.providers;\n    if (providers) {\n        for (const provider of providers) {\n            for (let index = provider.children.length - 1; index >= 0; --index) {\n                const child = provider.children[index];\n                if (child.subject.global === global) {\n                    provider.children.splice(index, 1);\n                }\n            }\n        }\n    }\n    if (global.destroy$) {\n        global.destroy$.next();\n    }\n    support.subject.renderCount = 0; // if it comes back, wont be considered an update\n}\n//# sourceMappingURL=tagRunner.js.map","import { isTagComponent } from '../isInstance.js';\nimport { runBeforeDestroy } from './tagRunner.js';\nexport function getChildTagsToDestroy(childTags) {\n    for (const child of childTags) {\n        const lastArray = child.lastArray;\n        if (lastArray) {\n            getChildTagsToDestroy(lastArray.map(x => x.context));\n            continue;\n        }\n        const global = child.global;\n        if (!global) {\n            continue; // not a support contextItem\n        }\n        const support = global.newest;\n        const iSubs = global.subscriptions;\n        if (iSubs) {\n            iSubs.forEach(iSub => iSub.unsubscribe());\n        }\n        if (isTagComponent(support.templater)) {\n            runBeforeDestroy(support);\n        }\n        const subTags = global.context;\n        getChildTagsToDestroy(subTags);\n    }\n}\nexport function getChildTagsToSoftDestroy(childTags, tags = [], subs = []) {\n    for (const child of childTags) {\n        const global = child.global;\n        if (!global) {\n            continue;\n        }\n        const support = global.newest;\n        if (support) {\n            tags.push(support);\n            const iSubs = global.subscriptions;\n            if (iSubs) {\n                subs.push(...iSubs);\n            }\n        }\n        const subTags = global.context;\n        if (subTags) {\n            getChildTagsToSoftDestroy(subTags, tags, subs);\n        }\n    }\n    return { tags, subs };\n}\n//# sourceMappingURL=getChildTagsToDestroy.function.js.map","import { destroyArray } from './checkDestroyPrevious.function.js';\nimport { paint, painting, paintRemoves } from './paint.function.js';\n/** sets global.deleted on support and all children */\nexport function smartRemoveKids(support, allPromises) {\n    const subject = support.subject;\n    const global = subject.global;\n    const context = global.context;\n    // already set\n    // global.deleted = true\n    const destroys = global.destroys;\n    if (destroys) {\n        return processContextDestroys(destroys, allPromises, subject);\n    }\n    smartRemoveByContext(context, allPromises);\n    destroyClones(global);\n}\n// Elements that have a destroy or ondestroy attribute\nfunction processContextDestroys(destroys, allPromises, subject) {\n    const global = subject.global;\n    const promises = [];\n    destroys.forEach(destroy => {\n        const maybePromise = destroy();\n        const isPromise = maybePromise instanceof Promise;\n        if (isPromise) {\n            promises.push(maybePromise);\n        }\n    });\n    if (promises.length) {\n        const lastPromise = Promise.all(promises)\n            .then(() => {\n            ++painting.locks;\n            // continue to remove\n            smartRemoveByContext(global.context, allPromises);\n            destroyClones(global);\n            --painting.locks;\n            paint();\n        });\n        // run destroy animations\n        allPromises.push(lastPromise);\n        return;\n    }\n    ++painting.locks;\n    smartRemoveByContext(global.context, allPromises);\n    destroyClones(global);\n    --painting.locks;\n    paint();\n}\nfunction smartRemoveByContext(context, allPromises) {\n    for (const subject of context) {\n        if (subject.withinOwnerElement) {\n            continue; // i live within my owner variable. I will be deleted with owner\n        }\n        const lastArray = subject.lastArray;\n        if (lastArray) {\n            destroyArray(subject, lastArray);\n            continue;\n        }\n        // regular values, no placeholders\n        const elm = subject.simpleValueElm;\n        if (elm) {\n            delete subject.simpleValueElm;\n            paintRemoves.push(elm);\n            continue;\n        }\n        const subGlobal = subject.global;\n        if (subGlobal === undefined) {\n            continue; // subject\n        }\n        if (subGlobal.deleted === true) {\n            continue; // already deleted\n        }\n        subGlobal.deleted = true;\n        const oldest = subGlobal.oldest;\n        if (oldest) {\n            smartRemoveKids(oldest, allPromises);\n            continue;\n        }\n    }\n}\nfunction destroyClones(global) {\n    // const global = subject.global\n    const htmlDomMeta = global.htmlDomMeta;\n    // check subjects that may have clones attached to them\n    htmlDomMeta.forEach(clone => {\n        const marker = clone.marker;\n        if (marker) {\n            paintRemoves.push(marker);\n        }\n        const dom = clone.domElement;\n        if (!dom) {\n            return;\n        }\n        paintRemoves.push(dom);\n    });\n    // htmlDomMeta.length = 0\n}\n//# sourceMappingURL=smartRemoveKids.function.js.map","import { getChildTagsToDestroy } from './getChildTagsToDestroy.function.js';\nimport { smartRemoveKids } from './smartRemoveKids.function.js';\nimport { runBeforeDestroy } from './tagRunner.js';\nexport function destroySupport(support) {\n    const global = support.subject.global;\n    global.deleted = true;\n    support.subject.renderCount = 0; // if it comes back, wont be considered an update\n    const promises = [];\n    const context = global.context;\n    getChildTagsToDestroy(context);\n    if (global.destroy$) {\n        runBeforeDestroy(support);\n    }\n    smartRemoveKids(support, promises);\n    return promises;\n}\n//# sourceMappingURL=destroySupport.function.js.map","import { paintRemoves } from '../paint.function.js';\nimport { destroySupport } from '../destroySupport.function.js';\nexport function compareArrayItems(value, index, lastArray, removed, counts) {\n    const newLength = value.length - 1;\n    const at = index - removed;\n    const lessLength = at < 0 || newLength < at;\n    const prevContext = lastArray[index].context;\n    if (lessLength) {\n        destroyArrayItem(prevContext, counts);\n        return 1;\n    }\n    const oldKey = prevContext.value.arrayValue;\n    const newValueTag = value[index];\n    const result = runArrayItemDiff(oldKey, newValueTag, prevContext, counts, lastArray, index);\n    return result;\n}\nfunction runArrayItemDiff(oldKey, newValueTag, prevContext, counts, lastArray, index) {\n    const isDiff = newValueTag && oldKey !== newValueTag.arrayValue;\n    if (isDiff) {\n        // Intended to protect an array from adding and then immediately deleting\n        /*\n        // TODO: Does this code protect bad array keying?\n        if(prevContext.renderCount === 0) {\n          const newKey = newValueTag.arrayValue\n          console.warn('Possible array issue. Array is attempting to create/delete same items. Either html``.key is not unique or array changes with every render', {\n            oldKey,\n            newKey,\n            \n            prevValue: prevContext.value,\n            prevContext,\n          })\n    \n          paintAfters.push(() => {\n            destroyArrayItemByGlobal(prevContext.global, prevContext)\n            paintAfters.shift() // prevent endless recursion\n            paint()\n          })\n    \n          return 1\n        }\n        */\n        destroyArrayItem(prevContext, counts);\n        lastArray.splice(index, 1);\n        return 2;\n    }\n    return 0;\n}\nexport function destroyArrayItem(item, counts) {\n    const global = item.global;\n    destroyArrayItemByGlobal(global, item);\n    ++counts.removed;\n}\nfunction destroyArrayItemByGlobal(global, item) {\n    if (global) {\n        const support = global.oldest;\n        destroySupport(support);\n    }\n    else {\n        const element = item.simpleValueElm;\n        delete item.simpleValueElm;\n        paintRemoves.push(element);\n    }\n}\n//# sourceMappingURL=compareArrayItems.function.js.map","// Functions in here are attached as ContextItem.checkValueChange\nimport { processUpdateRegularValue } from './update/processRegularValue.function.js';\nimport { destroyArrayItem } from './update/compareArrayItems.function.js';\nimport { isArray } from '../isInstance.js';\nimport { paintRemoves } from './paint.function.js';\nimport { BasicTypes } from './ValueTypes.enum.js';\nexport function checkArrayValueChange(newValue, subject) {\n    // no longer an array?\n    if (!isArray(newValue)) {\n        const lastArray = subject.lastArray;\n        destroyArray(subject, lastArray);\n        return 9; // 'array'\n    }\n    return false;\n}\nexport function destroyArray(subject, lastArray) {\n    const counts = { added: 0, removed: 0 };\n    for (let index = 0; index < lastArray.length; ++index) {\n        destroyArrayItem(lastArray[index], counts);\n    }\n    delete subject.lastArray;\n}\nexport function checkSimpleValueChange(newValue, subject) {\n    const isBadValue = newValue === null || newValue === undefined;\n    if (isBadValue || !(typeof (newValue) === BasicTypes.object)) {\n        // This will cause all other values to render\n        processUpdateRegularValue(newValue, subject);\n        return -1; // no need to destroy, just update display\n    }\n    const elm = subject.simpleValueElm;\n    delete subject.simpleValueElm;\n    paintRemoves.push(elm);\n    return 6; // 'changed-simple-value'\n}\n//# sourceMappingURL=checkDestroyPrevious.function.js.map","import { castTextValue, updateBeforeTemplate } from '../../updateBeforeTemplate.function.js';\nimport { setContent } from '../paint.function.js';\nimport { checkSimpleValueChange } from '../checkDestroyPrevious.function.js';\nexport function processUpdateRegularValue(value, contextItem) {\n    const castedValue = castTextValue(value);\n    const oldClone = contextItem.simpleValueElm; // placeholder\n    setContent.push([castedValue, oldClone]);\n}\n/** Used during updates that were another value/tag first but now simple string */\nexport function processNowRegularValue(value, subject) {\n    subject.checkValueChange = checkSimpleValueChange;\n    const before = subject.placeholder;\n    const castedValue = castTextValue(value);\n    // Processing of regular values\n    subject.simpleValueElm = updateBeforeTemplate(castedValue, before);\n}\n//# sourceMappingURL=processRegularValue.function.js.map","export function getNewGlobal(subject) {\n    ;\n    subject.renderCount = subject.renderCount || 0;\n    // ;(subject as SupportContextItem).renderCount = 0\n    return subject.global = {};\n}\n//# sourceMappingURL=getNewGlobal.function.js.map","import { BasicTypes, ValueTypes } from './ValueTypes.enum.js';\nexport function isLikeTags(support0, // new\nsupport1) {\n    const templater0 = support0.templater;\n    const templater1 = support1.templater;\n    const tag0 = templater0?.tag || support0;\n    const tag1 = templater1.tag; // || (support1 as any)\n    if (templater0?.tagJsType === ValueTypes.stateRender) {\n        return templater0.dom === templater1.dom;\n    }\n    switch (tag0.tagJsType) {\n        case ValueTypes.dom: {\n            if (tag1?.tagJsType !== ValueTypes.dom) {\n                return false; // tag0 is not even same type\n            }\n            return isLikeDomTags(tag0, tag1);\n        }\n        case ValueTypes.tag: {\n            const like = isLikeStringTags(tag0, tag1, support0, support1);\n            return like;\n        }\n    }\n    throw new Error(`unknown tagJsType of ${tag0.tagJsType}`);\n}\n// used when compiler was used\nexport function isLikeDomTags(tag0, tag1) {\n    const domMeta0 = tag0.dom;\n    const domMeta1 = tag1.dom;\n    return domMeta0 === domMeta1;\n}\n// used for no compiling\nfunction isLikeStringTags(tag0, tag1, support0, // new\nsupport1) {\n    const strings0 = tag0.strings;\n    const strings1 = tag1.strings;\n    if (strings0.length !== strings1.length) {\n        return false;\n    }\n    const everyStringMatched = strings0.every((string, index) => strings1[index].length === string.length // performance, just compare length of strings // TODO: Document this\n    // strings1[index] === string // slower\n    );\n    if (!everyStringMatched) {\n        return false;\n    }\n    const values0 = support0.templater.values || tag0.values;\n    const values1 = support1.templater.values || tag1.values;\n    return isLikeValueSets(values0, values1);\n}\nexport function isLikeValueSets(values0, values1) {\n    const valuesLengthsMatch = values0.length === values1.length;\n    if (!valuesLengthsMatch) {\n        return false;\n    }\n    const allVarsMatch = values1.every((value, index) => {\n        const compareTo = values0[index];\n        const isFunctions = typeof (value) === BasicTypes.function && typeof (compareTo) === BasicTypes.function;\n        if (isFunctions) {\n            const stringMatch = value.toString() === compareTo.toString();\n            if (stringMatch) {\n                return true;\n            }\n            return false;\n        }\n        return true;\n    });\n    if (allVarsMatch) {\n        return true;\n    }\n    return false;\n}\n//# sourceMappingURL=isLikeTags.function.js.map","import { paintContent } from \"../../tag/paint.function.js\";\n// Maybe more performant for updates but seemingly slower for first renders\nexport function howToSetInputValue(element, name, value) {\n    paintContent.push(() => {\n        howToSetFirstInputValue(element, name, value);\n    });\n}\nexport function howToSetFirstInputValue(element, name, value) {\n    if (value === undefined || value === false || value === null) {\n        element.removeAttribute(name);\n        return;\n    }\n    element.setAttribute(name, value);\n}\n//# sourceMappingURL=howToSetInputValue.function.js.map","import { paintAfters, paintContent } from \"../../tag/paint.function.js\";\n/** handles init, destroy, autofocus, autoselect, style., class. */\nexport function specialAttribute(name, value, element, specialName, support, counts) {\n    switch (specialName) {\n        // case 'oninit' as any:\n        case 'init': {\n            const stagger = counts.added;\n            // run delayed after elements placed down\n            paintAfters.push(() => {\n                const event = {\n                    target: element,\n                    stagger,\n                };\n                value(event); // call init/oninit\n            });\n            return;\n        }\n        case 'destroy': {\n            const stagger = ++counts.removed;\n            const global = support.subject.global;\n            global.destroys = global.destroys || [];\n            global.destroys.push(() => {\n                const event = {\n                    target: element,\n                    stagger,\n                };\n                return value(event); // call destroy/ondestroy\n            });\n            return;\n        }\n        case 'autofocus':\n            paintAfters.push(() => element.focus());\n            return;\n        case 'autoselect':\n            paintAfters.push(() => element.select());\n            return;\n        case 'style': {\n            const names = name.split('.');\n            paintContent.push(() => element.style[names[1]] = value); // attribute changes should come first\n            return;\n        }\n        case 'class':\n            processSpecialClass(name, value, element);\n            return;\n    }\n    throw new Error(`Invalid special attribute of ${specialName}. ${name}`);\n}\nfunction processSpecialClass(name, value, element) {\n    const names = name.split('.');\n    names.shift(); // remove class\n    // truthy\n    if (value) {\n        for (const name of names) {\n            paintContent.push(() => element.classList.add(name));\n        }\n        return;\n    }\n    // falsy\n    for (const name of names) {\n        paintContent.push(() => element.classList.remove(name));\n    }\n}\n//# sourceMappingURL=specialAttribute.js.map","export function handleProviderChanges(appSupport, provider) {\n    const tagsWithProvider = getTagsWithProvider(appSupport, provider);\n    return tagsWithProvider;\n}\n/** Updates and returns memory of tag providers */\nfunction getTagsWithProvider(support, provider, memory = []) {\n    const subject = support.subject;\n    memory.push({\n        support,\n        renderCount: subject.renderCount,\n        provider,\n    });\n    const childTags = provider.children;\n    for (let index = childTags.length - 1; index >= 0; --index) {\n        const child = childTags[index];\n        const cSubject = child.subject;\n        memory.push({\n            support: child,\n            renderCount: cSubject.renderCount,\n            provider,\n        });\n    }\n    return memory;\n}\n//# sourceMappingURL=handleProviderChanges.function.js.map","import { isTagComponent } from \"../../isInstance.js\";\nimport { providersChangeCheck } from \"../../state/providersChangeCheck.function.js\";\nimport { checkRenderUp, isInlineHtml } from \"../../tag/render/renderSupport.function.js\";\nimport { ValueTypes } from \"../../tag/ValueTypes.enum.js\";\nexport function getUpTags(support, supports = []) {\n    const global = support.subject.global;\n    const templater = support.templater;\n    const inlineHtml = isInlineHtml(templater);\n    const ownerSupport = support.ownerSupport;\n    if (global.locked) {\n        supports.push(support);\n        return supports;\n    }\n    // is it just a vanilla tag, not component?\n    if (inlineHtml) {\n        return getUpTags(ownerSupport, supports);\n    }\n    const newSupport = support; // global.newest as AnySupport\n    const isComponent = isTagComponent(newSupport.templater);\n    const tagJsType = support.templater.tagJsType;\n    const canContinueUp = ownerSupport && tagJsType !== ValueTypes.stateRender;\n    const continueUp = canContinueUp && (!isComponent || checkRenderUp(ownerSupport, newSupport.templater, newSupport));\n    const proSupports = providersChangeCheck(newSupport);\n    supports.push(...proSupports);\n    if (continueUp) {\n        getUpTags(ownerSupport, supports);\n        if (isComponent) {\n            supports.push(newSupport);\n        }\n        return supports; // more to keep going up, do not push this child for review\n    }\n    supports.push(newSupport);\n    return supports;\n}\n//# sourceMappingURL=getUpTags.function.js.map","import { deepEqual } from '../../deepFunctions.js';\nimport { renderExistingReadyTag } from './renderExistingTag.function.js';\nimport { ValueTypes } from '../ValueTypes.enum.js';\nimport { PropWatches } from '../index.js';\nimport { deepCompareDepth, immutablePropMatch, shallowPropMatch } from '../hasSupportChanged.function.js';\nexport function isInlineHtml(templater) {\n    return ValueTypes.templater === templater.tagJsType;\n}\n/** Main function used by all other callers to render/update display of a tag component */\nexport function renderSupport(support) {\n    const global = support.subject.global;\n    const templater = support.templater;\n    const inlineHtml = isInlineHtml(templater);\n    const ownerSupport = support.ownerSupport;\n    if (global.locked) {\n        global.blocked.push(support);\n        return support;\n    }\n    // is it just a vanilla tag, not component?\n    if (inlineHtml) {\n        const result = renderInlineHtml(ownerSupport, support);\n        return result;\n    }\n    global.locked = true;\n    const subject = support.subject;\n    if (global.blocked.length) {\n        support = global.blocked.pop();\n        global.blocked = [];\n    }\n    const tag = renderExistingReadyTag(global.newest, support, ownerSupport, subject);\n    delete global.locked;\n    return tag;\n}\nexport function renderInlineHtml(ownerSupport, support) {\n    const ownGlobal = ownerSupport.subject.global;\n    if (!ownGlobal || ownGlobal.deleted === true) {\n        return support;\n    }\n    // ??? new change\n    const newest = ownGlobal.newest || ownerSupport;\n    const result = renderSupport(newest);\n    return result;\n}\nexport function checkRenderUp(ownerSupport, templater, support) {\n    const selfPropChange = hasPropsToOwnerChanged(templater, support);\n    // render owner up first and that will cause me to re-render\n    if (ownerSupport && selfPropChange) {\n        return true;\n    }\n    return false;\n}\nfunction hasPropsToOwnerChanged(templater, support) {\n    const nowProps = templater.props;\n    const propsConfig = support.propsConfig;\n    const latestProps = propsConfig.latest;\n    const compareLen = hasPropLengthsChanged(nowProps, latestProps);\n    if (compareLen) {\n        return true;\n    }\n    switch (templater.propWatch) {\n        case PropWatches.IMMUTABLE:\n            return immutablePropMatch(nowProps, latestProps);\n        case PropWatches.SHALLOW:\n            return shallowPropMatch(nowProps, latestProps);\n    }\n    return !deepEqual(nowProps, latestProps, deepCompareDepth);\n}\nexport function hasPropLengthsChanged(nowProps, latestProps) {\n    const nowLen = nowProps.length;\n    const latestLen = latestProps.length;\n    /*\n    const noLength = nowProps && nowLen === 0 && latestLen === 0\n  \n    if(noLength) {\n      return false\n    }\n    */\n    return nowLen !== latestLen;\n}\n//# sourceMappingURL=renderSupport.function.js.map","import { handleProviderChanges } from './handleProviderChanges.function.js';\nexport function providersChangeCheck(support) {\n    const global = support.subject.global;\n    const providers = global.providers;\n    if (!providers) {\n        return [];\n    }\n    const prosWithChanges = [];\n    // reset clones\n    for (const provider of providers) {\n        const owner = provider.owner;\n        const hasChange = handleProviderChanges(owner, provider);\n        prosWithChanges.push(...hasChange.map(x => x.support));\n    }\n    return prosWithChanges;\n}\n//# sourceMappingURL=providersChangeCheck.function.js.map","import { paint, painting } from '../../tag/paint.function.js';\nimport { renderSupport } from '../../tag/render/renderSupport.function.js';\nexport function renderTagUpdateArray(supports) {\n    ++painting.locks;\n    supports.forEach(mapTagUpdate);\n    --painting.locks;\n    paint();\n}\nfunction mapTagUpdate(support) {\n    const global = support.subject.global;\n    if (!global) {\n        return; // while rendering a parent, a child may have been deleted (pinbowl)\n    }\n    renderSupport(global.newest);\n}\n//# sourceMappingURL=renderTagArray.function.js.map","// taggedjs-no-compile\n/** File largely responsible for reacting to element events, such as onclick */\nimport { isPromise, isTagComponent } from '../../isInstance.js';\nimport { renderSupport } from '../../tag/render/renderSupport.function.js';\nimport { getUpTags } from './getUpTags.function.js';\nimport { renderTagUpdateArray } from './renderTagArray.function.js';\nconst noData = 'no-data-ever';\nconst promiseNoData = 'promise-no-data-ever';\nexport function bindSubjectCallback(value, support) {\n    const global = support.subject.global;\n    // MAIN EVENT CALLBACK PROCESSOR\n    const subjectFunction = function (element, args) {\n        if (global.deleted === true) {\n            return;\n        }\n        // const newest = global.newest as AnySupport // || subjectFunction.support\n        return runTagCallback(subjectFunction.tagFunction, subjectFunction.support, // newest\n        element, args);\n    };\n    // link back to original. Mostly used for <div oninit ondestroy> animations\n    subjectFunction.tagFunction = value;\n    subjectFunction.support = support;\n    return subjectFunction;\n}\nexport function runTagCallback(value, support, bindTo, args) {\n    // get actual component owner not just the html`` support\n    let component = support;\n    while (component.ownerSupport && !isTagComponent(component.templater)) {\n        component = component.ownerSupport;\n    }\n    const subject = component.subject;\n    const global = subject.global; // tag.subject.global as TagGlobal\n    global.locked = true; // prevent another render from re-rendering this tag\n    // ACTUAL CALLBACK TO ORIGINAL FUNCTION\n    const callbackResult = value.apply(bindTo, args);\n    delete global.locked;\n    const result = afterTagCallback(callbackResult, component);\n    return result;\n}\nexport function afterTagCallback(callbackResult, eventHandlerSupport) {\n    const global = eventHandlerSupport.subject.global; // tag.subject.global as SupportTagGlobal\n    return renderCallbackSupport(eventHandlerSupport, callbackResult, global);\n}\nfunction renderCallbackSupport(last, callbackResult, global) {\n    const tagsToUpdate = getUpTags(last);\n    renderTagUpdateArray(tagsToUpdate);\n    return checkAfterCallbackPromise(callbackResult, last, global);\n}\nexport function checkAfterCallbackPromise(callbackResult, last, global) {\n    if (isPromise(callbackResult)) {\n        const global0 = last.subject.global;\n        global0.locked = true;\n        return callbackResult.then(() => {\n            if (global.deleted === true) {\n                return promiseNoData; // tag was deleted during event processing\n            }\n            const global1 = last.subject.global;\n            delete global1.locked;\n            const tagsToUpdate = getUpTags(last);\n            renderTagUpdateArray(tagsToUpdate);\n            return promiseNoData;\n        });\n    }\n    return noData;\n}\nexport function runBlocked(tag) {\n    const global = tag.subject.global;\n    const blocked = global.blocked;\n    for (const block of blocked) {\n        const lastResult = renderSupport(block);\n        global.newest = lastResult;\n    }\n    global.blocked = [];\n    return global.newest;\n}\n//# sourceMappingURL=bindSubjectCallback.function.js.map","// taggedjs-no-compile\nimport { specialAttribute } from './specialAttribute.js';\nimport { processTagCallbackFun } from './processAttribute.function.js';\nimport { BasicTypes } from '../../tag/ValueTypes.enum.js';\nconst actions = ['init', 'destroy']; // oninit ondestroy\nexport function processDynamicNameValueAttribute(attrName, value, contextItem, element, howToSet, support, counts, isSpecial) {\n    contextItem.attrName = attrName;\n    contextItem.element = element;\n    contextItem.howToSet = howToSet;\n    if (typeof (value) === BasicTypes.function) {\n        if (isSpecial && actions.includes(attrName)) {\n            specialAttribute(attrName, value, element, attrName, support, counts);\n            return;\n        }\n        return processTagCallbackFun(contextItem, value, support, attrName, element);\n    }\n    contextItem.attrName = attrName;\n    contextItem.element = element;\n    contextItem.howToSet = howToSet;\n    contextItem.isSpecial = isSpecial;\n    return processNonDynamicAttr(attrName, value, element, howToSet, counts, support, isSpecial);\n}\nexport function processNonDynamicAttr(attrName, value, element, howToSet, counts, support, isSpecial) {\n    if (isSpecial) {\n        return specialAttribute(attrName, value, element, isSpecial, support, counts);\n    }\n    howToSet(element, attrName, value);\n}\n//# sourceMappingURL=processNameValueAttribute.function.js.map","export function addSupportEventListener(support, eventName, element, callback) {\n    const elm = support.appElement;\n    // cast events that do not bubble up into ones that do\n    if (eventName === 'blur') {\n        eventName = 'focusout';\n    }\n    const replaceEventName = '_' + eventName;\n    // const replaceEventName = eventName\n    const global = support.subject.global;\n    const eventReg = global.events;\n    if (!eventReg[eventName]) {\n        const listener = function eventCallback(event) {\n            event.originalStopPropagation = event.stopPropagation;\n            bubbleEvent(event, replaceEventName, event.target);\n        };\n        eventReg[eventName] = listener;\n        elm.addEventListener(eventName, listener);\n    }\n    // attach to element but not as \"_click\" and \"_keyup\"\n    ;\n    element[replaceEventName] = callback;\n    element[eventName] = callback;\n}\nfunction bubbleEvent(event, replaceEventName, target) {\n    const callback = target[replaceEventName];\n    if (callback) {\n        let stopped = false;\n        event.stopPropagation = function () {\n            stopped = true;\n            event.originalStopPropagation.call(event);\n        };\n        callback(event);\n        if (event.defaultPrevented || stopped) {\n            return;\n        }\n    }\n    const parentNode = target.parentNode;\n    if (parentNode) {\n        bubbleEvent(event, replaceEventName, parentNode);\n    }\n}\n//# sourceMappingURL=addSupportEventListener.function.js.map","import { addSupportEventListener } from './addSupportEventListener.function.js';\nexport function processAttributeFunction(element, newAttrValue, support, attrName) {\n    const fun = function (...args) {\n        return fun.tagFunction(element, args);\n    };\n    // access to original function\n    fun.tagFunction = newAttrValue;\n    fun.support = support;\n    addSupportEventListener(support.appSupport, attrName, element, // support.appSupport.appElement as Element,\n    fun);\n}\n//# sourceMappingURL=processAttributeCallback.function.js.map","/** Looking for (class | style) followed by a period */\nexport function isSpecialAttr(attrName) {\n    if (attrName.startsWith('class.')) {\n        return 'class';\n    }\n    const specialAction = isSpecialAction(attrName);\n    if (specialAction !== false) {\n        return true;\n    }\n    if (attrName.startsWith('style.')) {\n        return 'style';\n    }\n    return false;\n}\nexport function isSpecialAction(attrName) {\n    switch (attrName) {\n        case 'autoselect':\n            return 'autoselect';\n        case 'autofocus':\n            return 'autofocus';\n        case 'oninit': // when read in compile process\n        case 'init': // when read in realtime\n            return 'oninit';\n        case 'ondestroy': // when read in compile process\n        case 'destroy': // when read in realtime\n            return 'destroy';\n    }\n    return false;\n}\n//# sourceMappingURL=isSpecialAttribute.function.js.map","import { processAttributeEmit } from '../interpolations/attributes/processAttribute.function.js';\nimport { updateNameOnlyAttrValue } from '../interpolations/attributes/updateAttribute.function.js';\nconst emptyCounts = { added: 0, removed: 0 };\nexport function processUpdateAttrContext(values, value, contextItem, ownerSupport) {\n    if (contextItem.isNameOnly) {\n        updateNameOnlyAttrValue(values, value, contextItem.value, contextItem.element, // global.element as Element,\n        ownerSupport, contextItem.howToSet, [], // Context, but we dont want to alter current\n        emptyCounts);\n        contextItem.value = value;\n        return;\n    }\n    const element = contextItem.element;\n    processAttributeEmit(value, contextItem.attrName, contextItem, element, ownerSupport, contextItem.howToSet, contextItem.isSpecial, emptyCounts);\n    contextItem.value = value;\n    return;\n}\n//# sourceMappingURL=processUpdateAttrContext.function.js.map","// taggedjs-no-compile\nimport { BasicTypes } from '../../tag/ValueTypes.enum.js';\nimport { paintContent } from '../../tag/paint.function.js';\nimport { isNoDisplayValue, processNameOnlyAttrValue } from './processAttribute.function.js';\nexport function updateNameOnlyAttrValue(values, attrValue, lastValue, element, ownerSupport, howToSet, context, counts) {\n    // check to remove previous attribute(s)\n    if (lastValue) {\n        if (isNoDisplayValue(attrValue)) {\n            element.removeAttribute(lastValue);\n            return;\n        }\n        if (typeof (lastValue) === BasicTypes.object) {\n            const isObStill = typeof (attrValue) === BasicTypes.object;\n            if (isObStill) {\n                for (const name in lastValue) {\n                    // if((attrValue as any)[name]) {\n                    if (name in attrValue) {\n                        continue;\n                    }\n                    paintContent.push(function paintContent() {\n                        element.removeAttribute(name);\n                    });\n                }\n            }\n            else {\n                for (const name in lastValue) {\n                    paintContent.push(function paintContent() {\n                        element.removeAttribute(name);\n                    });\n                }\n            }\n        }\n    }\n    processNameOnlyAttrValue(values, attrValue, element, ownerSupport, howToSet, context, counts);\n}\n//# sourceMappingURL=updateAttribute.function.js.map","// taggedjs-no-compile\nimport { specialAttribute } from './specialAttribute.js';\nimport { isFunction, isObject, isSubjectInstance } from '../../isInstance.js';\nimport { bindSubjectCallback } from './bindSubjectCallback.function.js';\nimport { BasicTypes, ValueTypes, empty } from '../../tag/ValueTypes.enum.js';\nimport { paintContent } from '../../tag/paint.function.js';\nimport { processDynamicNameValueAttribute, processNonDynamicAttr } from './processNameValueAttribute.function.js';\nimport { addOneContext, checkSimpleValueChange } from '../../tag/index.js';\nimport { processAttributeFunction } from './processAttributeCallback.function.js';\nimport { isSpecialAttr } from './isSpecialAttribute.function.js';\nimport { processUpdateAttrContext } from '../../tag/processUpdateAttrContext.function.js';\nimport { blankHandler } from '../optimizers/attachDomElements.function.js';\n/** MAIN FUNCTION. Sets attribute value, subscribes to value updates  */\nexport function processAttribute(values, attrName, element, support, howToSet, //  = howToSetInputValue\ncontext, isSpecial, counts, value) {\n    const nameVar = getTagJsVar(attrName);\n    const isNameVar = nameVar >= 0;\n    if (isNameVar) {\n        const value = values[nameVar];\n        const contextItem = addOneContext(value, context, true);\n        contextItem.isAttr = true;\n        contextItem.element = element;\n        contextItem.howToSet = howToSet;\n        contextItem.isNameOnly = true;\n        // how to process value updates\n        contextItem.handler = (newValue, newValues) => processUpdateAttrContext(newValues, newValue, contextItem, support);\n        processNameOnlyAttrValue(values, value, element, support, howToSet, context, counts);\n        return;\n    }\n    const valueVar = getTagJsVar(value);\n    if (valueVar >= 0) {\n        const value = values[valueVar];\n        const contextItem = {\n            isAttr: true,\n            element,\n            attrName: attrName,\n            checkValueChange: checkSimpleValueChange,\n            withinOwnerElement: true,\n        };\n        context.push(contextItem);\n        const isSubject = isSubjectInstance(contextItem.value);\n        if (isSubject) {\n            return processNameValueAttributeAttrSubject(attrName, contextItem, element, support, howToSet, isSpecial, counts);\n        }\n        contextItem.handler = (newValue, newValues) => processUpdateAttrContext(newValues, newValue, contextItem, support);\n        /*\n        processNameOnlyAttrValue(\n          values,\n          newValue as any,\n          element as Element,\n          support,\n          howToSet as HowToSet,\n          context,\n          counts,\n        )\n        */\n        processDynamicNameValueAttribute(attrName, value, contextItem, element, howToSet, support, counts, isSpecial);\n        contextItem.value = value;\n        return;\n    }\n    return processNonDynamicAttr(attrName, value, element, howToSet, counts, support, isSpecial);\n}\nexport function processNameOnlyAttrValue(values, attrValue, element, ownerSupport, howToSet, context, counts) {\n    if (isNoDisplayValue(attrValue)) {\n        return;\n    }\n    // process an object of attributes ${{class:'something, checked:true}}\n    if (typeof attrValue === BasicTypes.object) {\n        for (const name in attrValue) {\n            const value = attrValue[name];\n            processAttribute(values, name, element, ownerSupport, howToSet, context, isSpecialAttr(name), // only object variables are evaluated for is special attr\n            counts, value);\n        }\n        return;\n    }\n    // regular attributes\n    if (attrValue.length === 0) {\n        return; // ignore, do not set at this time\n    }\n    howToSet(element, attrValue, empty);\n}\n/** Processor for flat attributes and object attributes */\nfunction processNameValueAttributeAttrSubject(attrName, contextItem, element, support, howToSet, isSpecial, counts) {\n    if (isSpecial) {\n        paintContent.push(function paintContent() {\n            element.removeAttribute(attrName);\n        });\n    }\n    const contextValueSubject = contextItem.value;\n    if (isSubjectInstance(contextValueSubject)) {\n        contextItem.handler = blankHandler;\n        const callback = function processAttrCallback(newAttrValue) {\n            processAttributeEmit(newAttrValue, attrName, contextItem, element, support, howToSet, isSpecial, counts);\n        };\n        // 🗞️ Subscribe. Above callback called immediately since its a ValueSubject()\n        const sub = contextValueSubject.subscribe(callback);\n        // Record subscription for later unsubscribe when element destroyed\n        const global = contextItem.global;\n        const subs = global.subscriptions = global.subscriptions || [];\n        subs.push(sub);\n    }\n    processAttributeEmit(contextItem.value, attrName, contextItem, element, support, howToSet, isSpecial, counts);\n    return;\n}\nexport function processAttributeEmit(newAttrValue, attrName, subject, element, support, howToSet, isSpecial, counts) {\n    // should the function be wrapped so every time its called we re-render?\n    if (isFunction(newAttrValue)) {\n        return callbackFun(support, newAttrValue, element, attrName, isSpecial, howToSet, subject, counts);\n    }\n    return processAttributeSubjectValue(newAttrValue, element, attrName, isSpecial, howToSet, support, counts);\n}\nexport function processAttributeSubjectValue(newAttrValue, element, attrName, special, howToSet, support, counts) {\n    // process adding/removing style. class. (false means remove)\n    if (special !== false) {\n        specialAttribute(attrName, newAttrValue, element, special, // string name of special\n        support, counts);\n        return;\n    }\n    switch (newAttrValue) {\n        case undefined:\n        case false:\n        case null:\n            paintContent.push(function paintContentPush() {\n                element.removeAttribute(attrName);\n            });\n            return;\n    }\n    if (isFunction(newAttrValue)) {\n        return processAttributeFunction(element, newAttrValue, support, attrName);\n    }\n    // value is 0\n    howToSet(element, attrName, newAttrValue);\n}\nfunction callbackFun(support, newAttrValue, element, attrName, isSpecial, howToSet, subject, counts) {\n    const wrapper = support.templater.wrapper;\n    const tagJsType = wrapper?.tagJsType || wrapper?.original?.tagJsType;\n    const oneRender = tagJsType === ValueTypes.renderOnce;\n    if (!oneRender) {\n        return processTagCallbackFun(subject, newAttrValue, support, attrName, element);\n    }\n    return processAttributeSubjectValue(newAttrValue, element, attrName, isSpecial, howToSet, support, counts);\n}\nexport function processTagCallbackFun(subject, newAttrValue, support, attrName, element) {\n    const prevFun = subject.value;\n    if (prevFun && prevFun.tagFunction && prevFun.support) {\n        prevFun.tagFunction = newAttrValue;\n        prevFun.support = support;\n        return prevFun;\n    }\n    // tag has state and will need all functions wrapped to cause re-renders\n    newAttrValue = bindSubjectCallback(newAttrValue, support);\n    return processAttributeFunction(element, newAttrValue, support, attrName);\n}\nfunction getTagJsVar(attrPart) {\n    if (isObject(attrPart) && 'tagJsVar' in attrPart)\n        return attrPart.tagJsVar;\n    return -1;\n    // return (attrPart as TagVarIdNum)?.tagJsVar || -1\n}\nexport function isNoDisplayValue(attrValue) {\n    return undefined === attrValue || null === attrValue || false === attrValue;\n}\n//# sourceMappingURL=processAttribute.function.js.map","// taggedjs-no-compile\nimport { processFirstSubjectValue } from \"../../tag/update/processFirstSubjectValue.function.js\";\nimport { howToSetFirstInputValue } from \"../attributes/howToSetInputValue.function.js\";\nimport { paintAppends, paintInsertBefores } from \"../../tag/paint.function.js\";\nimport { processAttribute } from \"../attributes/processAttribute.function.js\";\nimport { addOneContext } from \"../../tag/index.js\";\nimport { isSubjectInstance } from \"../../isInstance.js\";\nimport { empty } from \"../../tag/ValueTypes.enum.js\";\nimport { updateExistingValue } from \"../../tag/update/updateExistingValue.function.js\";\nexport const blankHandler = () => undefined;\nconst someDiv = (typeof document === 'object' && document.createElement('div')); // used for content cleaning\nexport function attachDomElements(nodes, values, support, counts, // used for animation stagger computing\ncontext, depth, // used to know if dynamic variables live within parent owner tag/support\nappendTo, insertBefore, subs = []) {\n    const dom = [];\n    if (appendTo && insertBefore === undefined) {\n        insertBefore = document.createTextNode(empty);\n        paintAppends.push({\n            element: insertBefore,\n            relative: appendTo,\n        });\n        appendTo = undefined;\n    }\n    for (let index = 0; index < nodes.length; ++index) {\n        const node = nodes[index];\n        const value = node.v;\n        const isNum = !isNaN(value);\n        if (isNum) {\n            const index = context.length;\n            const value = values[index];\n            attachDynamicDom(value, index, context, support, subs, counts, depth, appendTo, insertBefore);\n            continue;\n        }\n        const newNode = {}; // DomObjectText\n        dom.push(newNode);\n        if (node.nn === 'text') {\n            attachDomText(newNode, node, appendTo, insertBefore);\n            continue;\n        }\n        // one single html element\n        const domElement = attachDomElement(newNode, node, values, support, context, counts, appendTo, insertBefore);\n        if (node.ch) {\n            newNode.ch = attachDomElements(node.ch, values, support, counts, context, depth + 1, domElement, insertBefore, subs).dom;\n        }\n    }\n    return { subs, dom, context };\n}\nfunction attachDomElement(newNode, node, values, support, context, counts, appendTo, insertBefore) {\n    const domElement = newNode.domElement = document.createElement(node.nn);\n    // attributes that may effect style, come first for performance\n    if (node.at) {\n        node.at.forEach(attr => {\n            const name = attr[0];\n            const value = attr[1];\n            const isSpecial = attr[2] || false;\n            processAttribute(values, name, domElement, support, \n            // howToSetInputValue, // maybe more performant for updates but not first renders\n            howToSetFirstInputValue, context, isSpecial, counts, value);\n        });\n    }\n    if (appendTo) {\n        paintAppends.push({\n            element: domElement,\n            relative: appendTo,\n        });\n    }\n    else {\n        paintInsertBefores.push({\n            element: domElement,\n            relative: insertBefore,\n        });\n    }\n    return domElement;\n}\nfunction attachDomText(newNode, node, owner, insertBefore) {\n    const textNode = newNode;\n    const string = textNode.tc = node.tc;\n    someDiv.innerHTML = string;\n    const domElement = textNode.domElement = document.createTextNode(someDiv.innerText);\n    if (owner) {\n        paintAppends.push({\n            element: domElement,\n            relative: owner,\n        });\n    }\n    else {\n        paintInsertBefores.push({\n            element: domElement,\n            relative: insertBefore,\n        });\n    }\n}\nfunction attachDynamicDom(value, index, context, support, subs, counts, // used for animation stagger computing\ndepth, // used to indicate if variable lives within an owner's element\nappendTo, insertBefore) {\n    const marker = document.createTextNode(empty);\n    const isWithinOwnerElement = depth > 0;\n    const contextItem = addOneContext(value, context, isWithinOwnerElement);\n    contextItem.placeholder = marker;\n    if (appendTo) {\n        paintAppends.push({\n            relative: appendTo,\n            element: marker,\n        });\n    }\n    else {\n        paintInsertBefores.push({\n            relative: insertBefore,\n            element: marker,\n        });\n    }\n    if (isSubjectInstance(value)) {\n        subs.push({\n            insertBefore: marker,\n            appendTo,\n            subject: value,\n            support, // ownerSupport,\n            counts,\n            contextItem,\n        });\n        contextItem.handler = blankHandler;\n        return;\n    }\n    // how to handle value updates\n    contextItem.handler = (newValue, _newValues, newSupport, newContextItem) => updateExistingValue(newContextItem, newValue, newSupport);\n    const global = support.subject.global;\n    global.locked = true;\n    processFirstSubjectValue(value, contextItem, support, counts, appendTo, insertBefore);\n    const global2 = support.subject.global;\n    delete global2.locked;\n    contextItem.value = value;\n    return;\n}\n//# sourceMappingURL=attachDomElements.function.js.map","import { attachDomElements } from '../interpolations/optimizers/attachDomElements.function.js';\nimport { checkSimpleValueChange } from './index.js';\nimport { getDomMeta } from './domMetaCollector.js';\nimport { ValueTypes } from './ValueTypes.enum.js';\nimport { painting } from './paint.function.js';\n/** Function that kicks off actually putting tags down as HTML elements */\nexport function buildBeforeElement(support, counts, appendTo, insertBefore) {\n    const subject = support.subject;\n    const global = subject.global;\n    global.oldest = support;\n    global.newest = support;\n    ++painting.locks;\n    const result = attachHtmlDomMeta(support, counts, appendTo, insertBefore);\n    global.htmlDomMeta = result.dom;\n    --painting.locks;\n    // ++global.renderCount\n    // return fragment\n    return result;\n}\nfunction attachHtmlDomMeta(support, counts, appendTo, insertBefore) {\n    const domMeta = loadDomMeta(support);\n    const thisTag = support.templater.tag;\n    const values = thisTag.values;\n    const context = [];\n    const global = support.subject.global;\n    global.context = context;\n    const result = attachDomElements(domMeta, values, support, counts, context, 0, appendTo, insertBefore);\n    return result;\n}\nfunction loadDomMeta(support) {\n    const templater = support.templater;\n    const thisTag = templater.tag; // || templater\n    if (thisTag.tagJsType === ValueTypes.dom) {\n        return thisTag.dom;\n    }\n    const strings = thisTag.strings;\n    return getDomMeta(strings, thisTag.values);\n}\nexport function addOneContext(value, context, withinOwnerElement) {\n    const contextItem = {\n        value,\n        checkValueChange: checkSimpleValueChange,\n        withinOwnerElement,\n    };\n    context.push(contextItem);\n    return contextItem;\n}\n//# sourceMappingURL=buildBeforeElement.function.js.map","// taggedjs-no-compile\nimport { htmlInterpolationToDomMeta } from '../interpolations/optimizers/htmlInterpolationToDomMeta.function.js';\nimport { replacePlaceholders } from '../interpolations/optimizers/replacePlaceholders.function.js';\nimport { restorePlaceholders } from '../interpolations/optimizers/restorePlaceholders.function.js';\nimport { isLastRunMatched } from './isLastRunMatched.function.js';\nimport { getStringsId } from './getStringsId.function.js';\nconst lastRuns = {};\n/** Converts strings & values into dom meta */\nexport function getDomMeta(strings, values) {\n    const stringId = getStringsId(strings);\n    const lastRun = lastRuns[stringId];\n    const matches = lastRun && isLastRunMatched(strings, values, lastRun);\n    if (matches) {\n        return lastRun.domMetaMap;\n    }\n    const domMeta = htmlInterpolationToDomMeta(strings, values);\n    const map = replacePlaceholders(domMeta, values.length);\n    // Restore any sanitized placeholders in text nodes\n    restorePlaceholders(map);\n    const template = {\n        interpolation: undefined,\n        string: undefined,\n        strings,\n        values,\n        domMetaMap: map,\n    };\n    lastRuns[stringId] = template;\n    return map;\n}\n//# sourceMappingURL=domMetaCollector.js.map","export function getStringsId(strings) {\n    const array = strings.map(x => x.length);\n    array.push(strings.length);\n    return Number(array.join(''));\n}\n//# sourceMappingURL=getStringsId.function.js.map","export function isLastRunMatched(strings, values, lastRun) {\n    if (lastRun) {\n        if (lastRun.strings.length === strings.length) {\n            const stringsMatch = lastRun.strings.every((string, index) => \n            // string.length === strings[index].length\n            string === strings[index]);\n            if (stringsMatch && lastRun.values.length === values.length) {\n                return true; // performance savings using the last time this component was rendered\n            }\n        }\n    }\n    return false;\n}\n//# sourceMappingURL=isLastRunMatched.function.js.map","import { variablePrefix, variableSuffix } from \"../../tag/getDomTag.function.js\";\nimport { parseHTML } from \"./parseHTML.function.js\";\nconst fragReplacer = /(^:tagvar\\d+:|:tagvar\\d+:$)/g;\nconst safeVar = '__safeTagVar';\n/** Run only during compile step OR when no compile step occurred at runtime */\nexport function htmlInterpolationToDomMeta(strings, values) {\n    htmlInterpolationToPlaceholders(strings, values);\n    // Parse the modified fragments\n    const htmlString = htmlInterpolationToPlaceholders(strings, values).join('');\n    const domMeta = parseHTML(htmlString);\n    return domMeta;\n}\nexport function htmlInterpolationToPlaceholders(strings, values) {\n    // Sanitize placeholders in the fragments\n    const sanitizedFragments = sanitizePlaceholders(strings);\n    // Add placeholders to the fragments\n    return addPlaceholders(sanitizedFragments, values);\n}\nfunction sanitizePlaceholders(fragments) {\n    return fragments.map(fragment => fragment.replace(fragReplacer, (match, index) => safeVar + index));\n}\nfunction addPlaceholders(strings, values) {\n    const results = strings.map((fragment, index) => {\n        if (index < values.length) {\n            return fragment + variablePrefix + index + variableSuffix;\n        }\n        return fragment;\n    });\n    balanceArrayByArrays(results, strings, values);\n    return results;\n}\nexport function balanceArrayByArrays(results, strings, values) {\n    const diff = values.length - strings.length;\n    if (diff > 0) {\n        for (let x = diff; x > 0; --x) {\n            results.push(variablePrefix + (strings.length + x - 1) + variableSuffix);\n        }\n    }\n}\n//# sourceMappingURL=htmlInterpolationToDomMeta.function.js.map","import { variablePrefix, variableSuffix } from \"../../tag/getDomTag.function.js\";\nimport { isSpecialAttr } from \"../attributes/isSpecialAttribute.function.js\";\nconst fragFindAny = /(:tagvar\\d+:)/;\nconst ondoubleclick = 'ondoubleclick';\nconst regexAttr = /([:_a-zA-Z0-9\\-.]+)\\s*(?:=\\s*\"([^\"]*)\"|=\\s*(\\S+))?/g;\nconst regexTagOrg = /<\\/?([a-zA-Z0-9-]+)((?:\\s+[a-zA-Z_:*][\\w:.-]*(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s\"'=<>`]+))?)+\\s*|\\s*)\\/?>/g;\n/** Main start of string parsing */\nexport function parseHTML(html) {\n    const valuePositions = [];\n    const elements = [];\n    const stack = [];\n    let currentElement = null;\n    let valueIndex = -1;\n    let position = 0;\n    const regexTag = new RegExp(regexTagOrg, 'g');\n    html = preprocessTagsInComments(html);\n    while (position < html.length) {\n        const tagMatch = regexTag.exec(html);\n        if (!tagMatch) {\n            break;\n        }\n        const [fullMatch, tagName, attrString] = tagMatch;\n        const isClosingTag = fullMatch.startsWith('</');\n        const isSelfClosing = fullMatch.endsWith('/>');\n        if (position < tagMatch.index) {\n            const textContent = html.slice(position, tagMatch.index);\n            if (textContent.trim()) {\n                const textVarMatches = splitByTagVar(textContent);\n                textVarMatches.forEach(textContent => {\n                    if (textContent.startsWith(variablePrefix)) {\n                        textContent = variablePrefix + (++valueIndex) + variableSuffix;\n                    }\n                    pushTextTo(currentElement, elements, textContent);\n                });\n            }\n        }\n        position = tagMatch.index + fullMatch.length;\n        if (isClosingTag) {\n            currentElement = stack.pop() || null;\n            continue;\n        }\n        const attributes = [];\n        let attrMatch;\n        while ((attrMatch = regexAttr.exec(attrString)) !== null) {\n            const attrName = attrMatch[1] || attrMatch[3] || attrMatch[5];\n            const attrChoice = attrMatch[2] || attrMatch[4] || attrMatch[6];\n            let attrValue = attrChoice;\n            if (attrName === undefined) {\n                continue;\n            }\n            const notEmpty = attrMatch[2] !== '';\n            const noValue = attrValue === undefined && notEmpty;\n            const lowerName = attrName.toLowerCase();\n            const fixedName = lowerName.startsWith('on') ? cleanEventName(lowerName) : lowerName;\n            if (noValue) {\n                const standAloneVar = attrName.slice(0, variablePrefix.length) === variablePrefix;\n                if (standAloneVar) {\n                    const valueName = variablePrefix + (++valueIndex) + variableSuffix;\n                    valuePositions.push(['at', valueName]);\n                    attributes.push([valueName]); // the name itself is dynamic\n                    continue;\n                }\n                const startMatched = attrMatch[0].startsWith(attrName);\n                const standAloneAttr = startMatched && attrMatch[0].slice(attrName.length, attrMatch[0].length).search(/\\s+$/) >= 0;\n                if (standAloneAttr) {\n                    attributes.push([fixedName]);\n                    continue;\n                }\n                const valueName = variablePrefix + (++valueIndex) + variableSuffix;\n                attrValue = valueName;\n            }\n            if (!notEmpty) {\n                attrValue = attrMatch[2];\n            }\n            const attrSet = [fixedName, attrValue];\n            const isSpecial = isSpecialAttr(lowerName); // check original name for \"oninit\" or \"autofocus\"\n            if (isSpecial) {\n                attrSet.push(isSpecial);\n            }\n            attributes.push(attrSet);\n        }\n        const element = {\n            nn: tagName, // nodeName\n        };\n        if (attributes.length) {\n            element.at = attributes;\n        }\n        if (currentElement) {\n            if (!currentElement.ch) {\n                currentElement.ch = [];\n            }\n            currentElement.ch.push(element);\n        }\n        else {\n            elements.push(element);\n        }\n        if (!isSelfClosing) {\n            stack.push(currentElement);\n            currentElement = element;\n        }\n    }\n    if (position < html.length) {\n        const textContent = html.slice(position);\n        if (textContent.trim()) {\n            const textVarMatches = splitByTagVar(textContent);\n            textVarMatches.forEach(textContent => {\n                if (textContent.startsWith(variablePrefix)) {\n                    ++valueIndex;\n                }\n                return pushTextTo(currentElement, elements, textContent);\n            });\n        }\n    }\n    return elements;\n}\nconst removeCommentRegX = new RegExp('(<!--[\\\\s\\\\S]*?-->)', 'g');\nfunction preprocessTagsInComments(html) {\n    // Use a regex to find all HTML comments\n    return html.replace(removeCommentRegX, function (match) {\n        // For each comment found, replace < and > inside it\n        return match.replace(/\\[l t\\]/g, '[l&nbsp;t]').replace(/\\[g t\\]/g, '[g&nbsp;t]').replace(/</g, '[l t]').replace(/>/g, '[g t]');\n    });\n}\nfunction cleanEventName(eventName) {\n    if (eventName.startsWith('on')) {\n        const couldByDblClick = eventName.length === ondoubleclick.length && eventName === ondoubleclick;\n        if (couldByDblClick) {\n            return 'dblclick';\n        }\n        return eventName.slice(2, eventName.length);\n    }\n    return eventName;\n}\nfunction pushTextTo(currentElement, elements, textContent) {\n    const textNode = {\n        nn: 'text', // nodeName\n        tc: postprocessTagsInComments(textContent), // textContent\n    };\n    pushTo(currentElement, elements, textNode);\n}\nfunction postprocessTagsInComments(html) {\n    // Use a regex to find all segments that look like processed comments\n    return html.replace(/(\\[l t\\]!--[\\s\\S]*?--\\[g t\\])/g, function (match) {\n        // For each processed comment found, replace *lt* and *gt* back to < and >\n        return match.replace(/\\[l t\\]/g, '<').replace(/\\[g t\\]/g, '>').replace(/\\[l&nbsp;t\\]/g, '[l t]').replace(/\\[g&nbsp;t\\]/g, '[g t]');\n    });\n}\nfunction pushTo(currentElement, elements, textNode) {\n    if (currentElement) {\n        if (!currentElement.ch) {\n            currentElement.ch = [];\n        }\n        currentElement.ch.push(textNode);\n    }\n    else {\n        elements.push(textNode);\n    }\n}\nfunction splitByTagVar(inputString) {\n    // Split the string using the regular expression, keep delimiters in the output\n    const parts = inputString.split(fragFindAny);\n    // Filter out any empty strings from the results\n    const filteredParts = parts.filter(part => part !== '');\n    return filteredParts;\n}\n//# sourceMappingURL=parseHTML.function.js.map","import { variableSuffix, variablePrefix } from \"../../tag/getDomTag.function.js\";\nimport { ImmutableTypes } from \"../../tag/ValueTypes.enum.js\";\nexport const safeVar = '__safeTagVar';\nexport function restorePlaceholders(elements) {\n    elements.forEach(traverseAndRestore);\n}\nconst safeReplacer = /__safeTagVar(\\d+)/g;\nfunction traverseAndRestore(element) {\n    if (element.at) {\n        element.at = element.at ? element.at.map(attr => {\n            if (attr.length === 1) {\n                return attr;\n            }\n            const [, value] = attr;\n            if (typeof value === ImmutableTypes.string && value.startsWith(safeVar)) {\n                const index = parseInt(value.replace(safeVar, ''), 10);\n                attr[1] = variablePrefix + index + variableSuffix;\n            }\n            return attr;\n        }) : [];\n    }\n    if (element.ch) {\n        const children = element.ch;\n        for (let i = 0; i < children.length; i++) {\n            const child = children[i];\n            if (child.nn === 'text') {\n                if (typeof child.tc !== ImmutableTypes.string) {\n                    return;\n                }\n                child.tc = child.tc.replace(safeReplacer, (_match, index) => variablePrefix + index + variableSuffix);\n            }\n            traverseAndRestore(child);\n        }\n        // Remove empty children array\n        if (children.length === 0) {\n            delete element.ch;\n        }\n    }\n}\n//# sourceMappingURL=restorePlaceholders.function.js.map","import { subscribeToTemplate } from '../../interpolations/subscribeToTemplate.function.js';\nimport { getHtmlSupport } from '../getSupport.function.js';\nimport { checkTagValueChange } from '../checkTagValueChange.function.js';\nimport { buildBeforeElement } from '../buildBeforeElement.function.js';\nimport { ValueTypes } from '../ValueTypes.enum.js';\n/** When first time render, adds to owner childTags\n * Used for BOTH inserts & updates to values that were something else\n * Intended use only for updates\n*/\nexport function processTag(ownerSupport, // owner\nsubject, // could be tag via result.tag\ncounts) {\n    const global = subject.global;\n    const support = global.newest;\n    support.ownerSupport = ownerSupport;\n    subject.checkValueChange = checkTagValueChange;\n    const ph = subject.placeholder;\n    const result = buildBeforeElement(support, counts, undefined, ph);\n    for (const sub of result.subs) {\n        subscribeToTemplate(sub);\n    }\n    return support;\n}\nexport function tagFakeTemplater(tag) {\n    const templater = getFakeTemplater();\n    templater.tag = tag;\n    tag.templater = templater;\n    return templater;\n}\nexport function getFakeTemplater() {\n    const fake = {\n        tagJsType: ValueTypes.templater,\n    };\n    return fake;\n}\n/** Create support for a tag component */\nexport function newSupportByTemplater(templater, ownerSupport, subject) {\n    const support = getHtmlSupport(templater, ownerSupport, ownerSupport.appSupport, subject);\n    const global = subject.global;\n    global.context = [];\n    return support;\n}\n//# sourceMappingURL=processTag.function.js.map","export function processUpdateContext(support, context) {\n    const thisTag = support.templater.tag;\n    const values = thisTag.values;\n    let index = 0;\n    const len = values.length;\n    while (index < len) {\n        processUpdateOneContext(values, index, context, support);\n        ++index;\n    }\n    return context;\n}\n/** returns boolean of did render */\nexport function processUpdateOneContext(values, // the interpolated values\nindex, context, ownerSupport) {\n    const value = values[index];\n    // is something already there?\n    const contextItem = context[index];\n    // Do not continue if the value is just the same\n    if (value === contextItem.value) {\n        return;\n    }\n    const handler = contextItem.handler;\n    handler(value, values, ownerSupport, contextItem);\n    contextItem.value = value;\n}\n//# sourceMappingURL=processUpdateContext.function.js.map","import { paint, painting } from './paint.function.js';\nimport { processUpdateContext } from './processUpdateContext.function.js';\nexport function updateSupportBy(olderSupport, newerSupport) {\n    const global = olderSupport.subject.global;\n    const context = global.context;\n    updateSupportValuesBy(olderSupport, newerSupport);\n    ++painting.locks;\n    processUpdateContext(olderSupport, context);\n    --painting.locks;\n    paint();\n}\nexport function updateSupportValuesBy(olderSupport, newerSupport) {\n    const tempTag = (newerSupport.templater.tag || newerSupport.templater);\n    const values = newerSupport.templater.values || tempTag.values;\n    const tag = olderSupport.templater.tag;\n    tag.values = values;\n}\n//# sourceMappingURL=updateSupportBy.function.js.map","import { getTemplaterResult } from '../getTemplaterResult.function.js';\nimport { checkTagValueChange } from '../checkTagValueChange.function.js';\nimport { ValueTypes } from '../ValueTypes.enum.js';\nimport { getNewGlobal } from './getNewGlobal.function.js';\nimport { PropWatches } from '../tag.function.js';\nimport { getSupport } from '../getSupport.function.js';\nexport function processNewArrayValue(value, ownerSupport, contextItem) {\n    const tagJsType = value.tagJsType;\n    if (tagJsType) {\n        switch (tagJsType) {\n            case ValueTypes.templater: {\n                const templater = value;\n                const tag = templater.tag;\n                processNewTag(tag, ownerSupport, contextItem);\n                break;\n            }\n            case ValueTypes.tag:\n            case ValueTypes.dom:\n                processNewTag(value, ownerSupport, contextItem);\n                break;\n        }\n    }\n    return contextItem;\n}\nfunction processNewTag(value, ownerSupport, contextItem) {\n    contextItem.checkValueChange = checkTagValueChange;\n    const tag = value;\n    let templater = tag.templater;\n    // TODO: Can this ever happen?\n    if (!templater) {\n        templater = getTemplaterResult(PropWatches.DEEP);\n        templater.tag = tag;\n        tag.templater = templater;\n    }\n    const global = contextItem.global = getNewGlobal(contextItem); // contextItem.global as SupportTagGlobal\n    const newest = global.newest = getSupport(templater, ownerSupport, ownerSupport.appSupport, contextItem);\n    global.oldest = newest;\n    return contextItem;\n}\n//# sourceMappingURL=processNewValue.function.js.map","// taggedjs-no-compile\nimport { paintAppends, paintInsertBefores } from '../paint.function.js';\nimport { processFirstSubjectValue } from './processFirstSubjectValue.function.js';\nimport { checkSimpleValueChange } from '../checkDestroyPrevious.function.js';\nimport { updateExistingValue } from './updateExistingValue.function.js';\nimport { processNewArrayValue } from './processNewValue.function.js';\nimport { compareArrayItems } from './compareArrayItems.function.js';\nexport function processTagArray(subject, value, // arry of Tag classes\nownerSupport, counts, appendTo) {\n    const noLast = subject.lastArray === undefined;\n    if (noLast) {\n        subject.lastArray = [];\n    }\n    const lastArray = subject.lastArray;\n    let runtimeInsertBefore = subject.placeholder;\n    let removed = 0;\n    /** 🗑️ remove previous items first */\n    const filteredLast = [];\n    // if not first time, then check for deletes\n    if (!noLast) {\n        // on each loop check the new length\n        for (let index = 0; index < lastArray.length; ++index) {\n            const item = lastArray[index];\n            // 👁️ COMPARE & REMOVE\n            const newRemoved = compareArrayItems(value, index, lastArray, removed, counts);\n            if (newRemoved === 0) {\n                filteredLast.push(item);\n                continue;\n            }\n            // do the same number again because it was a mid delete\n            if (newRemoved === 2) {\n                index = index - 1;\n                continue;\n            }\n            removed = removed + newRemoved;\n        }\n        subject.lastArray = filteredLast;\n    }\n    const length = value.length;\n    for (let index = 0; index < length; ++index) {\n        const newSubject = reviewArrayItem(value, index, subject.lastArray, ownerSupport, runtimeInsertBefore, counts, appendTo);\n        runtimeInsertBefore = newSubject.placeholder;\n    }\n}\nfunction reviewArrayItem(array, index, lastArray, ownerSupport, runtimeInsertBefore, // used during updates\ncounts, appendTo) {\n    const item = array[index];\n    const previous = lastArray[index];\n    if (previous) {\n        return reviewPreviousArrayItem(item, previous.context, lastArray, ownerSupport, index, runtimeInsertBefore, counts, appendTo);\n    }\n    return processAddTagArrayItem(item, runtimeInsertBefore, // thisInsert as any,\n    ownerSupport, counts, lastArray, appendTo);\n}\nfunction reviewPreviousArrayItem(value, itemSubject, lastArray, ownerSupport, index, runtimeInsertBefore, // used during updates\ncounts, appendTo) {\n    const couldBeSame = lastArray.length > index;\n    if (couldBeSame) {\n        updateExistingValue(itemSubject, value, ownerSupport);\n        return itemSubject;\n    }\n    const result = processAddTagArrayItem(value, runtimeInsertBefore, // thisInsert as any,\n    ownerSupport, counts, lastArray, appendTo);\n    return result;\n}\nfunction processAddTagArrayItem(value, before, // used during updates\nownerSupport, counts, lastArray, appendTo) {\n    const itemSubject = {\n        value,\n        checkValueChange: checkSimpleValueChange,\n        withinOwnerElement: false, // TODO: we need to pass down depth so we can answer this truthfully\n    };\n    counts.added = counts.added + 1; // index\n    const subPlaceholder = document.createTextNode('');\n    itemSubject.placeholder = subPlaceholder;\n    if (!appendTo) {\n        paintInsertBefores.push({\n            element: subPlaceholder,\n            relative: before,\n        });\n    }\n    processNewArrayValue(value, ownerSupport, itemSubject);\n    processFirstSubjectValue(value, itemSubject, ownerSupport, counts, appendTo);\n    // after processing\n    itemSubject.value = value;\n    // Added to previous array\n    lastArray.push({\n        context: itemSubject,\n        global: itemSubject.global,\n    });\n    if (appendTo) {\n        paintAppends.push({\n            element: subPlaceholder,\n            relative: appendTo,\n        });\n    }\n    return itemSubject;\n}\n//# sourceMappingURL=processTagArray.js.map","import { getFakeTemplater, newSupportByTemplater, processTag } from './processTag.function.js';\nimport { processNowRegularValue } from './processRegularValue.function.js';\nimport { processReplacementComponent } from './processFirstSubjectComponent.function.js';\nimport { updateExistingTagComponent } from './updateExistingTagComponent.function.js';\nimport { BasicTypes, ValueTypes } from '../ValueTypes.enum.js';\nimport { updateSupportBy } from '../updateSupportBy.function.js';\nimport { isArray, isTagComponent } from '../../isInstance.js';\nimport { getNewGlobal } from './getNewGlobal.function.js';\nimport { processTagArray } from './processTagArray.js';\nimport { getSupport } from '../getSupport.function.js';\nconst fooCounts = { added: 0, removed: 0 };\n/** Used for all tag value updates. Determines if value changed since last render */\nexport function updateExistingValue(contextItem, newValue, // newValue\nownerSupport) {\n    // Do not continue if the value is just the same\n    if (newValue === contextItem.value) {\n        return;\n    }\n    // Have the context check itself (avoid having to detect old value)\n    const ignoreOrDestroyed = contextItem.checkValueChange(newValue, contextItem);\n    // ignore\n    if (ignoreOrDestroyed === -1) {\n        return; // do nothing\n    }\n    // is new value a tag?\n    const tagJsType = newValue && newValue.tagJsType;\n    if (tagJsType) {\n        if (tagJsType === ValueTypes.renderOnce) {\n            return;\n        }\n        tryUpdateToTag(contextItem, newValue, ownerSupport);\n        return;\n    }\n    if (isArray(newValue)) {\n        processTagArray(contextItem, newValue, ownerSupport, { added: 0, removed: 0 });\n        return;\n    }\n    if (typeof (newValue) === BasicTypes.function) {\n        contextItem.value = newValue; // do not render functions that are not explicity defined as tag html processing\n        return;\n    }\n    if (ignoreOrDestroyed) {\n        processNowRegularValue(newValue, contextItem);\n    }\n}\nfunction updateToTag(value, contextItem, ownerSupport) {\n    const tag = value;\n    let templater = tag.templater;\n    if (!templater) {\n        templater = getFakeTemplater();\n        tag.templater = templater;\n        templater.tag = tag;\n    }\n    const nowGlobal = (contextItem.global ? contextItem.global : getNewGlobal(contextItem));\n    nowGlobal.newest = newSupportByTemplater(templater, ownerSupport, contextItem);\n    processTag(ownerSupport, contextItem, fooCounts);\n}\nfunction handleStillTag(lastSupport, subject, value, ownerSupport) {\n    const templater = value.templater || value;\n    const valueSupport = getSupport(templater, ownerSupport, ownerSupport.appSupport, subject);\n    const lastSubject = lastSupport.subject;\n    const newGlobal = lastSubject.global;\n    const oldest = newGlobal.oldest;\n    updateSupportBy(oldest, valueSupport);\n}\nexport function prepareUpdateToComponent(templater, contextItem, ownerSupport) {\n    const global = contextItem.global;\n    // When last value was not a component\n    if (!global.newest) {\n        processReplacementComponent(templater, contextItem, ownerSupport, { added: 0, removed: 0 });\n        return;\n    }\n    const support = getSupport(templater, ownerSupport, ownerSupport.appSupport, contextItem);\n    updateExistingTagComponent(ownerSupport, support, // latest value\n    contextItem);\n}\nexport function updateContextItemBySupport(support, contextItem, value, ownerSupport) {\n    if (typeof (value) === BasicTypes.function) {\n        return;\n    }\n    handleStillTag(support, contextItem, value, ownerSupport);\n    return;\n}\n/** result is an indication to ignore further processing but that does not seem in use anymore */\nexport function tryUpdateToTag(contextItem, newValue, // newValue\nownerSupport) {\n    const tagJsType = newValue.tagJsType;\n    const isComp = isTagComponent(newValue);\n    if (isComp) {\n        if (contextItem.global === undefined) {\n            getNewGlobal(contextItem);\n        }\n        prepareUpdateToComponent(newValue, contextItem, ownerSupport);\n        return true;\n    }\n    // detect if previous value was a tag\n    const global = contextItem.global;\n    if (global) {\n        // its html/dom based tag\n        const support = global.newest;\n        if (support) {\n            updateContextItemBySupport(support, contextItem, newValue, ownerSupport);\n            return true;\n        }\n    }\n    switch (tagJsType) {\n        case ValueTypes.templater:\n            processTag(ownerSupport, contextItem, fooCounts);\n            return true;\n        // when value was not a Tag before\n        case ValueTypes.tag:\n        case ValueTypes.dom: {\n            updateToTag(newValue, contextItem, ownerSupport);\n            return true;\n        }\n    }\n    return false;\n}\n//# sourceMappingURL=updateExistingValue.function.js.map","import { deepCompareDepth, hasSupportChanged, shallowCompareDepth } from '../hasSupportChanged.function.js';\nimport { processReplacementComponent } from './processFirstSubjectComponent.function.js';\nimport { castProps } from '../../alterProp.function.js';\nimport { renderSupport } from '../render/renderSupport.function.js';\nimport { ValueTypes } from '../ValueTypes.enum.js';\nimport { destroySupport } from '../destroySupport.function.js';\nimport { getNewGlobal } from './getNewGlobal.function.js';\nimport { isLikeTags } from '../isLikeTags.function.js';\nimport { PropWatches } from '../tag.function.js';\nimport { syncPriorPropFunction } from './syncPriorPropFunction.function.js';\nexport function updateExistingTagComponent(ownerSupport, support, // lastest\nsubject) {\n    const global = subject.global;\n    const lastSupport = global.newest;\n    const oldWrapper = lastSupport.templater.wrapper;\n    const newWrapper = support.templater.wrapper;\n    let isSameTag = false;\n    const tagJsType = support.templater.tagJsType;\n    const skipComparing = ValueTypes.stateRender === tagJsType || ValueTypes.renderOnce === tagJsType;\n    if (skipComparing) {\n        isSameTag = support.templater.tagJsType === ValueTypes.renderOnce || isLikeTags(lastSupport, support);\n    }\n    else if (oldWrapper && newWrapper) {\n        const oldFunction = oldWrapper.original;\n        const newFunction = newWrapper.original;\n        // string compare both functions\n        isSameTag = oldFunction === newFunction;\n    }\n    const templater = support.templater;\n    if (!isSameTag) {\n        swapTags(subject, templater, ownerSupport);\n        return;\n    }\n    const hasChanged = skipComparing || hasSupportChanged(lastSupport, templater);\n    // everyhing has matched, no display needs updating.\n    if (!hasChanged) {\n        const maxDepth = templater.propWatch === PropWatches.DEEP ? deepCompareDepth : shallowCompareDepth;\n        syncSupports(templater, support, lastSupport, ownerSupport, maxDepth);\n        return;\n    }\n    if (global.locked) {\n        global.blocked.push(support);\n        return;\n    }\n    renderSupport(support);\n    ++subject.renderCount;\n    return;\n}\nexport function syncFunctionProps(newSupport, lastSupport, ownerSupport, newPropsArray, // templater.props\nmaxDepth, depth = -1) {\n    if (maxDepth === 0) {\n        throw new Error('before here');\n    }\n    const global = lastSupport.subject.global;\n    const newest = global.newest;\n    if (!newest) {\n        const castedProps = castProps(newPropsArray, newSupport, depth);\n        newPropsArray.push(...castedProps);\n        const propsConfig = newSupport.propsConfig;\n        propsConfig.castProps = castedProps;\n        return newPropsArray;\n    }\n    lastSupport = newest || lastSupport;\n    const priorPropConfig = lastSupport.propsConfig;\n    const priorPropsArray = priorPropConfig.castProps;\n    const newArray = [];\n    for (let index = 0; index < newPropsArray.length; ++index) {\n        const prop = newPropsArray[index];\n        const priorProp = priorPropsArray[index];\n        const newValue = syncPriorPropFunction(priorProp, prop, newSupport, ownerSupport, maxDepth, depth + 1);\n        newArray.push(newValue);\n    }\n    const newPropsConfig = newSupport.propsConfig;\n    newPropsConfig.castProps = newArray;\n    return newArray;\n}\nexport function moveProviders(lastSupport, newSupport) {\n    const global = lastSupport.subject.global;\n    let pIndex = -1;\n    const providers = global.providers = global.providers || [];\n    const pLen = providers.length - 1;\n    while (pIndex++ < pLen) {\n        const provider = providers[pIndex];\n        let index = -1;\n        const pcLen = provider.children.length - 1;\n        while (index++ < pcLen) {\n            const child = provider.children[index];\n            const wasSameGlobals = global === child.subject.global;\n            if (wasSameGlobals) {\n                provider.children.splice(index, 1);\n                provider.children.push(newSupport);\n                return;\n            }\n        }\n    }\n}\n/** Exchanges entire propsConfigs */\nfunction syncSupports(templater, support, lastSupport, ownerSupport, maxDepth) {\n    // update function refs to use latest references\n    const newProps = templater.props;\n    const castedProps = syncFunctionProps(support, lastSupport, ownerSupport, newProps, maxDepth);\n    const propsConfig = support.propsConfig;\n    // When new support actually makes call to real function, use these pre casted props\n    propsConfig.castProps = castedProps;\n    const lastPropsConfig = lastSupport.propsConfig;\n    // update support to think it has different cloned props\n    lastPropsConfig.latest = propsConfig.latest;\n    return lastSupport; // its the same tag component  \n}\n/** Was tag, will be tag */\nfunction swapTags(subject, templater, // new tag\nownerSupport) {\n    const global = subject.global;\n    const oldestSupport = global.oldest;\n    destroySupport(oldestSupport);\n    getNewGlobal(subject);\n    const newSupport = processReplacementComponent(templater, subject, ownerSupport, { added: 0, removed: 0 });\n    return newSupport;\n}\n//# sourceMappingURL=updateExistingTagComponent.function.js.map","import { getNewGlobal } from './update/getNewGlobal.function.js';\nimport { destroySupport } from './destroySupport.function.js';\nimport { isStaticTag } from '../isInstance.js';\nimport { isLikeTags } from './isLikeTags.function.js';\nimport { tryUpdateToTag } from './update/updateExistingValue.function.js';\nexport function checkTagValueChange(newValue, contextItem) {\n    const global = contextItem.global;\n    const lastSupport = global?.newest;\n    const isValueTag = isStaticTag(newValue);\n    const newTag = newValue;\n    if (isValueTag) {\n        // its a different tag now\n        const likeTags = isLikeTags(newTag, lastSupport);\n        if (!likeTags) {\n            destroySupport(lastSupport);\n            getNewGlobal(contextItem);\n            return 7; // 'tag-swap'\n        }\n        return false;\n    }\n    const isTag = newValue?.tagJsType;\n    if (isTag) {\n        const support = global.newest;\n        const ownerSupport = support.ownerSupport;\n        const result = tryUpdateToTag(contextItem, newValue, ownerSupport);\n        return result === true ? -1 : false;\n    }\n    // destroy old component, value is not a component\n    destroySupport(lastSupport);\n    delete contextItem.global;\n    contextItem.renderCount = 0;\n    return 8; // 'no-longer-tag'\n}\n//# sourceMappingURL=checkTagValueChange.function.js.map","import { StateMismatchError } from '../errors.js';\nexport function checkStateMismatch(config, support) {\n    const rearray = config.rearray;\n    if (rearray.length && rearray.length !== config.stateArray.length) {\n        throwStateMismatch(rearray, support, config);\n    }\n}\nconst hint = 'State tracking requires same number of state calls on every render. This error typically occurs when a state call is only reachable behind a condition. Also, wrapping tags that have state, with tag(), often helps when tag is only reachable by a condition.';\nfunction throwStateMismatch(rearray, support, config) {\n    const message = `Saved states between renders are inconsistent. Expected ${rearray.length} states got ${config.stateArray.length}.`;\n    const wrapper = support.templater?.wrapper;\n    let tagFunction = wrapper;\n    if (wrapper?.original) {\n        tagFunction = wrapper.original;\n    }\n    else if (wrapper?.original) {\n        tagFunction = wrapper.original;\n    }\n    const details = {\n        oldStates: config.stateArray,\n        newStates: config.rearray,\n        tagFunction,\n        templater: support.templater,\n    };\n    const error = new StateMismatchError(message, details);\n    console.error(hint, details);\n    throw error;\n}\n//# sourceMappingURL=checkStateMismatch.function.js.map","import { setUseMemory } from '../state/setUseMemory.object.js';\nimport { checkStateMismatch } from './checkStateMismatch.function.js';\n/** Compares states of previous renders\n * @property support - The workflow that supports a single tag\n * @property ownerSupport - undefined when \"support\" is the app element\n */\nexport function runAfterRender(support, ownerSupport) {\n    const subject = support.subject;\n    ++subject.renderCount;\n    // ++subject.global.renderCount\n    const config = setUseMemory.stateConfig;\n    delete config.support;\n    support.state = config.stateArray;\n    // support.states = config.states\n    setUseMemory.tagClosed$.next(ownerSupport);\n    checkStateMismatch(config, support);\n    subject.global.newest = support;\n}\n//# sourceMappingURL=afterRender.function.js.map","import { executeWrap } from '../executeWrap.function.js';\nimport { ValueTypes } from '../ValueTypes.enum.js';\nimport { runAfterRender } from '../afterRender.function.js';\nimport { initState, reState } from '../../state/state.utils.js';\nimport { setUseMemory } from '../../state/setUseMemory.object.js';\nimport { getSupport } from '../getSupport.function.js';\nexport function renderTagOnly(newSupport, prevSupport, // causes restate\nsubject, ownerSupport) {\n    const global = subject.global;\n    const oldRenderCount = subject.renderCount;\n    const prevState = prevSupport?.state;\n    const config = setUseMemory.stateConfig;\n    if (prevState) {\n        const prevStates = prevSupport.states;\n        config.prevSupport = prevSupport;\n        reState(newSupport, setUseMemory.stateConfig, prevState, prevStates);\n    }\n    else {\n        initState(newSupport, config);\n    }\n    const templater = newSupport.templater;\n    let reSupport;\n    // NEW TAG CREATED HERE\n    if (templater.tagJsType === ValueTypes.stateRender) {\n        const result = templater; // .wrapper as any// || {original: templater} as any\n        // TODO: Not sure if useSupport could be replaced by just using \"newSupport\"\n        const useSupport = getSupport(templater, ownerSupport, newSupport.appSupport, // ownerSupport.appSupport as AnySupport,\n        subject);\n        reSupport = executeWrap(templater, result, useSupport);\n        reSupport.states = newSupport.states;\n    }\n    else {\n        // functions wrapped in tag()\n        const wrapper = templater.wrapper;\n        // calls the function returned from getTagWrap()\n        reSupport = wrapper(newSupport, subject, prevSupport);\n        reSupport.states = newSupport.states;\n    }\n    runAfterRender(reSupport, ownerSupport);\n    // When we rendered, only 1 render should have taken place OTHERWISE rendering caused another render and that is the latest instead\n    // TODO: below most likely not needed\n    if (subject.renderCount > oldRenderCount + 1) {\n        return global.newest;\n    }\n    return reSupport;\n}\n//# sourceMappingURL=renderTagOnly.function.js.map","import { subscribeToTemplate } from '../../interpolations/subscribeToTemplate.function.js';\nimport { checkTagValueChange } from '../checkTagValueChange.function.js';\nimport { buildBeforeElement } from '../buildBeforeElement.function.js';\nimport { paintAppends, paintInsertBefores } from '../paint.function.js';\nimport { newSupportByTemplater } from './processTag.function.js';\nexport function processNewSubjectTag(templater, ownerSupport, // owner\nsubject, // could be tag via result.tag\ncounts, appendTo, insertBefore) {\n    subject.checkValueChange = checkTagValueChange;\n    const support = newSupportByTemplater(templater, ownerSupport, subject);\n    support.ownerSupport = ownerSupport;\n    const result = buildBeforeElement(support, counts, appendTo, appendTo ? undefined : insertBefore);\n    for (const dom of result.dom) {\n        if (dom.marker) {\n            if (appendTo) {\n                paintAppends.push({\n                    element: dom.marker,\n                    relative: appendTo, // ph.parentNode as Element,\n                });\n            }\n            else {\n                paintInsertBefores.push({\n                    element: dom.marker,\n                    relative: insertBefore, // ph.parentNode as Element,\n                });\n            }\n        }\n        if (dom.domElement) {\n            /*\n            paintAppends.push({\n              element: dom.domElement,\n              relative: appendTo as Element, // ph.parentNode as Element,\n            })\n            */\n            if (appendTo) {\n                paintAppends.push({\n                    element: dom.domElement,\n                    relative: appendTo, // ph.parentNode as Element,\n                });\n            }\n            else {\n                paintInsertBefores.push({\n                    element: dom.domElement,\n                    relative: insertBefore, // ph.parentNode as Element,\n                });\n            }\n        }\n    }\n    let index = -1;\n    const length = result.subs.length - 1;\n    //++painting.locks\n    while (index++ < length) {\n        const sub = result.subs[index];\n        subscribeToTemplate(sub);\n    }\n    return support;\n}\n//# sourceMappingURL=processNewSubjectTag.function.js.map","import { checkArrayValueChange, checkSimpleValueChange } from '../checkDestroyPrevious.function.js';\nimport { checkTagValueChange } from '../checkTagValueChange.function.js';\nimport { processFirstSubjectComponent, processReplacementComponent } from './processFirstSubjectComponent.function.js';\nimport { newSupportByTemplater, processTag, tagFakeTemplater } from './processTag.function.js';\nimport { castTextValue, updateBeforeTemplate } from '../../updateBeforeTemplate.function.js';\nimport { oneRenderToSupport } from './oneRenderToSupport.function.js';\nimport { renderTagOnly } from '../render/renderTagOnly.function.js';\nimport { isArray, isSubjectInstance } from '../../isInstance.js';\nimport { ValueTypes } from '../ValueTypes.enum.js';\nimport { getNewGlobal } from './getNewGlobal.function.js';\nimport { processTagArray } from './processTagArray.js';\nimport { processNewSubjectTag } from './processNewSubjectTag.function.js';\nexport function processFirstSubjectValue(value, contextItem, // could be tag via result.tag\nownerSupport, // owningSupport\ncounts, // {added:0, removed:0}\nappendTo, insertBefore) {\n    const tagJsType = value?.tagJsType;\n    if (tagJsType) {\n        return processFirstTagValue(tagJsType, contextItem, value, ownerSupport, counts, appendTo, insertBefore);\n    }\n    if (isArray(value)) {\n        processTagArray(contextItem, value, ownerSupport, counts, appendTo);\n        contextItem.checkValueChange = checkArrayValueChange;\n        return;\n    }\n    if (isSubjectInstance(value)) {\n        return; // will be subscribed to for value\n    }\n    processFirstRegularValue(value, contextItem, contextItem.placeholder);\n}\nfunction processFirstRegularValue(value, subject, // could be tag via subject.tag\ninsertBefore) {\n    const castedValue = castTextValue(value);\n    const clone = updateBeforeTemplate(castedValue, insertBefore);\n    subject.simpleValueElm = clone;\n    subject.checkValueChange = checkSimpleValueChange;\n}\nfunction processFirstTagValue(tagJsType, contextItem, value, ownerSupport, // owningSupport\ncounts, // {added:0, removed:0}\nappendTo, insertBefore) {\n    ++contextItem.renderCount;\n    switch (tagJsType) {\n        // TODO: Do we ever get in here? because dom, tag, and component are covered below\n        case ValueTypes.templater:\n            contextItem.checkValueChange = checkTagValueChange;\n            if (appendTo) {\n                return processNewSubjectTag(value, ownerSupport, contextItem, counts, appendTo, insertBefore);\n            }\n            return processTag(ownerSupport, contextItem, counts);\n        case ValueTypes.dom:\n        case ValueTypes.tag: {\n            contextItem.checkValueChange = checkTagValueChange;\n            const tag = value;\n            let templater = tag.templater;\n            if (!templater) {\n                templater = tagFakeTemplater(tag); // TODO: most likely a not needed performance hit\n            }\n            const global = getNewGlobal(contextItem);\n            if (appendTo) {\n                return processNewSubjectTag(templater, ownerSupport, contextItem, counts, appendTo, insertBefore);\n            }\n            global.newest = newSupportByTemplater(templater, ownerSupport, contextItem);\n            contextItem.checkValueChange = checkTagValueChange;\n            return processTag(ownerSupport, contextItem, counts);\n        }\n        case ValueTypes.stateRender:\n        case ValueTypes.tagComponent: {\n            getNewGlobal(contextItem);\n            contextItem.checkValueChange = checkTagValueChange;\n            if (appendTo) {\n                const processResult = processFirstSubjectComponent(value, contextItem, ownerSupport, counts, appendTo);\n                return processResult;\n            }\n            const processResult = processReplacementComponent(value, contextItem, ownerSupport, counts);\n            return processResult;\n        }\n        case ValueTypes.renderOnce: {\n            getNewGlobal(contextItem);\n            const support = oneRenderToSupport(value, contextItem, ownerSupport);\n            renderTagOnly(support, undefined, contextItem, ownerSupport);\n            const result = processNewSubjectTag(support.templater, ownerSupport, contextItem, counts, appendTo, insertBefore);\n            contextItem.checkValueChange = checkTagValueChange;\n            return result;\n        }\n    }\n}\n//# sourceMappingURL=processFirstSubjectValue.function.js.map","import { processFirstTagResult, processReplaceTagResult } from './processTagResult.function.js';\nimport { renderWithSupport } from '../render/renderWithSupport.function.js';\nimport { ValueTypes } from '../ValueTypes.enum.js';\nimport { getCastedProps } from '../getTagWrap.function.js';\nimport { getSupport } from '../getSupport.function.js';\nexport function processReplacementComponent(templater, subject, ownerSupport, counts) {\n    // TODO: This below check not needed in production mode\n    // validateTemplater(templater)\n    const newSupport = getSupport(templater, ownerSupport, ownerSupport.appSupport, subject);\n    const newPropsConfig = newSupport.propsConfig;\n    if (newPropsConfig) {\n        const castedProps = templater.tagJsType !== ValueTypes.tagComponent ? [] : getCastedProps(templater, newSupport);\n        newPropsConfig.castProps = castedProps;\n    }\n    const global = subject.global;\n    const { support } = renderWithSupport(newSupport, global.newest, // existing tag\n    subject, ownerSupport);\n    processReplaceTagResult(support, counts, subject);\n    return support;\n}\nexport function processFirstSubjectComponent(templater, subject, ownerSupport, counts, appendTo) {\n    // TODO: This below check not needed in production mode\n    // validateTemplater(templater)\n    const newSupport = getSupport(templater, ownerSupport, ownerSupport.appSupport, subject);\n    const newPropsConfig = newSupport.propsConfig;\n    if (newPropsConfig) {\n        const castedProps = templater.tagJsType !== ValueTypes.tagComponent ? [] : getCastedProps(templater, newSupport);\n        newPropsConfig.castProps = castedProps;\n    }\n    const global = subject.global;\n    const { support } = renderWithSupport(newSupport, global.newest, // existing tag   \n    subject, ownerSupport);\n    processFirstTagResult(support, counts, appendTo);\n    return support;\n}\n//# sourceMappingURL=processFirstSubjectComponent.function.js.map","import { subscribeToTemplate } from '../../interpolations/subscribeToTemplate.function.js';\nimport { buildBeforeElement } from '../buildBeforeElement.function.js';\nimport { paintAppends } from '../paint.function.js';\nimport { checkTagValueChange } from '../index.js';\nexport function processReplaceTagResult(support, counts, contextItem) {\n    contextItem.checkValueChange = checkTagValueChange;\n    const ph = contextItem.placeholder;\n    const result = buildBeforeElement(support, counts, undefined, // element for append child\n    ph);\n    const subs = result.subs;\n    for (const sub of subs) {\n        subscribeToTemplate(sub);\n    }\n    return support;\n}\nexport function processFirstTagResult(support, counts, appendTo) {\n    let appendIndex = paintAppends.length;\n    const result = buildBeforeElement(support, counts, appendTo, undefined);\n    for (const dom of result.dom) {\n        if (dom.domElement) {\n            paintAppends.splice(appendIndex++, 0, {\n                element: dom.domElement,\n                relative: appendTo,\n            });\n        }\n        if (dom.marker) {\n            paintAppends.splice(appendIndex++, 0, {\n                element: dom.marker,\n                relative: appendTo,\n            });\n        }\n    }\n    const subs = result.subs;\n    for (const sub of subs) {\n        subscribeToTemplate(sub);\n    }\n    return support;\n}\n//# sourceMappingURL=processTagResult.function.js.map","import { getTemplaterResult } from '../getTemplaterResult.function.js';\nimport { newSupportByTemplater } from './processTag.function.js';\nimport { PropWatches } from '../tag.function.js';\nexport function oneRenderToSupport(wrapper, subject, ownerSupport) {\n    const templater = getTemplaterResult(PropWatches.DEEP);\n    templater.tagJsType = wrapper.tagJsType;\n    const support = newSupportByTemplater(templater, ownerSupport, subject);\n    let tag;\n    function wrap() {\n        templater.tag = tag || wrapper();\n        return support;\n    }\n    templater.wrapper = wrap;\n    wrap.tagJsType = wrapper.tagJsType;\n    wrap.original = wrapper.original || wrapper;\n    return support;\n}\n//# sourceMappingURL=oneRenderToSupport.function.js.map","import { processFirstSubjectValue } from '../tag/update/processFirstSubjectValue.function.js';\nimport { processSubUpdate } from './processSubscriptionUpdate.function.js';\nimport { setUseMemory } from '../state/setUseMemory.object.js';\nimport { paint } from '../tag/paint.function.js';\n/** Used for when dynamic value is truly something to subscribe to */\nexport function subscribeToTemplate({ subject, support, counts, contextItem, appendTo, }) {\n    let onValue = function onSubValue(value) {\n        processFirstSubjectValue(value, contextItem, support, { ...counts }, syncRun ? appendTo : undefined);\n        if (!syncRun && !setUseMemory.stateConfig.support) {\n            paint();\n        }\n        // from now on just run update\n        onValue = function subscriptionUpdate(value) {\n            processSubUpdate(value, contextItem, support);\n        };\n    };\n    // onValue mutates so function below calls original and mutation\n    const callback = function subValueProcessor(value) {\n        onValue(value);\n    };\n    let syncRun = true;\n    const sub = subject.subscribe(callback);\n    contextItem.subject = subject;\n    syncRun = false;\n    const global = support.subject.global;\n    const subs = global.subscriptions = global.subscriptions || [];\n    subs.push(sub);\n    // contextItem.handler = blankHandler\n}\n//# sourceMappingURL=subscribeToTemplate.function.js.map","import { updateExistingValue } from '../tag/update/updateExistingValue.function.js';\nimport { setUseMemory } from '../state/setUseMemory.object.js';\nimport { paint } from '../tag/paint.function.js';\nexport function processSubUpdate(value, contextItem, support) {\n    if (value === contextItem.value) {\n        return; // same value emitted\n    }\n    updateExistingValue(contextItem, value, support);\n    if (!setUseMemory.stateConfig.support) {\n        paint();\n    }\n    return;\n}\n//# sourceMappingURL=processSubscriptionUpdate.function.js.map","import { isSkipPropValue } from '../../alterProp.function.js';\nimport { BasicTypes } from '../ValueTypes.enum.js';\nimport { isArray } from '../../isInstance.js';\nimport { updateExistingObject } from './updateExistingObject.function.js';\nimport { updateExistingArray } from './updateExistingArray.function.js';\nexport function syncPriorPropFunction(priorProp, prop, newSupport, ownerSupport, maxDepth, depth) {\n    if (priorProp === undefined || priorProp === null) {\n        return prop;\n    }\n    // prevent infinite recursion\n    if (depth > maxDepth) {\n        return prop;\n    }\n    if (typeof (priorProp) === BasicTypes.function) {\n        // the prop i am receiving, is already being monitored/controlled by another parent\n        if (prop.mem) {\n            priorProp.mem = prop.mem;\n            return prop;\n        }\n        priorProp.mem = prop;\n        return priorProp;\n    }\n    if (isSkipPropValue(prop)) {\n        return prop; // no children to crawl through\n    }\n    if (isArray(prop)) {\n        return updateExistingArray(prop, priorProp, newSupport, ownerSupport, depth, maxDepth);\n    }\n    return updateExistingObject(prop, priorProp, newSupport, ownerSupport, depth, maxDepth);\n}\n//# sourceMappingURL=syncPriorPropFunction.function.js.map","import { syncPriorPropFunction } from './syncPriorPropFunction.function.js';\nexport function updateExistingArray(prop, priorProp, newSupport, ownerSupport, depth, maxDepth) {\n    for (let index = prop.length - 1; index >= 0; --index) {\n        const x = prop[index];\n        const oldProp = priorProp[index];\n        prop[index] = syncPriorPropFunction(oldProp, x, newSupport, ownerSupport, maxDepth, depth + 1);\n    }\n    return prop;\n}\n//# sourceMappingURL=updateExistingArray.function.js.map","import { syncPriorPropFunction } from './syncPriorPropFunction.function.js';\nexport function updateExistingObject(prop, priorProp, newSupport, ownerSupport, depth, maxDepth) {\n    const keys = Object.keys(prop);\n    for (const name of keys) {\n        const subValue = prop[name];\n        const oldProp = priorProp[name];\n        const result = syncPriorPropFunction(oldProp, subValue, newSupport, ownerSupport, maxDepth, depth + 1);\n        if (subValue === result) {\n            continue;\n        }\n        const hasSetter = Object.getOwnPropertyDescriptor(prop, name)?.set;\n        if (hasSetter) {\n            continue;\n        }\n        prop[name] = result;\n    }\n    return prop;\n}\n//# sourceMappingURL=updateExistingObject.function.js.map","import { getChildTagsToSoftDestroy } from '../getChildTagsToDestroy.function.js';\nimport { getNewGlobal } from '../update/getNewGlobal.function.js';\nimport { smartRemoveKids } from '../smartRemoveKids.function.js';\n/** used when a tag swaps content returned */\nexport function softDestroySupport(lastSupport) {\n    const global = lastSupport.subject.global;\n    const { subs, tags } = getChildTagsToSoftDestroy(global.context);\n    softDestroyOne(lastSupport);\n    for (const child of tags) {\n        softDestroyOne(child);\n    }\n    const mySubs = global.subscriptions;\n    if (mySubs) {\n        subs.forEach(sub => sub.unsubscribe());\n    }\n    getNewGlobal(lastSupport.subject);\n}\nfunction softDestroyOne(child) {\n    const subject = child.subject;\n    const global = subject.global;\n    if (global.deleted === true) {\n        return;\n    }\n    global.deleted = true; // the children are truly destroyed but the main support will be swapped\n    subject.renderCount = 0; // TODO: most likely can be removed\n    smartRemoveKids(child, []);\n}\n//# sourceMappingURL=softDestroySupport.function.js.map","import { moveProviders } from '../update/updateExistingTagComponent.function.js';\nimport { softDestroySupport } from './softDestroySupport.function.js';\nimport { renderTagOnly } from './renderTagOnly.function.js';\nimport { isLikeTags } from '../isLikeTags.function.js';\nimport { ValueTypes } from '../ValueTypes.enum.js';\n/** TODO: This seems to support both new and updates and should be separated? */\nexport function renderWithSupport(newSupport, lastSupport, // previous\nsubject, // events & memory\nownerSupport) {\n    const lastTemplater = lastSupport?.templater;\n    const lastTag = lastTemplater?.tag;\n    const reSupport = renderTagOnly(newSupport, lastSupport, subject, ownerSupport);\n    const isLikeTag = !lastSupport || isLikeTags(lastSupport, reSupport);\n    if (!isLikeTag) {\n        moveProviders(lastSupport, reSupport);\n        softDestroySupport(lastSupport);\n        const global = reSupport.subject.global;\n        global.oldest = reSupport;\n        global.newest = reSupport;\n    }\n    else if (lastSupport) {\n        const tag = lastSupport.templater.tag;\n        if (tag && subject.renderCount > 0) {\n            checkTagSoftDestroy(tag, lastSupport, lastTag);\n        }\n    }\n    const lastOwnerSupport = lastSupport?.ownerSupport;\n    reSupport.ownerSupport = (ownerSupport || lastOwnerSupport);\n    return { support: reSupport, wasLikeTags: isLikeTag };\n}\nfunction checkTagSoftDestroy(tag, lastSupport, lastTag) {\n    if (tag.tagJsType === ValueTypes.dom) {\n        const lastDom = lastTag?.dom;\n        const newDom = tag.dom;\n        if (lastDom !== newDom) {\n            softDestroySupport(lastSupport);\n        }\n        return;\n    }\n    if (lastTag) {\n        const lastStrings = lastTag.strings;\n        if (lastStrings) {\n            const oldLength = lastStrings?.length;\n            const newLength = tag.strings.length;\n            if (oldLength !== newLength) {\n                softDestroySupport(lastSupport);\n            }\n        }\n    }\n}\n//# sourceMappingURL=renderWithSupport.function.js.map","import { renderWithSupport } from './renderWithSupport.function.js';\nimport { processTag } from '../update/processTag.function.js';\nimport { updateSupportBy } from '../updateSupportBy.function.js';\nconst fooCounts = { added: 0, removed: 0 };\n// TODO: This function is being called for 1st time renders WHEN renderCount === 1\nexport function renderExistingReadyTag(lastSupport, newSupport, // new to be rendered\nownerSupport, // ownerSupport\nsubject) {\n    const global = subject.global;\n    const { support, wasLikeTags } = renderWithSupport(newSupport, lastSupport, // renderCount <= 0 ? undefined : lastSupport\n    subject, ownerSupport);\n    if (wasLikeTags) {\n        updateSupportBy(global.oldest, support);\n        return support;\n    }\n    processTag(ownerSupport, subject, fooCounts);\n    return support;\n}\n//# sourceMappingURL=renderExistingTag.function.js.map","import { getSupportInCycle } from '../tag/getSupportInCycle.function.js';\nimport { setUseMemory } from './setUseMemory.object.js';\nimport { SyncCallbackError } from '../errors.js';\nimport { createTrigger } from './callback.function.js';\nexport const callbackMaker = () => {\n    const support = getSupportInCycle();\n    // callback as typeof innerCallback\n    if (!support) {\n        throw syncError;\n    }\n    const oldState = setUseMemory.stateConfig; // .stateArray\n    // oldState.support = support // TODO: should not be need and already set\n    return function triggerMaker(callback) {\n        return createTrigger(support, oldState, callback);\n    };\n};\nexport const syncError = new SyncCallbackError('callback() was called outside of synchronous rendering. Use `callback = callbackMaker()` to create a callback that could be called out of sync with rendering');\n//# sourceMappingURL=callbackMaker.function.js.map","import { setUseMemory } from '../state/index.js';\nexport function getSupportInCycle() {\n    return setUseMemory.stateConfig.support;\n}\n//# sourceMappingURL=getSupportInCycle.function.js.map","// taggedjs-no-compile\nimport { ValueTypes } from './ValueTypes.enum.js';\nimport { getSupportInCycle } from './getSupportInCycle.function.js';\nexport const variablePrefix = ':tagvar';\nexport const variableSuffix = ':';\nexport function getStringTag(strings, values) {\n    const tag = {\n        values,\n        ownerSupport: getSupportInCycle(),\n        tagJsType: ValueTypes.tag,\n        strings,\n        /** Used within an array.map() that returns html aka array.map(x => html``.key(x)) */\n        key(arrayValue) {\n            tag.arrayValue = arrayValue;\n            return tag;\n        },\n        html: function html(strings, values) {\n            tag.children = { strings, values };\n            return tag;\n        }\n    };\n    return tag;\n}\nexport function getDomTag(dom, values) {\n    const tag = {\n        values,\n        ownerSupport: getSupportInCycle(),\n        dom,\n        tagJsType: ValueTypes.dom,\n        key: function keyFun(arrayValue) {\n            tag.arrayValue = arrayValue;\n            return tag;\n        },\n        html: {\n            dom: function dom(dom, // ObjectChildren\n            values) {\n                tag.children = { dom: dom, values };\n                return tag;\n            }\n        }\n    };\n    return tag;\n}\n//# sourceMappingURL=getDomTag.function.js.map","// taggedjs-no-compile\nimport { variableSuffix, variablePrefix } from \"../../tag/getDomTag.function.js\";\nimport { ImmutableTypes } from \"../../tag/ValueTypes.enum.js\";\nconst placeholderRegex = new RegExp(variablePrefix + '(\\\\d+)' + variableSuffix, 'g');\nconst ch = 'ch'; // short for children\nexport function replacePlaceholders(dom, valueCount, valuePositions = [], currentTail = []) {\n    const elements = dom;\n    for (let i = 0; i < elements.length; i++) {\n        const loopTail = [...currentTail, i];\n        const element = elements[i];\n        if (element.at) {\n            const attrs = element.at;\n            element.at = processAttributes(attrs, valueCount);\n        }\n        if (element.ch) {\n            const children = element.ch;\n            const innerLoopTail = [...loopTail, ch];\n            element.ch = replacePlaceholders(children, valueCount, valuePositions, innerLoopTail);\n        }\n        i = examineChild(element, valueCount, elements, i);\n    }\n    return elements;\n}\nfunction examineChild(child, valueCount, children, index) {\n    if (child.nn !== 'text') {\n        return index;\n    }\n    const textChild = child;\n    let textContent = textChild.tc;\n    if (typeof textContent !== ImmutableTypes.string) {\n        return index;\n    }\n    let match;\n    while ((match = placeholderRegex.exec(textContent)) !== null) {\n        const secondMatch = match[1];\n        const wIndex = parseInt(secondMatch, 10);\n        const examine = !isNaN(wIndex) && wIndex < valueCount;\n        if (examine) {\n            const varContent = variablePrefix + wIndex + variableSuffix;\n            const after = textContent.slice(match.index + varContent.length);\n            children.splice(index, 1, ...[{\n                    nn: 'text',\n                    v: wIndex\n                }]);\n            textContent = after;\n            placeholderRegex.lastIndex = 0; // Reset regex index due to split\n        }\n    }\n    textChild.tc = textContent;\n    return index;\n}\nfunction processAttributes(attributes, valueCount) {\n    return attributes.map(attrSet => {\n        const [key, value, isSpecial] = attrSet;\n        if (key.startsWith(variablePrefix)) {\n            const index = parseInt(key.replace(variablePrefix, ''), 10);\n            if (!isNaN(index) && index < valueCount) {\n                return [{ tagJsVar: index }];\n            }\n        }\n        if (typeof value === ImmutableTypes.string && value.startsWith(variablePrefix)) {\n            const index = parseInt(value.replace(variablePrefix, ''), 10);\n            if (!isNaN(index) && index < valueCount) {\n                return [key, { tagJsVar: index }, isSpecial];\n            }\n        }\n        return attrSet;\n    });\n}\n//# sourceMappingURL=replacePlaceholders.function.js.map","import { getStringTag, getDomTag } from './getDomTag.function.js';\nimport { PropWatches } from './tag.function.js';\nimport { getTemplaterResult } from './getTemplaterResult.function.js';\n/** Used as html`<div></div>` */\nexport function html(strings, ...values) {\n    const stringTag = getStringTag(strings, values);\n    const templater = getTemplaterResult(PropWatches.NONE);\n    templater.tag = stringTag;\n    stringTag.templater = templater;\n    return stringTag;\n}\nhtml.dom = function (dom, ...values) {\n    return getDomTag(dom, values);\n};\n//# sourceMappingURL=html.js.map","export * from './tag/index.js';\nexport * from './errors.js';\nexport * from './isInstance.js';\nexport * from './state/index.js';\nexport { states } from './state/states.function.js';\nexport * from './subject/index.js';\nexport * from './interpolations/index.js';\nexport * from './tag/getSupport.function.js';\nexport * from './interpolations/attributes/howToSetInputValue.function.js';\nexport * from './interpolations/attributes/ElementTargetEvent.interface.js';\nimport { renderTagOnly } from './tag/render/renderTagOnly.function.js';\nimport { renderSupport } from './tag/render/renderSupport.function.js';\nimport { renderWithSupport } from './tag/render/renderWithSupport.function.js';\nimport { tagElement } from './tag/tagElement.js';\nimport { paint } from './tag/paint.function.js';\nexport { tagElement, renderWithSupport, renderSupport, renderTagOnly, paint, };\nexport const hmr = {\n    tagElement, renderWithSupport, renderSupport,\n    renderTagOnly, paint,\n};\n//# sourceMappingURL=index.js.map","import { html, state, states, tag } from \"taggedjs\"\n\ntype Formula = {\n  value: any // unknown\n  title: string\n  stringFormula: string\n}\n\nexport const columnEditor = tag(({\n  name,\n  array,\n  included,\n  columnNames,\n  allColumnNames\n}: {\n  name: string,\n  array: unknown[],\n  included: boolean,\n  columnNames: string[]\n  allColumnNames: string[]\n}) => {\n  let mouseOverEditShow = false\n  let edit = false\n  let editFormula = undefined as Formula | undefined\n  const formulas = state([] as Formula[])\n\n  states(get => [{\n    mouseOverEditShow, edit, editFormula\n  }] = get({\n    mouseOverEditShow, edit, editFormula\n  }))\n\n  const goAll = () => {\n    columnNames.length = 0\n    columnNames.push(...allColumnNames)\n  }\n\n  const goOnly = () => {\n    columnNames.length = 0\n    columnNames.push(name)\n  }\n\n  function toggle() {\n    const index = columnNames.indexOf(name)\n\n    if(index >= 0) {\n      columnNames.splice(index, 1)\n      return\n    }\n\n    columnNames.push(name)\n  }\n\n  const addSumFormula = () => {\n    const stringFormula = `\n      array.reduce((all, item) => {\n        const value = item['${name}']\n        return isNaN(value) ? all : (all + value)\n      }, 0)\n    `\n    \n    formulas.push({\n      title: 'sum',\n      stringFormula,\n      value: sandboxRunEval(stringFormula, {array})\n    })\n  }\n\n  const updateFormula = (formula: Formula, newFormula: string) => {\n    formula.stringFormula = newFormula\n    formula.value = sandboxRunEval(newFormula, {array})\n  }\n\n  return html`\n    <a onclick=${toggle} style=\"cursor:pointer;\">\n      <input type=\"checkbox\" ${included && 'checked'} />&nbsp;${name}\n    </a>\n\n    <div\n      onmouseover=${() => mouseOverEditShow = true}\n      onmouseout=${() => mouseOverEditShow = false}\n    >\n      <a style.visibility=${(edit || mouseOverEditShow) ? 'visible' : 'hidden'}\n        onclick=${() => edit = !edit}\n      >⚙️&nbsp;</a>\n      \n      ${included && columnNames.length !== allColumnNames.length ? html`\n        <a style=\"color:blue;\" onclick=${goAll}><small>all</small></a>\n      ` : html`\n        <a style=\"color:blue;\" onclick=${goOnly}><small>only</small></a>\n      `}\n    </div>\n\n    ${edit && html`\n      <div style=\"width:100%;padding:0.3em;\">\n        <div style=\"font-size:0.7em;text-align:center;\">\n          <strong>Column Settings</strong>\n        </div>\n        <div>\n          ${editFormula && html`\n            <div style=\"padding:0.3em;\">\n              <strong>edit formula</strong>\n            </div>\n            <textarea wrap=\"off\"\n              onchange=${(evt: any) => updateFormula(editFormula as Formula, evt.target.value)}\n            >${editFormula.value}</textarea>\n          `}\n          <div style=\"display:flex;flex-wrap:wrap;gap:1em\">\n            ${formulas.map(formula =>\n              html`\n                <div>\n                  <div>\n                    <strong>${formula.title}</strong>\n                    <a onclick=${() => editFormula = formula}>✏️</a>\n                  </div>\n                  <div>${formula.value}</div>\n                </div>\n              `.key(formula)\n            )}\n          </div>\n          <button type=\"button\" onclick=${addSumFormula}>sum</button>\n        </div>\n      </div>\n    `}\n  `\n})\n\nfunction sandboxRunEval(stringFormula: string, context: Record<string, any> = {}) {\n  return sandboxEval(stringFormula, {isNaN, Math, Number, Date, ...context})\n}\n\n// execute script in private context\nfunction sandboxEval(\n  src: string,\n  ctx: Record<string, any>\n){\n  if(!src) {\n    return src\n  }\n\n  ctx = new Proxy(ctx, {has: () => true})\n  let func = (new Function(\"with(this) { return (\" + src + \")}\"));\n  return func.call(ctx)\n}\n","import { html, tag } from \"taggedjs\"\nimport { FormatChange, dump } from \"./index\"\nimport { EverySimpleValue } from \"./dump.props\"\n\nexport const arrayTable = tag(({\n  array,\n  // showLevels,\n  showAll,\n  showKids,\n  toggleColumnDialog,\n  columnNames,\n  formatChange,\n  allowMaximize,\n  everySimpleValue,\n}: {\n  array: any[]\n  // showLevels: number\n  showAll?: boolean\n  showKids: boolean\n  toggleColumnDialog: any\n  columnNames: string[],\n  formatChange: FormatChange,\n  allowMaximize?: boolean,\n  everySimpleValue?: EverySimpleValue\n}) => {\n  return html`<!-- array table -->\n    <!-- overflow-y: scroll; -->\n    <div style=\"max-height: 800px;max-width:100vw;overflow: scroll;\">\n      <table cellPadding=\"2\" cellSpacing=\"2\" border=\"0\">\n        ${array.length && html`\n          <thead style=\"position: sticky;top: 0;font-size: 0.8em;\">\n            <tr>\n              ${columnNames.map(key => html`\n                <th\n                  style.cursor=${toggleColumnDialog && 'pointer'}\n                  onclick=${toggleColumnDialog}\n                >${key}</th>\n              `.key(key))}\n            </tr>\n          </thead>\n        `}\n        <tbody>\n          ${array.map(row => html`\n            <tr>\n              ${columnNames.map(name => html`\n                <td>\n                  ${dump({\n                    value: row[name],\n                    showLevels: 0,\n                    showAll,\n                    showKids:showAll || showKids,\n                    isRootDump:false,\n                    formatChange,\n                    allowMaximize,\n                  })}\n                </td>\n              `.key(row[name]))}\n            </tr>\n          `.key(row))}\n        </tbody>\n      </table>\n    </div>\n  `\n})\n","import { html, tag } from \"taggedjs\"\nimport { FormatChange, dump } from \"./index\"\nimport { EverySimpleValue } from \"./dump.props\"\n\nexport const arrayDisplay = tag(({\n  array, showLevels,\n  showAll, showKids,\n  columnNames,\n  formatChange,\n  toggleColumnDialog,\n  allowMaximize,\n  everySimpleValue,\n}: {\n  array: any[]\n  showLevels: number\n  showAll?: boolean\n  showKids: boolean\n  columnNames?: string[]\n  formatChange: FormatChange\n  toggleColumnDialog: () => any\n  allowMaximize?: boolean,\n  everySimpleValue?: EverySimpleValue,\n}) => {\n  return html`\n    ${array.map((\n      item: any,\n      index: number\n    ) => {\n      const value = paramValueKeys(item, columnNames)\n      return html`${dump({\n        value,\n        showLevels,\n        showAll,\n        showKids: true, // showAll || showKids,\n        isRootDump:false,\n        formatChange,\n        onHeaderClick: toggleColumnDialog,\n        allowMaximize,\n        everySimpleValue,\n      })}`.key(index)\n    })}\n  `\n})\n\nfunction paramValueKeys(\n  inputObject: Record<string, any> | string,\n  keysArray?: string[]\n) {\n  if(['string','number','boolean'].includes(typeof(inputObject))) {\n    return inputObject\n  }\n\n  if(Array.isArray(inputObject)) {\n    return inputObject\n  }\n\n  return filterObjectByKeys(inputObject as Record<string, any>, keysArray)\n}\n\nfunction filterObjectByKeys(\n  inputObject: Record<string, any>,\n  keysArray?: string[]\n) {\n  if(!keysArray) {\n    // keysArray = Object.keys(inputObject)\n    // return {...inputObject} // must be clone so unchecking items does not change original object\n    return inputObject\n  }\n\n  const filteredObject: Record<string, any> = {}\n\n  keysArray.forEach(key => {\n    if (inputObject.hasOwnProperty(key) || key in inputObject) {\n      filteredObject[key] = inputObject[key]\n    }\n  })\n\n  return filteredObject\n}\n","import { columnEditor } from \"./columnEditor.component\"\nimport { html, state, states, tag, watch } from \"taggedjs\"\nimport { FormatChange } from \"./index\"\nimport { arrayTable } from \"./arrayTable.component\"\nimport { arrayDisplay } from \"./arrayDisplay.tag\"\nimport { EverySimpleValue } from \"./dump.props\"\n\nexport const arraysDisplay = tag(({\n  showLevels,\n  showAll,\n  showKids,\n  array,\n  arrayView,\n  formatChange,\n  allowMaximize,\n  everySimpleValue,\n}: {\n  formatChange: FormatChange\n  array: any[]\n  arrayView: string\n  showLevels: number\n  showAll?: boolean\n  showKids: boolean\n  allowMaximize?: boolean\n  everySimpleValue?: EverySimpleValue\n}) => {\n  // used to display list of all possible columns\n  const allColumnNames = watch([array, array.length], () =>\n    array.length ? getAllKeys(array) : []\n  )\n  \n  // an editable list of column names\n  let columnNames: string[] | undefined = undefined\n  const defaultColumnNames: string[] = watch([allColumnNames], () => [...allColumnNames])\n\n  let showColumnDialog = false\n  const uniqueId = state(() => 'columnDialog' + performance.now())\n\n  states(get => [{columnNames, showColumnDialog}] = get({columnNames, showColumnDialog}))\n\n  watch.noInit([defaultColumnNames.length], () => {\n    if(!columnNames) {\n      columnNames = defaultColumnNames\n    }\n  })\n\n  const toggleColumnDialog = () => {\n    showColumnDialog = !showColumnDialog\n    const element = document.getElementById(uniqueId) as any\n    \n    if(showColumnDialog) {\n      element.showModal()\n    } else {\n      element.close() // <- element has onclose event that is called slow\n    }\n  }\n\n  const arrayTag = arrayView === 'table' ? arrayTable({\n    showAll, showKids,\n    array, toggleColumnDialog,\n    columnNames: columnNames || allColumnNames,\n    formatChange, everySimpleValue,\n  }) : arrayDisplay({\n    array, showLevels, showAll, showKids,\n    formatChange,\n    columnNames: columnNames || allColumnNames,\n    toggleColumnDialog,\n    allowMaximize, everySimpleValue\n  })\n\n  return html`\n    ${arrayTag}\n\n    <dialog id=${uniqueId} class=\"dump-dialog\" style=\"padding:0\"\n      onmousedown=\"var r = this.getBoundingClientRect();(r.top<=event.clientY&&event.clientY<=r.top+r.height&&r.left<=event.clientX&&event.clientX<=r.left+r.width) || this.close()\"\n      ondragstart=\"const {e,dt,t} = {t:this,e:event,dt:event.dataTransfer};const d=t.drag=t.drag||{x:0,y:0};d.initX=d.x;d.startX=event.clientX-t.offsetLeft;d.startY=event.clientY-t.offsetTop;t.ondragover=e.target.ondragover=(e)=>e.preventDefault();dt.effectAllowed='move';dt.dropEffect='move'\"\n      ondrag=\"const {t,e,dt,d}={e:event,dt:event.dataTransfer,d:this.drag}; if(e.clientX===0) return;d.x = d.x + e.offsetX - d.startX; d.y = d.y + e.offsetY - d.startY; this.style.left = d.x + 'px'; this.style.top = d.y+'px';\"\n      ondragend=\"const {t,e,d}={t:this,e:event,d:this.drag};if (d.initX === d.x) {d.x=d.x+e.offsetX-(d.startX-d.x);d.y=d.y+e.offsetY-(d.startY-d.y);this.style.transform=translate3d(d.x+'px', d.y+'px', 0)};this.draggable=false\"\n    >\n      <div\n        style=\"padding:.25em;background-color:#666;color:white;\"\n        onmousedown=\"this.parentNode.draggable=true\"\n      >Column Modifier</div>\n      <div style=\"padding:.25em\">\n        ${allColumnNames.map(name => {\n          const included = columnNames === undefined || columnNames.includes(name)\n          return html`\n            <div\n              style=\"display:flex;justify-content: space-between;flex-wrap:wrap\"\n              class=\"hover-bg-warning\"\n            >\n              ${columnEditor({\n                name,\n                array,\n                included,\n                columnNames: columnNames || defaultColumnNames,\n                allColumnNames,\n              })}\n            </div>\n          `.key(name)\n        })}\n        <button style=\"width:100%\" type=\"button\" onclick=${toggleColumnDialog}>🅧 close</button>\n      </div>\n    </dialog>\n  `\n})\n\nexport function getAllKeys(array: any[]): string[] {\n  return array.reduce((all, x) => {\n    if(x && typeof(x) === 'object') {\n      if(Array.isArray(x)) {\n        return all\n      }\n\n      Object.keys(x).forEach((x) => {\n        if(all.includes(x)) {\n          return // already have it\n        }\n\n        all.push(x)\n      })\n    }\n    \n    return all\n  }, [])\n}\n","import { arraysDisplay } from \"./arraysDisplay.component\"\nimport { html, letProp, state, states, tag, watch } from \"taggedjs\"\nimport { FormatChange } from \"./index.js\"\nimport { EverySimpleValue } from \"./dump.props\"\n\nexport const dumpArray = tag(({// dumpArray\n  key,\n  value,\n  show,\n  showAll,\n  showKids,\n  // arrayView,\n  showLevels,\n  formatChange,\n  allowMaximize,\n  everySimpleValue,\n}: {\n  value: any\n  showLevels: number\n  key?: string\n  show: boolean\n  showAll?: boolean\n  showKids: boolean\n  // arrayView?: string\n  formatChange: FormatChange\n  allowMaximize?: boolean\n  everySimpleValue?: EverySimpleValue\n}) => {\n  let showLower = undefined as boolean | undefined\n  let arrayView = undefined as undefined | 'table'\n  let maximize = false\n  \n  states(get => [{showLower, arrayView, maximize}] = get({showLower, arrayView, maximize}))\n  letProp(get => [showKids] = get(showKids))\n  letProp(get => [showAll] = get(showAll))\n  \n  watch.noInit([show], ([show])=> showLower = show)\n  watch.noInit([showAll], ([showAll])=> showLower = showAll)\n\n  const maximizeId = state(() => 'maximize-dump-' + performance.now())\n  const toggleMaximize = () => {\n    maximize = !maximize\n    if(maximize) {\n      (document.getElementById(maximizeId) as any).showModal()\n    }\n  }\n  \n  const minimize = () => (document.getElementById(maximizeId) as any).close()\n  const dumpBody = (showAll || showLower || showKids || (showLower==undefined && showLevels > 0))\n\n  const getHeader = (allowMaximize?: boolean) => html`\n    <div class=\"taggedjs-array-label\">\n      <a style=\"flex-grow:1\" onclick=${() => {\n        if(showLower === undefined) {\n          return showAll = showKids = showLower = !dumpBody\n        }\n\n        showAll = showKids = showLower = !showLower\n      }}>\n        <strong>${key}</strong>\n      </a>\n      <sup style=\"opacity:80%;font-size:75%;padding-left:0.4em\">\n        <a style=\"text-decoration:underline;\" style.font-weight=${arrayView === 'table' ? 'bold' : ''}\n          onclick=${() => arrayView = arrayView === 'table' ? undefined : 'table'\n        }>${arrayView === 'table' ? 'flex' : 'table'}</a>\n      </sup>\n      <sup style=\"opacity:80%;font-size:75%;padding-left:0.4em\">[${value.length}]</sup>\n      ${allowMaximize && html`\n        &nbsp;<a onclick=${toggleMaximize}><span style=\"width:10px;height:10px;border:1px solid white;border-top-width:3px;display:inline-block;\"></span></a>\n      `}\n    </div>\n  `\n\n  const displayOptions = {\n    showLevels, showAll, showKids,\n    formatChange,\n    array: value,\n    arrayView: arrayView as string,\n    allowMaximize,\n    everySimpleValue,\n  }\n\n  const getBody = () => html`\n    <!-- array displays wrap -->\n    <div class=\"taggedjs-array-body\">\n      ${arraysDisplay(displayOptions)}\n    </div>\n  `\n\n  return html`<!-- array -->\n    <div class=\"taggedjs-array-wrap\">\n      ${getHeader(allowMaximize)}\n      ${dumpBody && getBody()}\n    </div>\n\n    <!-- maximize -->\n    <dialog id=${maximizeId} class=\"dump-dialog\" style=\"padding:0\"\n      onmousedown=\"var r = this.getBoundingClientRect();(r.top<=event.clientY&&event.clientY<=r.top+r.height&&r.left<=event.clientX&&event.clientX<=r.left+r.width) || this.close()\"\n      ondragstart=\"const {e,dt,t} = {t:this,e:event,dt:event.dataTransfer};const d=t.drag=t.drag||{x:0,y:0};d.initX=d.x;d.startX=event.clientX-t.offsetLeft;d.startY=event.clientY-t.offsetTop;t.ondragover=e.target.ondragover=(e)=>e.preventDefault();dt.effectAllowed='move';dt.dropEffect='move'\"\n      ondrag=\"const {t,e,dt,d}={e:event,dt:event.dataTransfer,d:this.drag}; if(e.clientX===0) return;d.x = d.x + e.offsetX - d.startX; d.y = d.y + e.offsetY - d.startY; this.style.left = d.x + 'px'; this.style.top = d.y+'px';\"\n      ondragend=\"const {t,e,d}={t:this,e:event,d:this.drag};if (d.initX === d.x) {d.x=d.x+e.offsetX-(d.startX-d.x);d.y=d.y+e.offsetY-(d.startY-d.y);this.style.transform=translate3d(d.x+'px', d.y+'px', 0)};this.draggable=false\"\n    >\n      <div style=\"padding:.25em\" onmousedown=\"this.parentNode.draggable=true\">\n        ${maximize && getHeader(false)}\n      </div>\n      \n      ${maximize && html`\n        <div style=\"text-align:left;display:flex;flex-wrap:wrap;margin:0.2em;gap:0.2em\">\n          ${arraysDisplay({...displayOptions, allowMaximize: false})}\n        </div>\n      `}\n\n      <div style=\"padding:.25em\">\n        <button type=\"button\" onclick=${minimize} style=\"width:100%\">🅧 close array</button>\n      </div>\n    </dialog>\n  `\n})\n","export function copyText(text: string) {\n  var copyText = document.createElement('textarea')\n  copyText.value = text\n  document.body.appendChild(copyText)\n  copyText.select()\n  copyText.setSelectionRange(0, 99999)\n  document.execCommand(\"copy\")\n  document.body.removeChild(copyText)\n}\n","import { Tag, html, states, tag } from \"taggedjs\"\nimport { OnHeaderClick } from \"./index\"\nimport { copyText } from \"./copyText.function\"\nimport { EverySimpleValue, SimpleValue } from \"./dump.props\"\n\nexport function dumpSimple({\n  key, value, onHeaderClick, everySimpleValue\n}: {\n  key: string | undefined\n  value: any\n  onHeaderClick?: OnHeaderClick,\n  everySimpleValue?: EverySimpleValue,\n}) {\n  const isLinkValue = value.search && (value.slice(0,8)==='https://' || value.slice(0,7)==='http://')\n\n  // const result = everySimpleValue && everySimpleValue(value, key)\n  let displayValue: SimpleValue | Tag\n\n  if(everySimpleValue) {\n    displayValue = simpleValue({value, everySimpleValue})\n  } else {\n    displayValue = isLinkValue ? linkValue(value) : simpleValue({value})\n  }\n  \n  return html`\n    <div class=\"taggedjs-dump-simple-wrap\">\n      ${key && html`\n        <div class=\"taggedjs-simple-label\"\n          style.cursor=${ onHeaderClick && \"pointer\" }\n          onclick=${onHeaderClick}\n        >${key}</div>\n      `}\n      ${displayValue}\n    </div>\n  `\n}\n\nconst simpleValue = tag(({value, everySimpleValue}: {\n  value: string | undefined | null | boolean,\n  everySimpleValue?: EverySimpleValue,\n}) => {\n  const isLikeNull = [undefined,null,'null'].includes(value as null | undefined)\n  const number = value as unknown as number\n  const isLargeNumber = !isNaN(number) && number > 1000000000\n  const title = !isLargeNumber ? '' : getLargeNumberTitle(number)\n  let downTime = 0\n  \n  states(get => [downTime] = get(downTime))\n\n  const startMouseDown = () => {\n    downTime = Date.now()\n  }\n\n  const markMouseUp = (event: Event) => {\n    if(Date.now() - downTime > 300) {\n      event.preventDefault()\n      event.stopPropagation()\n      return true // a manual drag copy is taking place\n    }\n\n    copyText(value as string) // a regular click took place\n  }\n\n  let displayValue = value\n\n  if(everySimpleValue) {\n    displayValue = everySimpleValue(value) as any\n  }\n\n  displayValue = displayValue === null && 'null' || displayValue === false && 'false' || displayValue === undefined && 'undefined' || displayValue\n\n  return html`\n    <div class=\"hover-bg-warning active-bg-energized\"\n      onmousedown=${startMouseDown}\n      onmouseup=${markMouseUp}\n      style=\"cursor:pointer;\"\n      style.background-color=${isLikeNull ? 'rgba(0,0,0,.5)' : ''}\n      style.color = ${\n        (value === true && '#28a54c') ||\n        (value === false && '#e42112') ||\n        isLikeNull && 'white' || ''\n      }\n      title=${title}\n    >${displayValue}</div>\n  `\n})\n\nfunction getLargeNumberTitle(number: number) {\n  return number > 946702800000 ?\n  'Milliseconds > Unix epoch:\\n' + (new Date(number).toLocaleString()) :\n  'Seconds > Unix epoch:\\n' + (new Date(number*1000).toLocaleString())\n}\n\nconst linkValue = (value: string) => {\n  return html`\n    <a onclick=${() => copyText(value)} href=${value}\n      target=\"_blank\"\n      class=\"hover-bg-warning active-bg-energized\"\n      title=\"tap to copy\"\n    >${value}</a>\n  `\n}","import { html, letProp, state, states, tag, watch } from \"taggedjs\"\nimport { FormatChange, OnHeaderClick, dump } from \"./index\"\nimport { EverySimpleValue } from \"./dump.props\"\n\nexport const dumpObject = tag(<T>({// dumpObject\n  key, showKids,\n  show,\n  showLevels,\n  value,\n  showAll,\n  onHeaderClick,\n  formatChange,\n  allowMaximize,\n  everySimpleValue,\n}:{\n  key?: string\n  value: T\n  showAll?: boolean\n  showKids: boolean\n  show: boolean\n  showLevels: number\n  formatChange: FormatChange\n  onHeaderClick?: OnHeaderClick\n  allowMaximize?: boolean\n  everySimpleValue?: EverySimpleValue\n}) => {\n  let showLower = undefined as boolean | undefined\n  let maximize = false\n  const maximizeId = state(() => 'maximize-dump-' + performance.now())\n\n  states(get => [{showLower, maximize}] = get({showLower, maximize}))\n  letProp(get => [showKids] = get(showKids))\n\n  watch.noInit([show], ([show]) => showLower = show)\n  watch.noInit([showAll], ([showAll]) => showLower = showAll)\n\n  const continueDump = !key || showKids || showLower || (showLower===undefined && showLevels > 0)\n\n  const toggleMaximize = () => {\n    maximize = !maximize\n    if(maximize) {\n      (document.getElementById(maximizeId) as any).showModal()\n    }\n  }\n  const minimize = () => (document.getElementById(maximizeId) as any).close()\n\n  const getHead = (allowMaximize?: boolean) => html`\n    <div class=\"taggedjs-object-label\" style=${showLower ? 'border-bottom-width:1px;border-bottom-style:solid;border-color:black;' : ''}>\n      <a onclick=${() => {\n        if(showLower === undefined) {\n          return showAll = showKids = showLower = !(showAll || showKids || showLower)\n        }\n\n        showKids = showLower = !showLower\n      }}>\n        <strong>${key}</strong>\n        <sup style=\"opacity:80%;font-size:75%;padding-left:0.4em\">\n          {${Object.keys(value as any).length}}\n        </sup>\n      </a>\n      ${allowMaximize && html`\n        &nbsp;\n        <a onclick=${toggleMaximize}>\n          <span style=\"width:10px;height:10px;border:1px solid white;border-top-width:3px;display:inline-block;\"></span>\n        </a>\n      `}\n    </div>\n  `\n\n  const getDumpBody = (allowMaximize?: boolean) => html`\n    <div class=\"taggedjs-object-body-wrap\">\n      ${Object.entries(value as any).map(([key, value]) => html`\n        <!-- recurse -->\n        <div class=\"taggedjs-object\"\n          style=${!value || typeof(value) !== 'object' ? 'flex: 1 1 10em;' : 'flex-grow:1;'}\n        >\n          ${dump({\n            value,\n            key,\n            show: showLower,\n            showAll,\n            showLevels: showLevels - 1,\n            showKids: showAll || showKids,\n            isRootDump: false,\n            formatChange,\n            onHeaderClick,\n            allowMaximize,\n            everySimpleValue,\n          })}\n        </div>\n      `.key(key))}\n    </div>\n  `\n\n  return html`\n    <div style=\"flex: 1 1 10em;text-align:left;\">\n      <div class=\"taggedjs-object-wrap\">\n        ${key && getHead(allowMaximize)}\n        ${continueDump && getDumpBody(allowMaximize)}\n\n        <!-- maximize -->\n        <dialog id=${maximizeId} class=\"dump-dialog\" style=\"padding:0\"\n          onmousedown=\"var r = this.getBoundingClientRect();(r.top<=event.clientY&&event.clientY<=r.top+r.height&&r.left<=event.clientX&&event.clientX<=r.left+r.width) || this.close()\"\n          ondragstart=\"const {e,dt,t} = {t:this,e:event,dt:event.dataTransfer};const d=t.drag=t.drag||{x:0,y:0};d.initX=d.x;d.startX=event.clientX-t.offsetLeft;d.startY=event.clientY-t.offsetTop;t.ondragover=e.target.ondragover=(e)=>e.preventDefault();dt.effectAllowed='move';dt.dropEffect='move'\"\n          ondrag=\"const {t,e,dt,d}={e:event,dt:event.dataTransfer,d:this.drag}; if(e.clientX===0) return;d.x = d.x + e.offsetX - d.startX; d.y = d.y + e.offsetY - d.startY; this.style.left = d.x + 'px'; this.style.top = d.y+'px';\"\n          ondragend=\"const {t,e,d}={t:this,e:event,d:this.drag};if (d.initX === d.x) {d.x=d.x+e.offsetX-(d.startX-d.x);d.y=d.y+e.offsetY-(d.startY-d.y);this.style.transform=translate3d(d.x+'px', d.y+'px', 0)};this.draggable=false\"\n        >\n          <div style=\"padding:.25em\" onmousedown=\"this.parentNode.draggable=true\">\n            ${maximize && getHead(false)}\n          </div>\n          \n          ${maximize && getDumpBody(false)}\n\n          <div style=\"padding:.25em\">\n            <button type=\"button\" onclick=${minimize} style=\"width:100%\">🅧 close object</button>\n          </div>\n        </dialog>\n      </div>\n    </div>\n  `\n})\n","import { html, tag } from \"taggedjs\"\nimport { FormatChange } from \"./index\"\nimport { copyText } from \"./copyText.function\"\n\nexport const controlPanel = tag(({\n  value, format, showAll, formatChange, showAllChange,\n}: {\n  value: any\n  format: string\n  showAll?: boolean\n  showAllChange: (x: boolean) => unknown\n  formatChange: FormatChange\n}) => {\n  return html`\n    <style>\n      dialog.dump-dialog::backdrop {\n        background-color: rgba(0, 0, 0, 0.7); /* Set a semi-transparent black background */\n      }\n\n      .child-margin-xxs {margin:0.2em;}\n      \n      .taggedjs-dump .hover-bg-warning:hover {background-color:#fcf8e3}\n      .taggedjs-dump .hover-bg-balanced:hover {background-color:#33cd5f}\n      .taggedjs-dump .active-bg-energized:active {background-color:#ffc900}\n      .taggedjs-dump .bg-dark {background-color:#444444}\n      .taggedjs-dump .bg-balanced {background-color:#33cd5f}\n      \n      .taggedjs-dump .taggedjs-object {\n        overflow:auto;display:flex;flex-wrap:wrap;\n        padding:0.2em;\n      }\n\n      .taggedjs-dump-simple-wrap {\n        font-size:75%;flex:1 1 10em;color:#111111\n      }\n\n      .taggedjs-dump .taggedjs-object-label {\n        padding:0.2em;display:flex;justify-content:space-between;font-size:65%;color:white;\n        border-color:white;flex-grow:1;\n        background-color:#387ef5;\n      }\n\n      .taggedjs-dump .taggedjs-simple-label {\n        border-bottom-width:1px;border-bottom-style:solid;border-color:black;font-size:65%;border-color:white;line-height: 95%;font-weight:bold;\n      }\n\n      .taggedjs-dump .taggedjs-object-body-wrap {\n        display:flex;flex-wrap:wrap;\n        /*gap:0.4em;padding:0.2em;*/\n      }\n\n      .taggedjs-dump .taggedjs-object-wrap {\n        font-size:95%;\n        color:#111111;background-color:#d9edf7;\n        border:1px solid black;border-radius:5px;flex-direction:column;display:flex;\n      }\n      \n      .taggedjs-dump .taggedjs-array-label {\n        padding:0.2em;display:flex;justify-content:space-between;flex-grow:1;font-size:65%;border-color:white;color:white;background-color:#ef473a;\n      }\n\n      .taggedjs-dump .taggedjs-array-body {\n        text-align:left;display:flex;flex-wrap:wrap;margin:0.2em;gap:0.2em\n      }\n      \n      .taggedjs-dump .taggedjs-array-wrap {\n        color:#111111;background-color:#f2dede;border:1px solid black;border-radius:5px;flex-direction: column;display:flex\n      }\n    </style>\n    <div style=\"width: 100%;line-height: 90%;\">\n      <div style=\"position:relative;\">\n        <div style=\"display:flex;font-size:50%;position:absolute;top:-18px;right:-6px\">\n          ${!format || format==='flex' && html`\n            <a\n              style=${\n                \"margin:1px;border-radius:5px;color:white;align-items:center;display:flex;padding-left:0.2em;padding-right:0.2em;\" +\n                (showAll ? 'background-color:#33cd5f;' : 'background-color:#444444')\n              }\n              class=\"hover-bg-balanced\"\n              onclick=${() => showAllChange(showAll = !showAll)}\n              title=\"hide/show all sub objects\"\n            >👁</a>\n          `}\n          <a\n            style=${\n              \"margin:1px;border-radius:5px;color:white;align-items:center;display:flex;padding-left:0.2em;padding-right:0.2em;\" +\n              (!format || format==='flex' ? 'background-color:#33cd5f;' : 'background-color:#444444')\n            }\n            class=\"hover-bg-balanced\"\n            onclick=${() => formatChange(format='flex')}\n          >flex</a>\n          <a style=${\n            \"margin:1px;border-radius:5px;color:white;align-items:center;display:flex;padding-left:0.2em;padding-right:0.2em;\" +\n            (format==='json' ? 'background-color:#33cd5f;' : 'background-color:#444444')\n            }\n            class=\"hover-bg-balanced\"\n            onclick=${() => formatChange(format='json')}\n          >json</a>\n          <a style=\"margin:1px;border-radius:5px;color:white;align-items:center;display:flex;padding-left:0.2em;padding-right:0.2em;\"\n            class=\"bg-dark hover-bg-balanced active-bg-energized\"\n            onclick=${() => copyAsJsonText(value)}\n          >copy</a>\n        </div>\n      </div>\n    </div>\n  `\n})\n\nfunction copyAsJsonText(value: any) {\n  const text = JSON.stringify(value, null, 2)\n  copyText( text )\n}\n","import { html, onInit, tag, letProp, states, StringTag, DomTag, Tag } from \"taggedjs\"\nimport { dumpArray } from \"./dumpArray.tag\"\nimport { dumpSimple } from \"./dumpSimple.tag\"\nimport { dumpObject } from \"./dumpObject.tag\"\nimport { controlPanel } from \"./controlPanel.tag\"\nimport { DumpProps, FormatChange } from \"./dump.props\"\n\nexport const dump = tag(<T>({// dump tag\n  key, value,\n  showKids = false,\n  showLevels = -1,\n  showAll = false,\n  format = 'flex',\n  formatChange = x => format = x,\n  isRootDump = true,\n  onHeaderClick,\n  allowMaximize,\n  everySimpleValue,\n}: DumpProps<T>) => {\n  if(isRootDump && allowMaximize === undefined) {\n    allowMaximize = true\n  }\n  const isObject = () => value && value instanceof Object\n  const typing = value === null ? 'null' : typeof(value)\n  \n  let show = true\n  letProp(get => [format] = get(format))\n  letProp(get => [showAll] = get(showAll))\n  letProp(get => [showLevels] = get(showLevels))\n  let arrayView = undefined as undefined | 'table'\n\n  states(get => [{ show, arrayView }] = get({ show, arrayView }))\n\n  onInit(() => {\n    const levelsDefined = (showLevels>=0 && showLevels)\n    // detect auto levels (default) and if object lets only show 2 levels deep\n    const autoShowObjectLevels = showLevels === -1 && !key && isObject()\n    showLevels = levelsDefined || (autoShowObjectLevels ? 2 : 0)\n\n    if (showLevels > 0) {\n      show = true\n    }\n  })\n\n  /* IF 1: undefined ELSE goto simpleTemplate */\n  if([null, undefined].includes(value as any)) {\n    return dumpSimple({\n      key: key as string,\n      value: typing,\n      onHeaderClick,\n      everySimpleValue,\n    })\n  }\n  \n  /* IF 2: simple value ELSE goto objectTemplate */\n  if(['boolean','number','string'].includes(typing)) {\n    return dumpSimple({key:key as string, value, onHeaderClick, everySimpleValue})\n  }\n\n  return getObjectTemplate({\n    value,\n    showKids,\n    key,\n    onHeaderClick,\n    everySimpleValue,\n    format,\n    isRootDump,\n    showAll,\n    showAllChange: (x:boolean) => showAll = x,\n    formatChange,\n    show,\n    showLevels,\n    allowMaximize,    \n  })\n})\n\nlet dumpCount = 0\nconst getObjectTemplate = <T>({\n  value,\n  showKids,\n  key,\n  onHeaderClick,\n  everySimpleValue,\n  format,\n  isRootDump,\n  showAll,\n  showAllChange,\n  formatChange,\n  show,\n  showLevels,\n  allowMaximize,\n}: DumpProps<T> & {\n  format: string\n  show: boolean\n  formatChange: FormatChange\n  showAllChange: any\n  showKids: boolean\n  showLevels: number\n}): Tag => {\n  if(value === null) {\n    if(!showKids) {\n      return html`no kids`\n    }\n\n    return dumpSimple({\n      key: key as string,\n      value: 'null',\n      onHeaderClick,\n      everySimpleValue,\n    })\n  }\n\n  const isArray = Array.isArray(value) // (!format || format==='flex') && ((value as any).push && (value as any).pop)\n\n  const getArrayDump = () => {\n    return dumpArray({\n        key,\n        value,\n        show,\n        // arrayView,\n        showAll,\n        showKids,\n        showLevels,\n        formatChange,\n        allowMaximize,\n        everySimpleValue,\n      })\n  }\n\n  const getObjectDump = () => dumpObject({\n    key,\n    show,\n    // showChange: x => showChangeValue(show = x),\n    showKids,\n    showLevels,\n    value,\n    showAll,\n    formatChange,\n    onHeaderClick,\n    allowMaximize,\n    everySimpleValue,\n  })\n\n  const getJsonDump = () => html`\n    <textarea disabled wrap=\"off\"\n      style=\"width:100%;height:25vh;min-height:400px;color:white;background-color:black;\"\n    >${ JSON.stringify(value, null, 2) }</textarea>\n  `\n\n  // let isShown = true\n  // states(get => [isShown] = )\n  letProp(get => [show] = get(show))\n  letProp(get => [showKids] = get(showKids))\n  \n  return html`\n    <div class=\"taggedjs-dump\" id=${`taggedjs-dump-${++dumpCount}`}>\n      ${isRootDump && controlPanel({\n        value,\n        format,\n        showAll,\n        showAllChange,\n        formatChange,\n      })}\n\n      ${!isRootDump && !isArray && !key && html`\n        <div style=\"position:relative;display:flex;\">\n          <a title=\"collapse/expand\" onclick=${() => {\n            if(show === false && showKids) {\n              showKids = false\n            }\n\n            show = !show\n          }}\n            style=\"\n              font-size: 0.7em;\n              right: 0;\n              border: 1px solid black;\n              border-radius: 0.25em;\n              width: 1em;\n              height: 1em;\n              line-height: 1em;\n              text-align: center;\n            \"\n            style.position = ${show ? 'absolute' : ''}\n          >${ show ? '-' : '+'}</a>\n        </div>\n      `}\n\n      ${show && ((format==='json' && getJsonDump()) || (isArray ? getArrayDump() : getObjectDump()))}\n    </div>\n  `\n}\n","import { state } from './state.function.js';\n/** runs a callback function one time and never again. Same as calling state(() => ...) */\nexport function onInit(callback) {\n    state(callback);\n}\n//# sourceMappingURL=onInit.js.map"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","empty","BasicTypes","ImmutableTypes","ValueTypes","tag","dom","templater","tagComponent","tagArray","subject","tagJsSubject","renderOnce","stateRender","version","Date","now","signal","initialValue","Signal","value","subscribers","Set","newValue","forEach","callback","subscribe","add","unsub","delete","unsubscribe","isStaticTag","tagJsType","isTagComponent","tagType","isSubjectInstance","isObject","function","isFunction","object","isArray","Array","getSubscription","countSubject","Subject","globalSubCount$","next","subscription","subscriptions","index","findIndex","sub","splice","removeSubFromArray","valSub","push","runPipedMethods","methods","onComplete","cloneMethods","firstMethod","shift","length","handler","methodResponse","setHandler","x","onSubscription","isSubject","subscribeWith","constructor","this","orgCallback","lastValue","emit","set","bind","subs","toPromise","Promise","res","toCallback","runtimeSub","tagJsUnsub","setTimeout","pipe","operations","setMethods","all","args","subjects","output","valuesSeen","values","setValue","item","clones","map","combineLatest","arg","static","ValueSubject","super","defaultValue","stateConfig","handlers","firstStatesHandler","setter","config","states","statesIndex","support","reStatesHandler","prevSupport","oldStates","lastValues","stateArray","initState","runFirstState","statesHandler","rearray","reState","prevState","prevStates","runRestate","StateEchoBack","getStateValue","state","checkValue","getCallbackValue","restate","initValue","original","syncStates","stateFrom","stateTo","intoStates","statesFrom","fromValue","oldValues","oldGetCallback","stateFromTarget","getIndex","newSetCallback","_","watch","currentValues","setupWatch","defaultFinally","init","before","final","previous","pastResult","undefined","previousValues","result","every","defineOnMethod","getWatch","attachTo","setup","oldWatch","firstSupport","oldState","method","nowSupport","setTo","newestState","oldest","global","letProp","propStates2","passes","passedOn","nowValues","passed","newWatch","_value","oldestState","TagError","Error","details","message","errorCode","name","StateMismatchError","SyncCallbackError","deepClone","maxDepth","makeDeepClone","RegExp","clone","create","getPrototypeOf","i","deepEqual","obj1","obj2","isDeepEqual","fn0","fn1","toString","getTime","isArrayDeepEqual","keys1","keys","keys2","includes","isObjectDeepEqual","getTemplaterResult","propWatch","props","arrayValue","tags","castProps","newSupport","depth","ownerSupport","checkProp","alterProp","already","mem","wrap","toCall","callWith","newest","noCycle","callbackResult","run","locked","isInline","isInlineHtml","renderInlineHtml","renderExistingReadyTag","safeRenderSupport","tagClosed$","callbackPropOwner","assign","getPropWrap","deepCompareDepth","isSkipPropValue","subValue","afterCheckProp","checkArrayProp","getset","getOwnPropertyDescriptor","checkObjectProp","originalValue","newProp","destroy$","executeWrap","useSupport","castedProps","originalFunction","cloneValueArray","cloneTagJsValue","getBaseSupport","baseSupport","appSupport","blocked","upgradeBaseToSupport","propsConfig","PropWatches","IMMUTABLE","latest","SHALLOW","shallowCompareDepth","clonePropsBy","getSupport","getCastedProps","lastSupport","DEEP","preCastedProps","lastPropsConfig","lastCastProps","syncFunctionProps","tagCount","parentWrap","innerTagWrap","getTagWrap","wrapper","setUse","tagIndex","tagUseFn","hasPropChanges","pastCloneProps","hasPropLengthsChanged","NONE","shallowPropMatch","immutablePropMatch","castedPastProps","compare","subCastedProps","subCompareProps","matched","entries","compareProps","onePropCompare","deepPropChangeCompare","onDelete","compareOriginal","len","pastProp","obEntries","subItem","objectItemMatches","use","route","_routeProps","app","_routeTag","deepPropWatch","immutableProps","watchProps","oneRenderFunction","renderFunction","pastValue","paintRemoves","setContent","paintAppends","paintInsertBefores","paintAfters","painting","locks","paint","toRemove","parentNode","removeChild","content","text","textNode","textContent","relative","appendChild","element","insertBefore","updateBeforeTemplate","lastFirstChild","document","createTextNode","castTextValue","runBeforeDestroy","providers","provider","children","renderCount","getChildTagsToDestroy","childTags","child","lastArray","context","iSubs","iSub","getChildTagsToSoftDestroy","subTags","smartRemoveKids","allPromises","destroys","promises","destroy","maybePromise","lastPromise","then","smartRemoveByContext","destroyClones","processContextDestroys","withinOwnerElement","destroyArray","elm","simpleValueElm","subGlobal","deleted","htmlDomMeta","marker","domElement","destroySupport","compareArrayItems","removed","counts","newLength","at","lessLength","prevContext","destroyArrayItem","oldKey","newValueTag","isDiff","runArrayItemDiff","destroyArrayItemByGlobal","checkArrayValueChange","added","checkSimpleValueChange","contextItem","castedValue","oldClone","processUpdateRegularValue","getNewGlobal","isLikeTags","support0","support1","templater0","templater1","tag0","tag1","domMeta0","domMeta1","isLikeDomTags","like","strings0","strings","strings1","string","values0","values1","valuesLengthsMatch","allVarsMatch","compareTo","isLikeValueSets","isLikeStringTags","howToSetFirstInputValue","setAttribute","removeAttribute","specialAttribute","specialName","stagger","target","focus","select","names","split","style","classList","remove","processSpecialClass","handleProviderChanges","tagsWithProvider","memory","cSubject","getTagsWithProvider","getUpTags","supports","inlineHtml","isComponent","continueUp","selfPropChange","nowProps","latestProps","hasPropsToOwnerChanged","checkRenderUp","proSupports","prosWithChanges","hasChange","owner","providersChangeCheck","renderTagUpdateArray","mapTagUpdate","noData","promiseNoData","bindSubjectCallback","subjectFunction","bindTo","component","apply","eventHandlerSupport","last","checkAfterCallbackPromise","renderCallbackSupport","afterTagCallback","runTagCallback","tagFunction","actions","processNonDynamicAttr","attrName","howToSet","isSpecial","addSupportEventListener","eventName","appElement","replaceEventName","eventReg","events","listener","event","originalStopPropagation","stopPropagation","bubbleEvent","addEventListener","stopped","defaultPrevented","processAttributeFunction","newAttrValue","fun","isSpecialAttr","startsWith","specialAction","isSpecialAction","emptyCounts","processUpdateAttrContext","isNameOnly","attrValue","isNoDisplayValue","processNameOnlyAttrValue","updateNameOnlyAttrValue","processAttributeEmit","processAttribute","nameVar","getTagJsVar","addOneContext","isAttr","newValues","valueVar","checkValueChange","contextValueSubject","blankHandler","processNameValueAttributeAttrSubject","processTagCallbackFun","processDynamicNameValueAttribute","processAttributeSubjectValue","callbackFun","special","prevFun","attrPart","tagJsVar","someDiv","createElement","attachDomElements","nodes","appendTo","node","v","isNaN","attachDynamicDom","newNode","nn","attachDomText","attachDomElement","ch","attr","tc","innerHTML","innerText","placeholder","_newValues","newContextItem","updateExistingValue","processFirstSubjectValue","buildBeforeElement","domMeta","thisTag","stringId","array","Number","join","getStringsId","lastRun","lastRuns","matches","isLastRunMatched","domMetaMap","htmlInterpolationToPlaceholders","htmlString","html","valuePositions","elements","stack","currentElement","valueIndex","position","regexTag","regexTagOrg","replace","removeCommentRegX","match","preprocessTagsInComments","tagMatch","exec","fullMatch","tagName","attrString","isClosingTag","isSelfClosing","endsWith","slice","trim","splitByTagVar","variablePrefix","variableSuffix","pushTextTo","pop","attributes","attrMatch","regexAttr","notEmpty","noValue","lowerName","toLowerCase","fixedName","cleanEventName","valueName","search","attrSet","parseHTML","htmlInterpolationToDomMeta","replacePlaceholders","traverseAndRestore","template","interpolation","getDomMeta","loadDomMeta","attachHtmlDomMeta","processTag","checkTagValueChange","subscribeToTemplate","getFakeTemplater","newSupportByTemplater","getHtmlSupport","processUpdateOneContext","updateSupportBy","olderSupport","newerSupport","tempTag","updateSupportValuesBy","processUpdateContext","processNewTag","processTagArray","noLast","runtimeInsertBefore","filteredLast","newRemoved","reviewArrayItem","itemSubject","couldBeSame","processAddTagArrayItem","reviewPreviousArrayItem","subPlaceholder","processNewArrayValue","fooCounts","ignoreOrDestroyed","tryUpdateToTag","processNowRegularValue","prepareUpdateToComponent","processReplacementComponent","oldWrapper","newWrapper","isSameTag","skipComparing","oldestSupport","swapTags","hasChanged","newTemplater","hasSupportChanged","newProps","updateExistingTagComponent","updateContextItemBySupport","valueSupport","handleStillTag","updateToTag","isTag","checkStateMismatch","newStates","error","console","hint","throwStateMismatch","runAfterRender","renderTagOnly","oldRenderCount","reSupport","processNewSubjectTag","tagFakeTemplater","processResult","newPropsConfig","renderWithSupport","appendIndex","processFirstTagResult","processFirstSubjectComponent","oneRenderToSupport","processFirstTagValue","processFirstRegularValue","onValue","syncRun","processSubUpdate","processReplaceTagResult","syncPriorPropFunction","priorProp","oldProp","updateExistingArray","hasSetter","updateExistingObject","newPropsArray","priorPropsArray","newArray","softDestroySupport","softDestroyOne","lastTemplater","lastTag","isLikeTag","lastDom","lastStrings","oldLength","checkTagSoftDestroy","pIndex","pLen","pcLen","moveProviders","lastOwnerSupport","wasLikeTags","ownGlobal","fragFindAny","ondoubleclick","pushTo","postprocessTagsInComments","inputString","filter","part","fragReplacer","safeVar","results","fragment","diff","balanceArrayByArrays","addPlaceholders","placeholderRegex","valueCount","currentTail","loopTail","attrs","processAttributes","innerLoopTail","examineChild","textChild","secondMatch","wIndex","parseInt","varContent","after","lastIndex","safeReplacer","_match","stringTag","getStringTag","getDomTag","columnEditor","included","columnNames","allColumnNames","editFormula","mouseOverEditShow","edit","formulas","indexOf","evt","updateFormula","formula","newFormula","stringFormula","sandboxRunEval","title","src","ctx","Proxy","has","Function","sandboxEval","Math","arrayTable","showAll","showKids","toggleColumnDialog","formatChange","allowMaximize","everySimpleValue","row","dump","showLevels","isRootDump","arrayDisplay","inputObject","keysArray","filteredObject","filterObjectByKeys","paramValueKeys","onHeaderClick","arraysDisplay","arrayView","reduce","getAllKeys","defaultColumnNames","showColumnDialog","uniqueId","performance","noInit","getElementById","showModal","close","dumpArray","show","showLower","maximize","maximizeId","toggleMaximize","dumpBody","getHeader","displayOptions","copyText","body","setSelectionRange","execCommand","dumpSimple","isLinkValue","displayValue","simpleValue","linkValue","isLikeNull","number","toLocaleString","getLargeNumberTitle","downTime","preventDefault","dumpObject","continueDump","getHead","getDumpBody","controlPanel","format","showAllChange","JSON","stringify","copyAsJsonText","typing","onInit","getObjectTemplate","dumpCount"],"sourceRoot":""}