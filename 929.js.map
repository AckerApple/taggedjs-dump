{"version":3,"file":"929.js","mappings":"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","sources":["webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/ValueTypes.enum.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/subject/signal.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/isInstance.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/subject/subject.utils.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/subject/Subject.class.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/subject/combineLatest.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/subject/ValueSubject.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/state/state.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/state/states.utils.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/state/state.utils.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/state/getStateValue.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/state/stateHandlers.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/state/setUseMemory.object.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/state/syncStates.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/state/watch.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/state/subject.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/state/states.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/state/letProp.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/errors.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/deepFunctions.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/getTemplaterResult.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/tag.utils.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/alterProp.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/executeWrap.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/cloneValueArray.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/getSupport.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/clonePropsBy.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/getTagWrap.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/tag.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/hasSupportChanged.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/paint.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/updateBeforeTemplate.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/tagRunner.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/getChildTagsToDestroy.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/smartRemoveKids.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/destroySupport.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/update/compareArrayItems.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/checkDestroyPrevious.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/update/processRegularValue.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/update/getNewGlobal.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/isLikeTags.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/interpolations/attributes/howToSetInputValue.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/interpolations/attributes/specialAttribute.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/state/handleProviderChanges.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/interpolations/attributes/getUpTags.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/render/renderSupport.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/state/providersChangeCheck.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/interpolations/attributes/renderTagArray.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/interpolations/attributes/bindSubjectCallback.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/interpolations/attributes/processNameValueAttribute.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/interpolations/attributes/addSupportEventListener.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/interpolations/attributes/processAttributeCallback.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/interpolations/attributes/isSpecialAttribute.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/processUpdateAttrContext.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/interpolations/attributes/updateAttribute.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/interpolations/attributes/processAttribute.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/interpolations/optimizers/attachDomElements.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/buildBeforeElement.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/domMetaCollector.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/getStringsId.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/isLastRunMatched.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/interpolations/optimizers/htmlInterpolationToDomMeta.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/interpolations/optimizers/restorePlaceholders.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/update/processTag.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/processUpdateContext.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/updateSupportBy.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/update/processNewValue.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/update/processTagArray.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/update/updateExistingValue.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/update/updateExistingTagComponent.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/checkTagValueChange.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/checkStateMismatch.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/afterRender.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/render/renderTagOnly.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/update/processNewSubjectTag.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/update/processFirstSubjectValue.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/update/processFirstSubjectComponent.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/update/processTagResult.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/update/oneRenderToSupport.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/interpolations/subscribeToTemplate.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/interpolations/processSubscriptionUpdate.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/render/softDestroySupport.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/render/renderWithSupport.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/render/renderExistingTag.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/state/callbackMaker.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/state/onInit.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/getSupportInCycle.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/getDomTag.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/interpolations/optimizers/replacePlaceholders.function.js","webpack://taggedjs-dump/./node_modules/taggedjs/js/tag/html.js"],"sourcesContent":["export const empty = '';\nexport var ImmutableTypes;\n(function (ImmutableTypes) {\n    ImmutableTypes[\"string\"] = \"string\";\n    ImmutableTypes[\"number\"] = \"number\";\n    ImmutableTypes[\"boolean\"] = \"boolean\";\n    ImmutableTypes[\"undefined\"] = \"undefined\";\n})(ImmutableTypes || (ImmutableTypes = {}));\nexport var BasicTypes;\n(function (BasicTypes) {\n    BasicTypes[\"function\"] = \"function\";\n    BasicTypes[\"date\"] = \"date\";\n    BasicTypes[\"unknown\"] = \"unknown\";\n    BasicTypes[\"object\"] = \"object\";\n})(BasicTypes || (BasicTypes = {}));\nconst version = Date.now();\n/** Used as direct memory comparisons, the strings are never compared, just the array */\nexport const ValueTypes = {\n    tag: 'html', // html'' aka StringTag | DomTag\n    dom: 'dom', // compiled version of html''\n    templater: 'templater',\n    tagComponent: 'tagComponent',\n    tagArray: 'tagArray',\n    subject: 'subject',\n    tagJsSubject: 'tagJsSubject',\n    renderOnce: 'renderOnce',\n    stateRender: 'stateRender',\n    version,\n};\n//# sourceMappingURL=ValueTypes.enum.js.map","import { state } from '../state/index.js';\nimport { getSupportInCycle } from '../tag/getSupportInCycle.function.js';\n/** Checks if rendering cycle in process. Then creates object with \"value\" key and ability to \"subscribe\" to value changes */\nexport function signal(initialValue) {\n    const support = getSupportInCycle();\n    if (support) {\n        return state(() => Signal(initialValue));\n    }\n    return Signal(initialValue);\n}\n/** Creates object with \"value\" key and ability to \"subscribe\" to value changes */\nexport function Signal(initialValue) {\n    let value = initialValue;\n    const subscribers = new Set();\n    return {\n        get value() {\n            return value;\n        },\n        set value(newValue) {\n            if (value !== newValue) {\n                value = newValue;\n                // Notify all subscribers\n                subscribers.forEach(callback => callback(newValue));\n            }\n        },\n        subscribe(callback) {\n            callback(value); // emit initial value\n            subscribers.add(callback);\n            // Return an unsubscribe function\n            const unsub = () => subscribers.delete(callback);\n            // support traditional unsubscribe\n            unsub.unsubscribe = unsub;\n            return unsub;\n        },\n    };\n}\n//# sourceMappingURL=signal.function.js.map","import { BasicTypes, ImmutableTypes, ValueTypes } from './tag/ValueTypes.enum.js';\nexport function isSimpleType(value) {\n    switch (value) {\n        case ImmutableTypes.string:\n        case ImmutableTypes.number:\n        case ImmutableTypes.boolean:\n            return true;\n    }\n    return false;\n}\nexport function isStaticTag(value) {\n    if (!value) {\n        return false;\n    }\n    const tagJsType = value.tagJsType;\n    switch (tagJsType) {\n        case ValueTypes.dom:\n        case ValueTypes.tag:\n        case ValueTypes.templater:\n            return true;\n    }\n    return false;\n}\n/** passed in is expected to be a TemplaterResult */\nexport function isTagComponent(value) {\n    const tagType = value?.tagJsType;\n    return tagType === ValueTypes.tagComponent || tagType === ValueTypes.stateRender;\n}\n// isSubjectLike\nexport function isSubjectInstance(subject) {\n    return isObject(subject) && typeof subject.subscribe === BasicTypes.function;\n}\nexport function isPromise(value) {\n    return value && isFunction(value.then);\n}\nexport function isFunction(value) {\n    return typeof value === BasicTypes.function;\n}\nexport function isObject(value) {\n    return typeof (value) === BasicTypes.object && value !== null;\n}\nexport function isArray(value) {\n    return Array.isArray(value);\n}\n//# sourceMappingURL=isInstance.js.map","import { Subject } from './Subject.class.js';\nfunction removeSubFromArray(subscribers, callback) {\n    const index = subscribers.findIndex(sub => sub.callback === callback);\n    if (index !== -1) {\n        subscribers.splice(index, 1);\n    }\n}\nexport function getSubscription(subject, callback, subscribers) {\n    const countSubject = Subject.globalSubCount$;\n    Subject.globalSubCount$.next(countSubject.value + 1);\n    const subscription = function () {\n        subscription.unsubscribe();\n    };\n    subscription.callback = callback;\n    subscription.subscriptions = [];\n    // Return a function to unsubscribe from the BehaviorSubject\n    subscription.unsubscribe = function () {\n        return unsubscribe(subscription, subscribers, callback);\n    };\n    subscription.add = (sub) => {\n        subscription.subscriptions.push(sub);\n        return subscription;\n    };\n    subscription.next = (value) => {\n        callback(value, subscription);\n    };\n    return subscription;\n}\nexport function runPipedMethods(value, methods, onComplete) {\n    const cloneMethods = [...methods];\n    const firstMethod = cloneMethods.shift();\n    const next = (newValue) => {\n        if (cloneMethods.length) {\n            return runPipedMethods(newValue, cloneMethods, onComplete);\n        }\n        onComplete(newValue);\n    };\n    let handler = next;\n    const setHandler = (x) => handler = x;\n    const pipeUtils = { setHandler, next };\n    const methodResponse = firstMethod(value, pipeUtils);\n    handler(methodResponse);\n}\nfunction unsubscribe(subscription, subscribers, callback) {\n    removeSubFromArray(subscribers, callback); // each will be called when update comes in\n    const valSub = Subject.globalSubCount$;\n    Subject.globalSubCount$.next(valSub.value - 1);\n    // any double unsubscribes will be ignored\n    subscription.unsubscribe = () => subscription;\n    // unsubscribe from any combined subjects\n    const subscriptions = subscription.subscriptions;\n    for (const sub of subscriptions) {\n        sub.unsubscribe();\n    }\n    return subscription;\n}\n//# sourceMappingURL=subject.utils.js.map","import { isSubjectInstance } from '../isInstance.js';\nimport { combineLatest } from './combineLatest.function.js';\nimport { getSubscription, runPipedMethods } from './subject.utils.js';\nexport class Subject {\n    value;\n    onSubscription;\n    // private?\n    methods = [];\n    isSubject = true;\n    // private?\n    subscribers = [];\n    subscribeWith;\n    constructor(value, \n    // private? - only used by extending classes\n    onSubscription) {\n        this.value = value;\n        this.onSubscription = onSubscription;\n        // defineValueOn(this)\n    }\n    subscribe(callback) {\n        const subscription = getSubscription(this, callback, this.subscribers);\n        // are we within a pipe?\n        const subscribeWith = this.subscribeWith;\n        if (subscribeWith) {\n            // are we in a pipe?\n            if (this.methods.length) {\n                const orgCallback = callback;\n                callback = (value) => {\n                    runPipedMethods(value, this.methods, lastValue => orgCallback(lastValue, subscription));\n                };\n            }\n            return subscribeWith(callback);\n        }\n        this.subscribers.push(subscription);\n        if (this.onSubscription) {\n            this.onSubscription(subscription);\n        }\n        return subscription;\n    }\n    next(value) {\n        this.value = value;\n        this.emit();\n    }\n    set = this.next.bind(this);\n    emit() {\n        const value = this.value;\n        // Notify all subscribers with the new value\n        // const subs = [...this.subscribers] // subs may change as we call callbacks\n        const subs = this.subscribers; // subs may change as we call callbacks\n        // const length = subs.length\n        for (const sub of subs) {\n            sub.callback(value, sub);\n        }\n    }\n    toPromise() {\n        return new Promise(res => {\n            this.subscribe((x, subscription) => {\n                subscription.unsubscribe();\n                res(x);\n            });\n        });\n    }\n    /** like toPromise but faster */\n    toCallback(callback) {\n        const subscription = this.subscribe((x, runtimeSub) => {\n            const tagJsUnsub = runtimeSub?.unsubscribe;\n            if (tagJsUnsub) {\n                tagJsUnsub(); // its from taggedjs\n            }\n            else {\n                setTimeout(() => subscription.unsubscribe(), 0);\n            }\n            callback(x);\n        });\n        return this;\n    }\n    pipe(...operations) {\n        const subject = new Subject(this.value);\n        subject.setMethods(operations);\n        subject.subscribeWith = (x) => this.subscribe(x);\n        subject.next = x => this.next(x);\n        return subject;\n    }\n    setMethods(operations) {\n        this.methods = operations;\n    }\n    static all(args) {\n        const switched = args.map(arg => {\n            if (isSubjectInstance(arg))\n                return arg;\n            // Call the callback immediately with the current value\n            const x = new Subject(arg, subscription => {\n                subscription.next(arg);\n                return subscription;\n            });\n            return x;\n        });\n        return combineLatest(switched);\n    }\n    static globalSubCount$ = new Subject(0); // for ease of debugging}\n}\nexport class Subjective extends Subject {\n    value;\n    onSubscription;\n    _value;\n    constructor(value, \n    // private?\n    onSubscription) {\n        super(value, onSubscription);\n        this.value = value;\n        this.onSubscription = onSubscription;\n        this._value = value;\n        defineValueOn(this);\n    }\n    next(value) {\n        this._value = value;\n        this.emit();\n    }\n    emit() {\n        const value = this._value;\n        // Notify all subscribers with the new value\n        // const subs = [...this.subscribers] // subs may change as we call callbacks\n        const subs = this.subscribers; // subs may change as we call callbacks\n        // const length = subs.length\n        for (const sub of subs) {\n            sub.callback(value, sub);\n        }\n    }\n}\nexport function defineValueOn(subject) {\n    Object.defineProperty(subject, 'value', {\n        // supports subject.value = x\n        set(value) {\n            subject._value = value;\n            subject.emit();\n        },\n        // supports subject.value\n        get() {\n            return subject._value;\n        }\n    });\n}\n//# sourceMappingURL=Subject.class.js.map","import { Subject } from './Subject.class.js';\nexport function combineLatest(subjects) {\n    const output = new Subject();\n    const subscribe = (callback) => {\n        const valuesSeen = [];\n        const values = [];\n        const setValue = (x, index) => {\n            valuesSeen[index] = true;\n            values[index] = x;\n            const countMatched = valuesSeen.length === subjects.length;\n            if (!countMatched) {\n                return;\n            }\n            for (const item of valuesSeen) {\n                if (!item) {\n                    return;\n                }\n            }\n            // everyone has reported values\n            callback(values, subscription);\n        };\n        const clones = [...subjects];\n        const firstSub = clones.shift();\n        const subscription = firstSub.subscribe(x => setValue(x, 0));\n        const subscriptions = clones.map((subject, index) => {\n            return subject.subscribe(x => setValue(x, index + 1));\n        });\n        subscription.subscriptions = subscriptions;\n        return subscription;\n    };\n    output.subscribeWith = subscribe;\n    return output;\n}\n//# sourceMappingURL=combineLatest.function.js.map","import { Subject, defineValueOn } from './Subject.class.js';\nexport class ValueSubject extends Subject {\n    value;\n    constructor(value) {\n        super(value);\n        this.value = value;\n    }\n    subscribe(callback) {\n        const subscription = super.subscribe(callback);\n        // Call the callback immediately with the current value\n        callback(this.value, subscription);\n        return subscription;\n    }\n}\nexport class ValueSubjective extends Subject {\n    value;\n    constructor(value) {\n        super(value);\n        this.value = value;\n        this._value = value;\n        defineValueOn(this); // if you extend this AND have a constructor, you must call this in your extension\n    }\n    subscribe(callback) {\n        const subscription = super.subscribe(callback);\n        // Call the callback immediately with the current value\n        callback(this._value, subscription);\n        return subscription;\n    }\n}\n//# sourceMappingURL=ValueSubject.js.map","import { setUseMemory } from './setUseMemory.object.js';\n/** Used for variables that need to remain the same variable during render passes */\nexport function state(defaultValue) {\n    return setUseMemory.stateConfig.handlers.handler(defaultValue);\n}\n//# sourceMappingURL=state.function.js.map","import { setUseMemory } from './setUseMemory.object.js';\nimport { state } from './state.function.js';\nexport function firstStatesHandler(setter) {\n    const config = setUseMemory.stateConfig;\n    // State first time run\n    config.states[config.statesIndex] = setter;\n    const support = config.support;\n    support.states[config.statesIndex] = setter;\n    ++config.statesIndex;\n    return setter((...args) => {\n        state(args);\n        return args;\n    });\n}\nexport function reStatesHandler(setter) {\n    const config = setUseMemory.stateConfig;\n    const support = config.support;\n    const statesIndex = config.statesIndex;\n    const prevSupport = config.prevSupport;\n    const oldStates = prevSupport?.states[statesIndex];\n    const lastValues = [];\n    const regetter = (...args) => {\n        lastValues.push(args);\n        return args;\n    };\n    oldStates(regetter);\n    let index = 0;\n    const resetter = (...args) => {\n        // state(value) // fake call and do not care about result\n        // fake state() having been called\n        config.stateArray.push({\n            get: () => args,\n            defaultValue: args,\n        });\n        const lastValue = lastValues[index];\n        ++index;\n        return lastValue;\n    };\n    support.states[config.statesIndex] = setter;\n    ++config.statesIndex;\n    return setter(resetter);\n}\n//# sourceMappingURL=states.utils.js.map","import { runFirstState, runRestate } from './stateHandlers.js';\nimport { firstStatesHandler, reStatesHandler } from './states.utils.js';\nexport function initState(support, config) {\n    config.handlers.handler = runFirstState;\n    config.handlers.statesHandler = firstStatesHandler;\n    config.rearray = [];\n    config.stateArray = [];\n    config.states = [];\n    config.statesIndex = 0;\n    config.support = support;\n}\nexport function reState(support, config, prevState, prevStates) {\n    // set previous state memory\n    config.rearray = prevState;\n    config.stateArray = [];\n    config.states = prevStates;\n    config.statesIndex = 0;\n    config.handlers.handler = runRestate;\n    config.handlers.statesHandler = reStatesHandler;\n    config.support = support;\n}\nexport class StateEchoBack {\n}\n// sends a fake value and then sets back to received value\nexport function getCallbackValue(callback) {\n    const oldState = callback(StateEchoBack); // get value and set to undefined\n    const [value] = oldState;\n    const [checkValue] = callback(value); // set back to original value\n    return [value, checkValue];\n}\n//# sourceMappingURL=state.utils.js.map","import { getCallbackValue } from './state.utils.js';\nexport function getStateValue(state) {\n    const callback = state.callback;\n    if (!callback) {\n        return state.defaultValue;\n    }\n    const [value] = getCallbackValue(callback);\n    return value;\n}\n//# sourceMappingURL=getStateValue.function.js.map","import { setUseMemory } from './setUseMemory.object.js';\nimport { getStateValue } from './getStateValue.function.js';\nimport { BasicTypes } from '../tag/ValueTypes.enum.js';\nexport function runRestate() {\n    const config = setUseMemory.stateConfig;\n    const rearray = config.rearray;\n    const restate = rearray[config.stateArray.length];\n    config.stateArray.push(restate);\n    return restate.defaultValue;\n}\nexport function runFirstState(defaultValue) {\n    const config = setUseMemory.stateConfig;\n    // State first time run\n    let initValue = defaultValue;\n    if (typeof (defaultValue) === BasicTypes.function) {\n        initValue = defaultValue();\n    }\n    // the state is actually intended to be a function\n    if (typeof (initValue) === BasicTypes.function) {\n        const original = initValue;\n        initValue = function initValueFun(...args) {\n            const result = original(...args);\n            return result;\n        };\n        initValue.original = original;\n    }\n    const push = {\n        get: function pushState() {\n            return getStateValue(push);\n        },\n        defaultValue: initValue,\n    };\n    config.stateArray.push(push);\n    return initValue;\n}\n//# sourceMappingURL=stateHandlers.js.map","import { firstStatesHandler } from './states.utils.js';\nimport { runFirstState } from './stateHandlers.js';\nexport const setUseMemory = {\n    stateConfig: {\n        stateArray: [], // state memory on the first render\n        version: Date.now(),\n        handlers: {\n            handler: runFirstState,\n            statesHandler: firstStatesHandler,\n        }\n    },\n};\n//# sourceMappingURL=setUseMemory.object.js.map","export function syncStates(stateFrom, stateTo, oldStates, statesFrom) {\n    // sync state()\n    for (let index = stateFrom.length - 1; index >= 0; --index) {\n        const fromValue = stateFrom[index].get();\n        const callback = stateTo[index].callback; // is it a let state?\n        if (!callback) {\n            continue;\n        }\n        callback(fromValue); // set the value\n    }\n    for (let index = statesFrom.length - 1; index >= 0; --index) {\n        const oldValues = [];\n        const oldGetCallback = (...args) => {\n            oldValues.push(args);\n            return args;\n        };\n        // trigger getting all old values\n        statesFrom[index](oldGetCallback);\n        let getIndex = 0;\n        const newSetCallback = (_) => {\n            return oldValues[getIndex++];\n        };\n        // trigger setting updated values\n        oldStates[index](newSetCallback);\n    }\n}\n//# sourceMappingURL=syncStates.function.js.map","import { ValueSubject } from '../subject/index.js';\nimport { getSupportInCycle } from '../tag/getSupportInCycle.function.js';\nimport { setUseMemory } from './setUseMemory.object.js';\nimport { state } from './state.function.js';\nimport { syncStates } from './syncStates.function.js';\n/**\n * When an item in watch array changes, callback function will be triggered.\n * Triggers on initial watch setup. TIP: try watch.noInit()\n * @param currentValues T[]\n * @param callback WatchCallback\n * @returns T[]\n */\nexport const watch = ((currentValues, callback) => {\n    return setupWatch(currentValues, callback);\n});\nconst defaultFinally = (x) => x;\nfunction newWatch(setup) {\n    const method = (currentValues, callback) => {\n        return setupWatch(currentValues, callback, setup);\n    };\n    method.setup = setup;\n    defineOnMethod(() => method, method);\n    return method;\n}\n/**\n * puts above functionality together\n * @param currentValues values being watched\n * @param callback (currentValue, previousValues) => resolveToValue\n * @param param2\n * @returns\n */\nconst setupWatch = (currentValues, callback, { init, before, final = defaultFinally, } = {}) => {\n    const previous = state({\n        pastResult: undefined,\n        values: undefined,\n    });\n    const previousValues = previous.values;\n    // First time running watch?\n    if (previousValues === undefined) {\n        if (before && !before(currentValues)) {\n            previous.values = currentValues;\n            return previous.pastResult; // do not continue\n        }\n        const castedInit = init || callback;\n        const result = castedInit(currentValues, previousValues);\n        previous.pastResult = final(result);\n        previous.values = currentValues;\n        return previous.pastResult;\n    }\n    const allExact = currentValues.every((item, index) => item === previousValues[index]);\n    if (allExact) {\n        return previous.pastResult;\n    }\n    if (before && !before(currentValues)) {\n        previous.values = currentValues;\n        return previous.pastResult; // do not continue\n    }\n    const result = callback(currentValues, previousValues);\n    previous.pastResult = final(result);\n    previousValues.length = 0;\n    previousValues.push(...currentValues);\n    return previous.pastResult;\n};\nfunction defineOnMethod(getWatch, attachTo) {\n    Object.defineProperty(attachTo, 'noInit', {\n        get() {\n            const watch = getWatch();\n            watch.setup.init = () => undefined;\n            return watch;\n        },\n    });\n    Object.defineProperty(attachTo, 'asSubject', {\n        get() {\n            const oldWatch = getWatch();\n            const firstSupport = state(() => getSupportInCycle());\n            const subject = state(() => new ValueSubject(undefined));\n            const oldState = state(() => ({\n                stateArray: setUseMemory.stateConfig.stateArray,\n                states: setUseMemory.stateConfig.states,\n            }));\n            const method = (currentValues, callback) => {\n                setupWatch(currentValues, (currentValues, previousValues) => {\n                    const nowSupport = getSupportInCycle();\n                    const setTo = callback(currentValues, previousValues);\n                    if (nowSupport !== firstSupport) {\n                        const newestState = oldState.stateArray;\n                        const global = firstSupport.subject.global;\n                        const oldest = global.oldest;\n                        const oldestState = oldest.state;\n                        const newStates = oldState.states;\n                        const oldStates = oldest.states;\n                        syncStates(newestState, oldestState, newStates, oldStates);\n                    }\n                    subject.next(setTo);\n                }, oldWatch.setup);\n                return subject;\n            };\n            method.setup = oldWatch.setup;\n            defineOnMethod(() => method, method);\n            return method;\n        },\n    });\n    Object.defineProperty(attachTo, 'truthy', {\n        get() {\n            const watch = getWatch();\n            watch.setup.before = (currentValues) => currentValues.every(x => x);\n            return watch;\n        },\n    });\n    return attachTo;\n}\ndefineOnMethod(() => newWatch({}), watch);\n//# sourceMappingURL=watch.function.js.map","import { Subject, ValueSubject } from '../subject/index.js';\nimport { getSupportInCycle } from '../tag/getSupportInCycle.function.js';\nimport { setUseMemory } from './setUseMemory.object.js';\nimport { state } from './state.function.js';\nimport { syncStates } from './syncStates.function.js';\n/** Create a Subject that on updates will sync state values to keep chained functions using latest variables */\nexport function subject(initialValue) {\n    const support = getSupportInCycle();\n    if (support) {\n        return state(() => new Subject(initialValue));\n    }\n    return new Subject(initialValue);\n}\nsubject._value = (value) => {\n    const oldestState = state(function subjectValue() {\n        return {\n            stateArray: setUseMemory.stateConfig.stateArray,\n            states: setUseMemory.stateConfig.states,\n        };\n    });\n    const nowSupport = getSupportInCycle();\n    return state(function subjectValue() {\n        const subject = new ValueSubject(value).pipe(x => {\n            syncStates(nowSupport.state, oldestState.stateArray, nowSupport.states, oldestState.states);\n            return x;\n        });\n        return subject;\n    });\n};\nfunction all(args) {\n    const oldestState = state(() => ({\n        stateArray: setUseMemory.stateConfig.stateArray,\n        states: setUseMemory.stateConfig.states,\n    }));\n    const nowSupport = getSupportInCycle();\n    return Subject.all(args).pipe(x => {\n        syncStates(nowSupport.state, oldestState.stateArray, nowSupport.states, oldestState.states);\n        return x;\n    });\n}\nsubject.all = all;\n//# sourceMappingURL=subject.function.js.map","import { setUseMemory } from './setUseMemory.object.js';\n/** Used for variables that need to remain the same variable during render passes. If defaultValue is a function it is called only once, its return value is first state, and let value can changed */\nexport function states(setter) {\n    const config = setUseMemory.stateConfig;\n    return config.handlers.statesHandler(setter);\n}\n//# sourceMappingURL=states.function.js.map","import { signal } from '../subject/signal.function.js';\nimport { states } from './states.function.js';\nimport { watch } from './watch.function.js';\n/**\n * Enables the ability to maintain a change to a props value until the prop itself changes\n * @param prop typically the name of an existing prop\n * @returns immediately call the returned function: letProp(y)(x => [y, y=x])\n */\nexport function letProp(setter) {\n    const propStates2 = signal([]);\n    const passes = signal(0);\n    const passedOn = signal(0);\n    let nowValues = [];\n    let passed = 0;\n    passedOn.value = passes.value;\n    setter((...values) => {\n        nowValues = values;\n        return values;\n    });\n    // When the watched variable changes, then the local prop variable has to update\n    watch(nowValues, () => {\n        ++passed; // first time values and changed values cause new state\n        propStates2.value = nowValues;\n        setter(() => nowValues);\n    });\n    // called and only used during sync'ing processes\n    states(() => {\n        if (passed) {\n            setter((...values) => {\n                propStates2.value = values;\n                if (passes != passedOn) {\n                    return propStates2.value;\n                }\n                return values; // propStates2.value\n            });\n            passedOn.value = passes.value;\n            ++passes.value;\n            return;\n        }\n        setter(() => propStates2.value);\n    });\n    ++passed;\n    return propStates2.value;\n}\n//# sourceMappingURL=letProp.function.js.map","export class TagError extends Error {\n    details;\n    constructor(message, errorCode, details = {}) {\n        super(message);\n        this.name = TagError.name;\n        this.details = { ...details, errorCode };\n    }\n}\nexport class ArrayNoKeyError extends TagError {\n    constructor(message, details) {\n        super(message, 'array-no-key-error', details);\n        this.name = ArrayNoKeyError.name;\n    }\n}\nexport class StateMismatchError extends TagError {\n    constructor(message, details) {\n        super(message, 'state-mismatch-error', details);\n        this.name = StateMismatchError.name;\n    }\n}\nexport class SyncCallbackError extends TagError {\n    constructor(message, details) {\n        super(message, 'sync-callback-error', details);\n        this.name = SyncCallbackError.name;\n    }\n}\n//# sourceMappingURL=errors.js.map","import { isArray, isFunction } from './isInstance.js';\nimport { BasicTypes } from './tag/ValueTypes.enum.js';\nexport function deepClone(obj, maxDepth) {\n    // return makeDeepClone(obj, new WeakMap())\n    return makeDeepClone(obj, maxDepth);\n}\nfunction makeDeepClone(obj, \n// visited: WeakMap<any, any>\nmaxDepth) {\n    // If obj is a primitive type or null, return it directly\n    if (obj === null || typeof obj !== BasicTypes.object) {\n        return obj;\n    }\n    // If obj is already visited, return the cloned reference\n    /*\n    if (visited.has(obj)) {\n      return visited.get(obj)\n    }\n    */\n    if (maxDepth < 0) {\n        return obj;\n    }\n    // Handle special cases like Date and RegExp\n    if (obj instanceof Date) {\n        return new Date(obj);\n    }\n    if (obj instanceof RegExp) {\n        return new RegExp(obj);\n    }\n    // Create an empty object or array with the same prototype\n    const clone = isArray(obj) ? [] : Object.create(Object.getPrototypeOf(obj));\n    // Clone each property or element of the object or array\n    if (isArray(obj)) {\n        for (let i = 0; i < obj.length; i++) {\n            clone[i] = makeDeepClone(obj[i], maxDepth - 1);\n        }\n    }\n    else {\n        for (const key in obj) {\n            if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                clone[key] = makeDeepClone(obj[key], maxDepth - 1);\n            }\n        }\n    }\n    return clone;\n}\nexport function deepEqual(obj1, obj2, maxDepth) {\n    return isDeepEqual(obj1, obj2, maxDepth);\n}\nfunction isDeepEqual(obj1, obj2, \n// visited: WeakMap<any, any>,\nmaxDepth) {\n    const directEqual = obj1 === obj2;\n    if (directEqual || isSameFunctions(obj1, obj2)) {\n        return true;\n    }\n    // If obj is already visited, return the cloned reference\n    // if (visited.has(obj1)) {\n    if (maxDepth < 0) {\n        return true;\n    }\n    if (typeof obj1 === BasicTypes.object && typeof obj2 === BasicTypes.object) {\n        // both are dates and were already determined not the same\n        if (obj1 instanceof Date && obj2 instanceof Date) {\n            return obj1.getTime() === obj2.getTime();\n        }\n        // Register the cloned object to avoid cyclic references\n        // visited.set(obj1, 0)\n        // Check if obj1 and obj2 are both arrays\n        if (isArray(obj1) && isArray(obj2)) {\n            return isArrayDeepEqual(obj1, obj2, maxDepth - 1);\n        }\n        else if (isArray(obj1) || isArray(obj2)) {\n            // One is an array, and the other is not\n            return false;\n        }\n        // return isObjectDeepEqual(obj1, obj2, visited)\n        return isObjectDeepEqual(obj1, obj2, maxDepth - 1);\n    }\n    return false;\n}\nfunction isObjectDeepEqual(obj1, obj2, \n// visited: WeakMap<any, any>,\nmaxDepth) {\n    const keys1 = Object.keys(obj1);\n    const keys2 = Object.keys(obj2);\n    if (keys1.length === 0 && keys2.length === 0) {\n        return true;\n    }\n    if (keys1.length !== keys2.length) {\n        return false;\n    }\n    for (const key of keys1) {\n        const keyFound = keys2.includes(key);\n        if (!keyFound || !isDeepEqual(obj1[key], obj2[key], maxDepth - 1)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction isArrayDeepEqual(obj1, obj2, maxDepth) {\n    if (obj1.length !== obj2.length) {\n        return false;\n    }\n    for (let i = 0; i < obj1.length; i++) {\n        if (!isDeepEqual(obj1[i], obj2[i], maxDepth - 1)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction isSameFunctions(fn0, fn1) {\n    const bothFunction = isFunction(fn0) && isFunction(fn1);\n    return bothFunction && fn0.toString() === fn1.toString();\n}\n//# sourceMappingURL=deepFunctions.js.map","import { ValueTypes } from './ValueTypes.enum.js';\nexport function getTemplaterResult(propWatch, props) {\n    const templater = {\n        propWatch,\n        props,\n        tagJsType: ValueTypes.templater,\n        key: function keyTemplate(arrayValue) {\n            templater.arrayValue = arrayValue;\n            return templater;\n        }\n    };\n    return templater;\n}\n//# sourceMappingURL=getTemplaterResult.function.js.map","export const tags = [];\n//# sourceMappingURL=tag.utils.js.map","import { isInlineHtml, renderInlineHtml } from './tag/render/renderSupport.function.js';\nimport { renderExistingReadyTag } from './tag/render/renderExistingTag.function.js';\nimport { getSupportInCycle } from './tag/getSupportInCycle.function.js';\nimport { deepCompareDepth } from './tag/hasSupportChanged.function.js';\nimport { isArray, isStaticTag } from './isInstance.js';\nimport { BasicTypes } from './tag/ValueTypes.enum.js';\nimport { setUseMemory } from './state/index.js';\nexport function castProps(props, newSupport, depth) {\n    return props.map(prop => alterProp(prop, newSupport.ownerSupport, newSupport, depth));\n}\n/* Used to rewrite props that are functions. When they are called it should cause parent rendering */\nexport function alterProp(prop, ownerSupport, newSupport, depth) {\n    if (isStaticTag(prop) || !prop) {\n        return prop;\n    }\n    if (!ownerSupport) {\n        return prop; // no one above me\n    }\n    return checkProp(prop, ownerSupport, newSupport, depth);\n}\nexport function checkProp(value, ownerSupport, newSupport, depth) {\n    if (!value) {\n        return value;\n    }\n    if (value.tagJsType) {\n        return value;\n    }\n    if (typeof (value) === BasicTypes.function) {\n        return getPropWrap(value, ownerSupport);\n    }\n    if (depth === deepCompareDepth) {\n        return value;\n    }\n    const skip = isSkipPropValue(value);\n    if (skip) {\n        return value; // no children to crawl through\n    }\n    if (isArray(value)) {\n        return checkArrayProp(value, newSupport, ownerSupport, depth);\n    }\n    return checkObjectProp(value, newSupport, ownerSupport, depth);\n}\nfunction checkArrayProp(value, newSupport, ownerSupport, depth) {\n    for (let index = value.length - 1; index >= 0; --index) {\n        const subValue = value[index];\n        value[index] = checkProp(subValue, ownerSupport, newSupport, depth + 1);\n        if (typeof (subValue) === BasicTypes.function) {\n            if (subValue.mem) {\n                continue;\n            }\n            afterCheckProp(depth + 1, index, subValue, value, newSupport);\n        }\n    }\n    return value;\n}\nfunction checkObjectProp(value, newSupport, ownerSupport, depth) {\n    const keys = Object.keys(value);\n    for (const name of keys) {\n        const subValue = value[name];\n        const result = checkProp(subValue, ownerSupport, newSupport, depth + 1);\n        const newSubValue = value[name];\n        if (newSubValue === result) {\n            continue;\n        }\n        const getset = Object.getOwnPropertyDescriptor(value, name);\n        const hasSetter = getset?.get || getset?.set;\n        if (hasSetter) {\n            continue;\n        }\n        value[name] = result;\n        if (typeof (result) === BasicTypes.function) {\n            if (subValue.mem) {\n                continue;\n            }\n            afterCheckProp(depth + 1, name, subValue, value, newSupport);\n        }\n    }\n    return value;\n}\nfunction afterCheckProp(depth, index, originalValue, newProp, newSupport) {\n    // restore object to have original function on destroy\n    if (depth > 0) {\n        const global = newSupport.subject.global;\n        newProp[index].subscription = global.destroy$.toCallback(function alterCheckProcessor() {\n            newProp[index] = originalValue;\n        });\n    }\n}\nexport function getPropWrap(value, ownerSupport) {\n    const already = value.mem;\n    // already previously converted by a parent?\n    if (already) {\n        return value;\n    }\n    const wrap = function wrapRunner(...args) {\n        return wrap.toCall(...args);\n    }; // what gets called can switch over parent state changes\n    wrap.original = value;\n    wrap.mem = value;\n    // Currently, call self but over parent state changes, I may need to call a newer parent tag owner\n    wrap.toCall = function toCallRunner(...args) {\n        return callbackPropOwner(wrap.mem, args, ownerSupport);\n    };\n    // copy data properties that maybe on source function\n    Object.assign(wrap, value);\n    return wrap;\n}\n/** Function shared by alterProps() and updateExistingTagComponent... TODO: May want to have to functions to reduce cycle checking?  */\nexport function callbackPropOwner(toCall, callWith, ownerSupport) {\n    const global = ownerSupport.subject.global;\n    const newest = global?.newest || ownerSupport;\n    const supportInCycle = getSupportInCycle();\n    const noCycle = supportInCycle === undefined;\n    const callbackResult = toCall(...callWith);\n    const run = function propCallbackProcessor() {\n        const global = newest.subject.global;\n        // are we in a rendering cycle? then its being called by alterProps\n        if (noCycle === false) {\n            const allMatched = global.locked === true;\n            if (allMatched) {\n                return callbackResult; // owner did not change\n            }\n        }\n        safeRenderSupport(newest, ownerSupport);\n        return callbackResult;\n    };\n    if (noCycle) {\n        return run();\n    }\n    setUseMemory.tagClosed$.toCallback(run);\n    return callbackResult;\n}\nexport function isSkipPropValue(value) {\n    return typeof (value) !== BasicTypes.object || !value || value.tagJsType;\n}\nexport function safeRenderSupport(newest, ownerSupport) {\n    const subject = newest.subject;\n    const isInline = isInlineHtml(newest.templater);\n    if (isInline) {\n        const result = renderInlineHtml(ownerSupport, newest);\n        // TODO: below maybe never true\n        /*\n        const global = subject.global as TagGlobal\n        if(global) {\n          delete global.locked\n        }\n        */\n        return result;\n    }\n    const global = subject.global;\n    global.locked = true;\n    renderExistingReadyTag(global.newest, newest, ownerSupport, subject);\n    delete global.locked;\n}\n//# sourceMappingURL=alterProp.function.js.map","import { BasicTypes, ValueTypes } from './ValueTypes.enum.js';\nimport { setUseMemory } from '../state/setUseMemory.object.js';\nexport function executeWrap(templater, result, useSupport, castedProps) {\n    const originalFunction = result.original; // (innerTagWrap as any).original as unknown as TagComponent\n    const stateless = templater.tagJsType === ValueTypes.stateRender;\n    let tag;\n    if (stateless) {\n        tag = templater();\n    }\n    else {\n        tag = originalFunction(...castedProps);\n        // CALL ORIGINAL COMPONENT FUNCTION\n        if (typeof (tag) === BasicTypes.function) {\n            tag = tag();\n        }\n    }\n    tag.templater = templater;\n    templater.tag = tag;\n    const config = setUseMemory.stateConfig;\n    useSupport.state = config.stateArray;\n    useSupport.states = config.states;\n    return useSupport;\n}\n//# sourceMappingURL=executeWrap.function.js.map","import { deepClone } from '../deepFunctions.js';\nimport { ValueTypes } from './ValueTypes.enum.js';\nimport { isArray } from '../isInstance.js';\nexport function cloneValueArray(values) {\n    return values.map(cloneTagJsValue);\n}\n/** clones only what is needed to compare differences later */\nexport function cloneTagJsValue(value, maxDepth) {\n    const tag = value;\n    const tagJsType = value?.tagJsType;\n    if (tagJsType) {\n        switch (tagJsType) {\n            case ValueTypes.stateRender:\n                return undefined;\n            case ValueTypes.dom:\n            case ValueTypes.tag:\n            case ValueTypes.templater:\n                return cloneValueArray(tag.values);\n        }\n    }\n    if (isArray(value)) {\n        return cloneValueArray(tag);\n    }\n    return deepClone(value, maxDepth);\n}\n//# sourceMappingURL=cloneValueArray.function.js.map","import { clonePropsBy } from './clonePropsBy.function.js';\nimport { Subject } from '../subject/Subject.class.js';\n/** used only for apps, otherwise use Support */\nexport function getBaseSupport(templater, subject, castedProps) {\n    const baseSupport = {\n        templater,\n        subject,\n        castedProps,\n        appSupport: undefined,\n    };\n    // baseSupport.appSupport = baseSupport\n    const global = subject.global;\n    global.blocked = [];\n    global.destroy$ = new Subject();\n    return baseSupport;\n}\nexport function upgradeBaseToSupport(templater, // at runtime rendering of a tag, it needs to be married to a new Support()\nsupport, appSupport, castedProps) {\n    ;\n    support.state = [];\n    support.states = [];\n    support.appSupport = appSupport;\n    const props = templater.props; // natural props\n    if (props) {\n        support.propsConfig = clonePropsBy(support, props, castedProps);\n    }\n    return support;\n}\nexport function getHtmlSupport(templater, // at runtime rendering of a tag, it needs to be married to a new Support()\nownerSupport, appSupport, subject, castedProps) {\n    const support = {\n        templater,\n        subject,\n        castedProps,\n        appSupport: undefined,\n    };\n    support.ownerSupport = ownerSupport;\n    support.appSupport = appSupport;\n    return support;\n}\nexport function getSupport(templater, // at runtime rendering of a tag, it needs to be married to a new Support()\nownerSupport, appSupport, subject, castedProps) {\n    const support = getBaseSupport(templater, subject, castedProps);\n    support.ownerSupport = ownerSupport;\n    return upgradeBaseToSupport(templater, support, appSupport, castedProps);\n}\n//# sourceMappingURL=getSupport.function.js.map","import { ValueTypes } from './ValueTypes.enum.js';\nimport { cloneTagJsValue } from './cloneValueArray.function.js';\nimport { deepCompareDepth, shallowCompareDepth } from './hasSupportChanged.function.js';\nimport { PropWatches } from './tag.js';\nexport function clonePropsBy(support, props, castProps) {\n    const templater = support.templater;\n    if (templater.tagJsType === ValueTypes.stateRender) {\n        return;\n    }\n    switch (templater.propWatch) {\n        case PropWatches.IMMUTABLE:\n            return support.propsConfig = {\n                latest: props,\n                castProps,\n            };\n        case PropWatches.SHALLOW:\n            return support.propsConfig = {\n                latest: props.map(x => cloneTagJsValue(x, shallowCompareDepth)),\n                castProps,\n            };\n    }\n    return support.propsConfig = {\n        latest: props.map(props => cloneTagJsValue(props, deepCompareDepth)),\n        castProps,\n    };\n}\n//# sourceMappingURL=clonePropsBy.function.js.map","import { castProps } from '../alterProp.function.js';\nimport { syncFunctionProps } from './update/updateExistingTagComponent.function.js';\nimport { executeWrap } from './executeWrap.function.js';\nimport { PropWatches } from './tag.js';\nimport { deepCompareDepth, shallowCompareDepth } from './hasSupportChanged.function.js';\nimport { getSupport } from './getSupport.function.js';\n/** creates/returns a function that when called then calls the original component function\n * Gets used as templater.wrapper()\n */\nexport function getTagWrap(templater, result) {\n    // this function gets called by taggedjs\n    const wrapper = function tagFunWrap(newSupport, subject, lastSupport // subject.global.newest\n    ) {\n        // wrap any prop functions that are passed in\n        const castedProps = getCastedProps(templater, newSupport, lastSupport);\n        const ownerSupport = newSupport.ownerSupport;\n        const useSupport = getSupport(templater, ownerSupport, newSupport.appSupport, // ownerSupport.appSupport as AnySupport,\n        subject, castedProps);\n        return executeWrap(templater, result, useSupport, castedProps);\n    };\n    return wrapper;\n}\nexport function getCastedProps(templater, newSupport, lastSupport) {\n    const maxDepth = templater.propWatch === PropWatches.DEEP ? deepCompareDepth : shallowCompareDepth;\n    const props = templater.props;\n    const propsConfig = newSupport.propsConfig;\n    // When defined, this must be an update where my new props have already been made for me\n    let preCastedProps = propsConfig.castProps;\n    const lastPropsConfig = lastSupport?.propsConfig;\n    const lastCastProps = lastPropsConfig?.castProps;\n    if (lastCastProps) {\n        propsConfig.castProps = lastCastProps;\n        preCastedProps = syncFunctionProps(newSupport, lastSupport, lastSupport.ownerSupport, props, maxDepth);\n    }\n    const castedProps = preCastedProps || castProps(props, newSupport, 0);\n    return castedProps;\n}\n//# sourceMappingURL=getTagWrap.function.js.map","// taggedjs-no-compile\nimport { setUseMemory } from '../state/index.js';\nimport { getTemplaterResult } from './getTemplaterResult.function.js';\nimport { tags } from './tag.utils.js';\nimport { getTagWrap } from './getTagWrap.function.js';\nimport { ValueTypes } from './ValueTypes.enum.js';\nlet tagCount = 0;\nexport var PropWatches;\n(function (PropWatches) {\n    PropWatches[\"DEEP\"] = \"deep\";\n    PropWatches[\"SHALLOW\"] = \"shallow\";\n    PropWatches[\"NONE\"] = \"none\";\n    PropWatches[\"IMMUTABLE\"] = \"immutable\";\n})(PropWatches || (PropWatches = {}));\n/** Wraps a function tag in a state manager and calls wrapped function on event cycles\n * For single rendering, no event cycles, use: tag.renderOnce = (props) => html``\n */\nexport function tag(tagComponent, propWatch = PropWatches.SHALLOW) {\n    /** function developer triggers */\n    const parentWrap = function tagWrapper(...props) {\n        const templater = getTemplaterResult(propWatch, props);\n        templater.tagJsType = ValueTypes.tagComponent;\n        // attach memory back to original function that contains developer display logic\n        const innerTagWrap = getTagWrap(templater, parentWrap);\n        innerTagWrap.original = tagComponent;\n        /*\n            if(!innerTagWrap.parentWrap) {\n              innerTagWrap.parentWrap = parentWrap as TagWrapper<unknown>\n            }\n        */\n        templater.wrapper = innerTagWrap;\n        return templater;\n    }; // we override the function provided and pretend original is what's returned\n    const tag = tagComponent;\n    parentWrap.original = tagComponent;\n    // group tags together and have hmr pickup\n    tag.tags = tags;\n    tag.setUse = setUseMemory;\n    tag.ValueTypes = ValueTypes;\n    tag.tagIndex = tagCount++; // needed for things like HMR\n    tags.push(parentWrap);\n    return parentWrap;\n}\ntag.renderOnce = renderOnceFn;\nfunction renderOnceFn() {\n    throw new Error('Do not call tag.renderOnce as a function but instead set it as: `(props) => tag.renderOnce = () => html`` `');\n}\n/** Used to create variable scoping when calling a function that lives within a prop container function */\nfunction tagUseFn() {\n    throw new Error('Do not call tag.use as a function but instead set it as: `(props) => tag.use = (use) => html`` `');\n}\n/** deprecated */\n;\ntag.state = tagUseFn;\ntag.use = tagUseFn;\ntag.route = routeFn;\nfunction routeFn(_routeProps) {\n    throw new Error('Do not call tag.route as a function but instead set it as: `tag.route = (routeProps: RouteProps) => (state) => html`` `');\n}\n/** Use to structure and define a browser tag route handler\n * Example: export default tag.route = (routeProps: RouteProps) => (state) => html``\n */\n;\ntag.app = function (_routeTag) {\n    throw new Error('Do not call tag.route as a function but instead set it as: `tag.route = (routeProps: RouteProps) => (state) => html`` `');\n};\ntag.deepPropWatch = tag;\ntag.immutableProps = function immutableProps(tagComponent) {\n    return tag(tagComponent, PropWatches.IMMUTABLE);\n};\ntag.watchProps = function watchProps(tagComponent) {\n    return tag(tagComponent, PropWatches.SHALLOW);\n};\n/* BELOW: Cast functions into setters with no getters */\nObject.defineProperty(tag, 'renderOnce', {\n    set(oneRenderFunction) {\n        oneRenderFunction.tagJsType = ValueTypes.renderOnce;\n    },\n});\n// TODO: deprecate this\nObject.defineProperty(tag, 'state', {\n    set(renderFunction) {\n        ;\n        renderFunction.original = {\n            setUse: setUseMemory,\n            tags,\n        };\n        renderFunction.tagJsType = ValueTypes.stateRender;\n    },\n});\nObject.defineProperty(tag, 'use', {\n    set(renderFunction) {\n        ;\n        renderFunction.original = {\n            setUse: setUseMemory,\n            tags,\n        };\n        renderFunction.tagJsType = ValueTypes.stateRender;\n    },\n});\n//# sourceMappingURL=tag.js.map","import { deepEqual } from '../deepFunctions.js';\nimport { isArray } from '../isInstance.js';\nimport { hasPropLengthsChanged } from './render/renderSupport.function.js';\nimport { PropWatches } from './tag.js';\nimport { BasicTypes } from './ValueTypes.enum.js';\nexport function hasSupportChanged(lastSupport, newTemplater) {\n    const latestProps = newTemplater.props;\n    const propsConfig = lastSupport.propsConfig;\n    const pastCloneProps = propsConfig.latest;\n    const propsChanged = hasPropChanges(latestProps, pastCloneProps, lastSupport.templater.propWatch);\n    return propsChanged;\n}\n/**\n *\n * @param props\n * @param pastCloneProps\n * @returns WHEN number then props have changed. WHEN false props have not changed\n */\nfunction hasPropChanges(props, // natural props\npastCloneProps, // previously cloned props\npropWatch) {\n    const hasLenChanged = hasPropLengthsChanged(props, pastCloneProps);\n    if (hasLenChanged) {\n        return 11;\n    }\n    switch (propWatch) {\n        case PropWatches.NONE:\n            return 1; // always render\n        case PropWatches.SHALLOW: // determining equal is same as immutable, its the previous cloning step thats different\n            return shallowPropMatch(props, pastCloneProps);\n        case PropWatches.IMMUTABLE:\n            return immutablePropMatch(props, pastCloneProps);\n    }\n    return deepPropChangeCompare(props, pastCloneProps);\n}\nfunction deepPropChangeCompare(props, pastCloneProps) {\n    // DEEP watch\n    let castedProps = props;\n    let castedPastProps = pastCloneProps;\n    castedProps = [...props];\n    castedPastProps = [...(pastCloneProps || [])];\n    const allFunctionsMatch = castedProps.every((value, index) => onePropCompare(value, index, castedProps, castedPastProps));\n    if (!allFunctionsMatch) {\n        return 7; // a change has been detected by function comparisons\n    }\n    return false;\n}\nexport function immutablePropMatch(props, pastCloneProps) {\n    // if every prop the same, then no changes\n    const len = props.length;\n    for (let index = 0; index < len; ++index) {\n        const prop = props[index];\n        const pastProp = pastCloneProps[index];\n        if (prop !== pastProp) {\n            return 2;\n        }\n    }\n    return false; // false means has not changed\n}\nexport function shallowPropMatch(props, pastCloneProps) {\n    // if every prop the same, then no changes\n    const len = props.length;\n    for (let index = 0; index < len; ++index) {\n        const prop = props[index];\n        const pastProp = pastCloneProps[index];\n        if (isArray(prop) && isArray(pastProp)) {\n            if (prop === pastProp) {\n                continue;\n            }\n            return 3.0; // not equal array\n        }\n        if (typeof (prop) === BasicTypes.function && typeof (pastProp) === BasicTypes.function) {\n            continue; // considered good\n        }\n        if (typeof (prop) === BasicTypes.object) {\n            if (typeof (pastCloneProps) === BasicTypes.object) {\n                const obEntries = Object.entries(prop);\n                for (const subItem of obEntries) {\n                    const result = objectItemMatches(subItem, pastProp);\n                    if (!result) {\n                        return 3.1;\n                    }\n                }\n            }\n            continue; // all sub objects matched\n        }\n        if (prop === pastProp) {\n            continue; // matched good\n        }\n        return 3.3; // not equal\n    }\n    return false; // false means has not changed\n}\nfunction onePropCompare(value, index, castedProps, castedPastProps) {\n    const compare = castedPastProps[index];\n    if (typeof (value) === BasicTypes.object) {\n        const subCastedProps = { ...value };\n        const subCompareProps = { ...compare || {} };\n        const matched = Object.entries(subCastedProps).every(([key, value]) => compareProps(value, subCompareProps[key], () => {\n            delete subCastedProps[key]; // its a function and not needed to be compared\n            delete subCompareProps[key]; // its a function and not needed to be compared\n        }));\n        return matched;\n    }\n    return compareProps(value, compare, () => {\n        castedProps.splice(index, 1);\n        castedPastProps.splice(index, 1);\n    });\n}\nexport const shallowCompareDepth = 3;\nexport const deepCompareDepth = 10;\n/** returning a number means true good comparison */\nfunction compareProps(value, compare, onDelete) {\n    if (!(typeof (value) === BasicTypes.function)) {\n        return deepEqual(value, compare, deepCompareDepth) ? 4 : false;\n    }\n    const compareFn = compare;\n    if (!(typeof (compareFn) === BasicTypes.function)) {\n        return false; // its a function now but was not before\n    }\n    // ensure we are comparing apples to apples as function get wrapped\n    const compareOriginal = compare?.original;\n    if (compareOriginal) {\n        compare = compareOriginal;\n    }\n    const original = value.original;\n    if (original) {\n        value = value.original;\n    }\n    const valueString = value.toString();\n    const compareString = compare.toString();\n    if (valueString === compareString) {\n        onDelete();\n        return 5; // both are function the same\n    }\n    onDelete();\n    return 6;\n}\nfunction objectItemMatches([name, value], pastProp) {\n    const pastValue = pastProp[name];\n    if (typeof (value) === BasicTypes.function && typeof (pastValue) === BasicTypes.function) {\n        return true;\n    }\n    return pastValue === value;\n}\n//# sourceMappingURL=hasSupportChanged.function.js.map","export let paintRemoves = [];\nexport let paintContent = [];\nexport let setContent = [];\n/** array memory that runs and completes BEFORE paintInsertBefores array */\nexport let paintAppends = [];\n/** array memory that runs and completes AFTER paintAppends array */\nexport let paintInsertBefores = [];\nexport let paintAfters = []; // callbacks after all painted\nexport const painting = {\n    locks: 0\n};\nexport function paint() {\n    if (painting.locks > 0) {\n        return;\n    }\n    for (let index = paintRemoves.length - 1; index >= 0; --index) {\n        const toRemove = paintRemoves[index];\n        const parentNode = toRemove.parentNode;\n        parentNode.removeChild(toRemove);\n    }\n    for (const content of paintContent) {\n        content();\n    }\n    for (const [text, textNode] of setContent) {\n        textNode.textContent = text;\n    }\n    for (const now of paintAppends) {\n        now.relative.appendChild(now.element);\n    }\n    for (const { element, relative } of paintInsertBefores) {\n        relative.parentNode.insertBefore(element, relative);\n    }\n    paintRemoves = [];\n    paintContent = [];\n    paintAppends = [];\n    paintInsertBefores = [];\n    setContent = [];\n    for (const now of paintAfters) {\n        now();\n    }\n    paintAfters = [];\n}\n//# sourceMappingURL=paint.function.js.map","import { paintInsertBefores } from './tag/paint.function.js';\nimport { empty } from './tag/ValueTypes.enum.js';\n// Function to update the value of x\nexport function updateBeforeTemplate(value, // value should be casted before calling here\nlastFirstChild) {\n    const textNode = document.createTextNode(value); // never innerHTML\n    paintInsertBefores.push({\n        element: textNode,\n        relative: lastFirstChild,\n    });\n    return textNode;\n}\nexport function castTextValue(value) {\n    switch (value) {\n        case undefined:\n        case false:\n        case null:\n            return empty;\n    }\n    return value;\n}\n//# sourceMappingURL=updateBeforeTemplate.function.js.map","import { getSupportInCycle } from './getSupportInCycle.function.js';\nimport { setUseMemory } from '../state/index.js';\nimport { Subject } from '../subject/index.js';\n// Emits event at the end of a tag being rendered. Use tagClosed$.toPromise() to render a tag after a current tag is done rendering\nsetUseMemory.tagClosed$ = new Subject(undefined, function tagCloser(subscription) {\n    if (!getSupportInCycle()) {\n        subscription.next(); // we are not currently processing so process now\n    }\n});\n// Life cycle 4 - end of life\nexport function runBeforeDestroy(support) {\n    // TODO: We don't need to remove from parents if parent is being destroyed\n    // remove me from my parents\n    const global = support.subject.global;\n    const providers = global.providers;\n    if (providers) {\n        for (const provider of providers) {\n            for (let index = provider.children.length - 1; index >= 0; --index) {\n                const child = provider.children[index];\n                if (child.subject.global === global) {\n                    provider.children.splice(index, 1);\n                }\n            }\n        }\n    }\n    if (global.destroy$) {\n        global.destroy$.next();\n    }\n    support.subject.renderCount = 0; // if it comes back, wont be considered an update\n}\n//# sourceMappingURL=tagRunner.js.map","import { isTagComponent } from '../isInstance.js';\nimport { runBeforeDestroy } from './tagRunner.js';\nexport function getChildTagsToDestroy(childTags) {\n    for (const child of childTags) {\n        const lastArray = child.lastArray;\n        if (lastArray) {\n            getChildTagsToDestroy(lastArray);\n            continue;\n        }\n        const global = child.global;\n        if (!global) {\n            continue; // not a support contextItem\n        }\n        const support = global.newest;\n        const iSubs = global.subscriptions;\n        if (iSubs) {\n            iSubs.forEach(iSub => iSub.unsubscribe());\n        }\n        if (isTagComponent(support.templater)) {\n            runBeforeDestroy(support);\n        }\n        const subTags = global.context;\n        getChildTagsToDestroy(subTags);\n    }\n}\nexport function getChildTagsToSoftDestroy(childTags, tags = [], subs = []) {\n    for (const child of childTags) {\n        const global = child.global;\n        if (!global) {\n            continue;\n        }\n        const support = global.newest;\n        if (support) {\n            tags.push(support);\n            const iSubs = global.subscriptions;\n            if (iSubs) {\n                subs.push(...iSubs);\n            }\n        }\n        const subTags = global.context;\n        if (subTags) {\n            getChildTagsToSoftDestroy(subTags, tags, subs);\n        }\n    }\n    return { tags, subs };\n}\n//# sourceMappingURL=getChildTagsToDestroy.function.js.map","import { destroyArray } from './checkDestroyPrevious.function.js';\nimport { paint, painting, paintRemoves } from './paint.function.js';\n/** sets global.deleted on support and all children */\nexport function smartRemoveKids(support, allPromises) {\n    const subject = support.subject;\n    const global = subject.global;\n    const context = global.context;\n    // already set\n    // global.deleted = true\n    const destroys = global.destroys;\n    if (destroys) {\n        return processContextDestroys(destroys, allPromises, subject);\n    }\n    smartRemoveByContext(context, allPromises);\n    destroyClones(global);\n}\n// Elements that have a destroy or ondestroy attribute\nfunction processContextDestroys(destroys, allPromises, subject) {\n    const global = subject.global;\n    const promises = [];\n    destroys.forEach(destroy => {\n        const maybePromise = destroy();\n        const isPromise = maybePromise instanceof Promise;\n        if (isPromise) {\n            promises.push(maybePromise);\n        }\n    });\n    if (promises.length) {\n        const lastPromise = Promise.all(promises)\n            .then(() => {\n            ++painting.locks;\n            // continue to remove\n            smartRemoveByContext(global.context, allPromises);\n            destroyClones(global);\n            --painting.locks;\n            paint();\n        });\n        // run destroy animations\n        allPromises.push(lastPromise);\n        return;\n    }\n    ++painting.locks;\n    smartRemoveByContext(global.context, allPromises);\n    destroyClones(global);\n    --painting.locks;\n    paint();\n}\nfunction smartRemoveByContext(context, allPromises) {\n    for (const subject of context) {\n        if (subject.withinOwnerElement) {\n            continue; // i live within my owner variable. I will be deleted with owner\n        }\n        const lastArray = subject.lastArray;\n        if (lastArray) {\n            destroyArray(subject, lastArray);\n            continue;\n        }\n        // regular values, no placeholders\n        const elm = subject.simpleValueElm;\n        if (elm) {\n            delete subject.simpleValueElm;\n            paintRemoves.push(elm);\n            continue;\n        }\n        const subGlobal = subject.global;\n        if (subGlobal === undefined) {\n            continue; // subject\n        }\n        if (subGlobal.deleted === true) {\n            continue; // already deleted\n        }\n        subGlobal.deleted = true;\n        const oldest = subGlobal.oldest;\n        if (oldest) {\n            smartRemoveKids(oldest, allPromises);\n            continue;\n        }\n    }\n}\nfunction destroyClones(global) {\n    // const global = subject.global\n    const htmlDomMeta = global.htmlDomMeta;\n    // check subjects that may have clones attached to them\n    htmlDomMeta.forEach(clone => {\n        const marker = clone.marker;\n        if (marker) {\n            paintRemoves.push(marker);\n        }\n        const dom = clone.domElement;\n        if (!dom) {\n            return;\n        }\n        paintRemoves.push(dom);\n    });\n    // htmlDomMeta.length = 0\n}\n//# sourceMappingURL=smartRemoveKids.function.js.map","import { getChildTagsToDestroy } from './getChildTagsToDestroy.function.js';\nimport { smartRemoveKids } from './smartRemoveKids.function.js';\nimport { runBeforeDestroy } from './tagRunner.js';\nexport function destroySupport(support) {\n    const global = support.subject.global;\n    global.deleted = true;\n    support.subject.renderCount = 0; // if it comes back, wont be considered an update\n    const promises = [];\n    const context = global.context;\n    getChildTagsToDestroy(context);\n    if (global.destroy$) {\n        runBeforeDestroy(support);\n    }\n    smartRemoveKids(support, promises);\n    return promises;\n}\n//# sourceMappingURL=destroySupport.function.js.map","import { paint, paintAfters, paintRemoves } from '../paint.function.js';\nimport { destroySupport } from '../destroySupport.function.js';\nexport function compareArrayItems(_subTag, // used to compare arrays\nvalue, index, lastArray, removed, counts) {\n    const newLength = value.length - 1;\n    const at = index - removed;\n    const lessLength = at < 0 || newLength < at;\n    const prevContext = lastArray[index];\n    if (lessLength) {\n        destroyArrayItem(prevContext, counts);\n        return 1;\n    }\n    const oldKey = lastArray[index].value.arrayValue;\n    const oldValueTag = value[index];\n    return runArrayItemDiff(oldKey, oldValueTag, prevContext, counts, lastArray, index);\n}\nfunction runArrayItemDiff(oldKey, oldValueTag, prevContext, counts, lastArray, index) {\n    const isDiff = oldValueTag && oldKey !== oldValueTag.arrayValue;\n    if (isDiff) {\n        if (prevContext.renderCount === 0) {\n            const newKey = oldValueTag.arrayValue;\n            console.warn('Possible array issue. Array is attempting to create/delete same items. Either html``.key is not unique or array changes with every render', {\n                oldKey,\n                newKey,\n            });\n            paintAfters.push(() => {\n                destroyArrayItemByGlobal(prevContext.global, prevContext);\n                paintAfters.shift(); // prevent endless recursion\n                paint();\n            });\n            return 1;\n        }\n        destroyArrayItem(prevContext, counts);\n        lastArray.splice(index, 1);\n        return 2;\n    }\n    return 0;\n}\nexport function destroyArrayItem(item, counts) {\n    const global = item.global;\n    destroyArrayItemByGlobal(global, item);\n    ++counts.removed;\n}\nfunction destroyArrayItemByGlobal(global, item) {\n    if (global) {\n        const support = global.oldest;\n        destroySupport(support);\n    }\n    else {\n        const element = item.simpleValueElm;\n        delete item.simpleValueElm;\n        paintRemoves.push(element);\n    }\n}\n//# sourceMappingURL=compareArrayItems.function.js.map","// Functions in here are attached as ContextItem.checkValueChange\nimport { processUpdateRegularValue } from './update/processRegularValue.function.js';\nimport { destroyArrayItem } from './update/compareArrayItems.function.js';\nimport { isArray } from '../isInstance.js';\nimport { paintRemoves } from './paint.function.js';\nimport { BasicTypes } from './ValueTypes.enum.js';\nexport function checkArrayValueChange(newValue, subject) {\n    // no longer an array?\n    if (!isArray(newValue)) {\n        const lastArray = subject.lastArray;\n        destroyArray(subject, lastArray);\n        return 9; // 'array'\n    }\n    return false;\n}\nexport function destroyArray(subject, lastArray) {\n    const counts = { added: 0, removed: 0 };\n    for (let index = 0; index < lastArray.length; ++index) {\n        destroyArrayItem(lastArray[index], counts);\n    }\n    delete subject.lastArray;\n}\nexport function checkSimpleValueChange(newValue, subject) {\n    const isBadValue = newValue === null || newValue === undefined;\n    if (isBadValue || !(typeof (newValue) === BasicTypes.object)) {\n        // This will cause all other values to render\n        processUpdateRegularValue(newValue, subject);\n        return -1; // no need to destroy, just update display\n    }\n    const elm = subject.simpleValueElm;\n    delete subject.simpleValueElm;\n    paintRemoves.push(elm);\n    return 6; // 'changed-simple-value'\n}\n//# sourceMappingURL=checkDestroyPrevious.function.js.map","import { castTextValue, updateBeforeTemplate } from '../../updateBeforeTemplate.function.js';\nimport { setContent } from '../paint.function.js';\nimport { checkSimpleValueChange } from '../checkDestroyPrevious.function.js';\nexport function processUpdateRegularValue(value, contextItem) {\n    const castedValue = castTextValue(value);\n    const oldClone = contextItem.simpleValueElm; // placeholder\n    setContent.push([castedValue, oldClone]);\n}\n/** Used during updates that were another value/tag first but now simple string */\nexport function processNowRegularValue(value, subject) {\n    subject.checkValueChange = checkSimpleValueChange;\n    const before = subject.placeholder;\n    const castedValue = castTextValue(value);\n    // Processing of regular values\n    subject.simpleValueElm = updateBeforeTemplate(castedValue, before);\n}\n//# sourceMappingURL=processRegularValue.function.js.map","export function getNewGlobal(subject) {\n    ;\n    subject.renderCount = 0;\n    return subject.global = {}; // TODO: makeSupportTagGlobal\n}\n//# sourceMappingURL=getNewGlobal.function.js.map","import { BasicTypes, ValueTypes } from './ValueTypes.enum.js';\nexport function isLikeTags(support0, // new\nsupport1) {\n    const templater0 = support0.templater;\n    const templater1 = support1.templater;\n    const tag0 = templater0?.tag || support0;\n    const tag1 = templater1.tag; // || (support1 as any)\n    if (templater0?.tagJsType === ValueTypes.stateRender) {\n        return templater0.dom === templater1.dom;\n    }\n    switch (tag0.tagJsType) {\n        case ValueTypes.dom: {\n            if (tag1?.tagJsType !== ValueTypes.dom) {\n                return false; // tag0 is not even same type\n            }\n            return isLikeDomTags(tag0, tag1);\n        }\n        case ValueTypes.tag: {\n            const like = isLikeStringTags(tag0, tag1, support0, support1);\n            return like;\n        }\n    }\n    throw new Error(`unknown tagJsType of ${tag0.tagJsType}`);\n}\n// used when compiler was used\nexport function isLikeDomTags(tag0, tag1) {\n    const domMeta0 = tag0.dom;\n    const domMeta1 = tag1.dom;\n    return domMeta0 === domMeta1;\n}\n// used for no compiling\nfunction isLikeStringTags(tag0, tag1, support0, // new\nsupport1) {\n    const strings0 = tag0.strings;\n    const strings1 = tag1.strings;\n    if (strings0.length !== strings1.length) {\n        return false;\n    }\n    const everyStringMatched = strings0.every((string, index) => strings1[index].length === string.length // performance, just compare length of strings // TODO: Document this\n    // strings1[index] === string // slower\n    );\n    if (!everyStringMatched) {\n        return false;\n    }\n    const values0 = support0.templater.values || tag0.values;\n    const values1 = support1.templater.values || tag1.values;\n    return isLikeValueSets(values0, values1);\n}\nexport function isLikeValueSets(values0, values1) {\n    const valuesLengthsMatch = values0.length === values1.length;\n    if (!valuesLengthsMatch) {\n        return false;\n    }\n    const allVarsMatch = values1.every((value, index) => {\n        const compareTo = values0[index];\n        const isFunctions = typeof (value) === BasicTypes.function && typeof (compareTo) === BasicTypes.function;\n        if (isFunctions) {\n            const stringMatch = value.toString() === compareTo.toString();\n            if (stringMatch) {\n                return true;\n            }\n            return false;\n        }\n        return true;\n    });\n    if (allVarsMatch) {\n        return true;\n    }\n    return false;\n}\n//# sourceMappingURL=isLikeTags.function.js.map","import { paintContent } from \"../../tag/paint.function.js\";\n// Maybe more performant for updates but seemingly slower for first renders\nexport function howToSetInputValue(element, name, value) {\n    paintContent.push(() => {\n        howToSetFirstInputValue(element, name, value);\n    });\n}\nexport function howToSetFirstInputValue(element, name, value) {\n    if (value === undefined || value === false || value === null) {\n        element.removeAttribute(name);\n        return;\n    }\n    element.setAttribute(name, value);\n}\n//# sourceMappingURL=howToSetInputValue.function.js.map","import { paintAfters, paintContent } from \"../../tag/paint.function.js\";\n/** handles init, destroy, autofocus, autoselect, style., class. */\nexport function specialAttribute(name, value, element, specialName, support, counts) {\n    switch (specialName) {\n        // case 'oninit' as any:\n        case 'init': {\n            const stagger = counts.added;\n            // run delayed after elements placed down\n            paintAfters.push(() => {\n                const event = {\n                    target: element,\n                    stagger,\n                };\n                value(event); // call init/oninit\n            });\n            return;\n        }\n        case 'destroy': {\n            const stagger = ++counts.removed;\n            const global = support.subject.global;\n            global.destroys = global.destroys || [];\n            global.destroys.push(() => {\n                const event = {\n                    target: element,\n                    stagger,\n                };\n                return value(event); // call destroy/ondestroy\n            });\n            return;\n        }\n        case 'autofocus':\n            paintAfters.push(() => element.focus());\n            return;\n        case 'autoselect':\n            paintAfters.push(() => element.select());\n            return;\n        case 'style': {\n            const names = name.split('.');\n            paintContent.push(() => element.style[names[1]] = value); // attribute changes should come first\n            return;\n        }\n        case 'class':\n            processSpecialClass(name, value, element);\n            return;\n    }\n    throw new Error(`Invalid special attribute of ${specialName}. ${name}`);\n}\nfunction processSpecialClass(name, value, element) {\n    const names = name.split('.');\n    names.shift(); // remove class\n    // truthy\n    if (value) {\n        for (const name of names) {\n            paintContent.push(() => element.classList.add(name));\n        }\n        return;\n    }\n    // falsy\n    for (const name of names) {\n        paintContent.push(() => element.classList.remove(name));\n    }\n}\n//# sourceMappingURL=specialAttribute.js.map","export function handleProviderChanges(appSupport, provider) {\n    const tagsWithProvider = getTagsWithProvider(appSupport, provider);\n    return tagsWithProvider;\n}\n/** Updates and returns memory of tag providers */\nfunction getTagsWithProvider(support, provider, memory = []) {\n    const subject = support.subject;\n    memory.push({\n        support,\n        renderCount: subject.renderCount,\n        provider,\n    });\n    const childTags = provider.children;\n    for (let index = childTags.length - 1; index >= 0; --index) {\n        const child = childTags[index];\n        const cSubject = child.subject;\n        memory.push({\n            support: child,\n            renderCount: cSubject.renderCount,\n            provider,\n        });\n    }\n    return memory;\n}\n//# sourceMappingURL=handleProviderChanges.function.js.map","import { isTagComponent } from \"../../isInstance.js\";\nimport { providersChangeCheck } from \"../../state/providersChangeCheck.function.js\";\nimport { checkRenderUp, isInlineHtml } from \"../../tag/render/renderSupport.function.js\";\nimport { ValueTypes } from \"../../tag/ValueTypes.enum.js\";\nexport function getUpTags(support, supports = []) {\n    const global = support.subject.global;\n    const templater = support.templater;\n    const inlineHtml = isInlineHtml(templater);\n    const ownerSupport = support.ownerSupport;\n    if (global.locked) {\n        supports.push(support);\n        return supports;\n    }\n    // is it just a vanilla tag, not component?\n    if (inlineHtml) {\n        return getUpTags(ownerSupport, supports);\n    }\n    const newSupport = support; // global.newest as AnySupport\n    const isComponent = isTagComponent(newSupport.templater);\n    const tagJsType = support.templater.tagJsType;\n    const canContinueUp = ownerSupport && tagJsType !== ValueTypes.stateRender;\n    const continueUp = canContinueUp && (!isComponent || checkRenderUp(ownerSupport, newSupport.templater, newSupport));\n    const proSupports = providersChangeCheck(newSupport);\n    supports.push(...proSupports);\n    if (continueUp) {\n        getUpTags(ownerSupport, supports);\n        if (isComponent) {\n            supports.push(newSupport);\n        }\n        return supports; // more to keep going up, do not push this child for review\n    }\n    supports.push(newSupport);\n    return supports;\n}\n//# sourceMappingURL=getUpTags.function.js.map","import { deepEqual } from '../../deepFunctions.js';\nimport { renderExistingReadyTag } from './renderExistingTag.function.js';\nimport { ValueTypes } from '../ValueTypes.enum.js';\nimport { PropWatches } from '../index.js';\nimport { deepCompareDepth, immutablePropMatch, shallowPropMatch } from '../hasSupportChanged.function.js';\nexport function isInlineHtml(templater) {\n    return ValueTypes.templater === templater.tagJsType;\n}\n/** Main function used by all other callers to render/update display of a tag component */\nexport function renderSupport(support) {\n    const global = support.subject.global;\n    const templater = support.templater;\n    const inlineHtml = isInlineHtml(templater);\n    const ownerSupport = support.ownerSupport;\n    if (global.locked) {\n        global.blocked.push(support);\n        return support;\n    }\n    // is it just a vanilla tag, not component?\n    if (inlineHtml) {\n        const result = renderInlineHtml(ownerSupport, support);\n        return result;\n    }\n    global.locked = true;\n    const subject = support.subject;\n    if (global.blocked.length) {\n        support = global.blocked.pop();\n        global.blocked = [];\n    }\n    const tag = renderExistingReadyTag(global.newest, support, ownerSupport, subject);\n    delete global.locked;\n    return tag;\n}\nexport function renderInlineHtml(ownerSupport, support) {\n    const ownGlobal = ownerSupport.subject.global;\n    if (!ownGlobal || ownGlobal.deleted === true) {\n        return support;\n    }\n    // ??? new change\n    const newest = ownGlobal.newest || ownerSupport;\n    const result = renderSupport(newest);\n    return result;\n}\nexport function checkRenderUp(ownerSupport, templater, support) {\n    const selfPropChange = hasPropsToOwnerChanged(templater, support);\n    // render owner up first and that will cause me to re-render\n    if (ownerSupport && selfPropChange) {\n        return true;\n    }\n    return false;\n}\nfunction hasPropsToOwnerChanged(templater, support) {\n    const nowProps = templater.props;\n    const propsConfig = support.propsConfig;\n    const latestProps = propsConfig.latest;\n    const compareLen = hasPropLengthsChanged(nowProps, latestProps);\n    if (compareLen) {\n        return true;\n    }\n    switch (templater.propWatch) {\n        case PropWatches.IMMUTABLE:\n            return immutablePropMatch(nowProps, latestProps);\n        case PropWatches.SHALLOW:\n            return shallowPropMatch(nowProps, latestProps);\n    }\n    return !deepEqual(nowProps, latestProps, deepCompareDepth);\n}\nexport function hasPropLengthsChanged(nowProps, latestProps) {\n    const nowLen = nowProps.length;\n    const latestLen = latestProps.length;\n    /*\n    const noLength = nowProps && nowLen === 0 && latestLen === 0\n  \n    if(noLength) {\n      return false\n    }\n    */\n    return nowLen !== latestLen;\n}\n//# sourceMappingURL=renderSupport.function.js.map","import { handleProviderChanges } from './handleProviderChanges.function.js';\nexport function providersChangeCheck(support) {\n    const global = support.subject.global;\n    const providers = global.providers;\n    if (!providers) {\n        return [];\n    }\n    const prosWithChanges = [];\n    // reset clones\n    for (const provider of providers) {\n        const owner = provider.owner;\n        const hasChange = handleProviderChanges(owner, provider);\n        prosWithChanges.push(...hasChange.map(x => x.support));\n    }\n    return prosWithChanges;\n}\n//# sourceMappingURL=providersChangeCheck.function.js.map","import { paint, painting } from '../../tag/paint.function.js';\nimport { renderSupport } from '../../tag/render/renderSupport.function.js';\nexport function renderTagUpdateArray(supports) {\n    ++painting.locks;\n    supports.forEach(mapTagUpdate);\n    --painting.locks;\n    paint();\n}\nfunction mapTagUpdate(support) {\n    const global = support.subject.global;\n    if (!global) {\n        return; // while rendering a parent, a child may have been deleted (pinbowl)\n    }\n    renderSupport(global.newest);\n}\n//# sourceMappingURL=renderTagArray.function.js.map","// taggedjs-no-compile\n/** File largely responsible for reacting to element events, such as onclick */\nimport { isPromise, isTagComponent } from '../../isInstance.js';\nimport { renderSupport } from '../../tag/render/renderSupport.function.js';\nimport { getUpTags } from './getUpTags.function.js';\nimport { renderTagUpdateArray } from './renderTagArray.function.js';\nconst noData = 'no-data-ever';\nconst promiseNoData = 'promise-no-data-ever';\nexport function bindSubjectCallback(value, support) {\n    const global = support.subject.global;\n    // MAIN EVENT CALLBACK PROCESSOR\n    const subjectFunction = function (element, args) {\n        if (global.deleted === true) {\n            return;\n        }\n        // const newest = global.newest as AnySupport // || subjectFunction.support\n        return runTagCallback(subjectFunction.tagFunction, subjectFunction.support, // newest\n        element, args);\n    };\n    // link back to original. Mostly used for <div oninit ondestroy> animations\n    subjectFunction.tagFunction = value;\n    subjectFunction.support = support;\n    return subjectFunction;\n}\nexport function runTagCallback(value, support, bindTo, args) {\n    // get actual component owner not just the html`` support\n    let component = support;\n    while (component.ownerSupport && !isTagComponent(component.templater)) {\n        component = component.ownerSupport;\n    }\n    const subject = component.subject;\n    const global = subject.global; // tag.subject.global as TagGlobal\n    global.locked = true; // prevent another render from re-rendering this tag\n    // ACTUAL CALLBACK TO ORIGINAL FUNCTION\n    const callbackResult = value.apply(bindTo, args);\n    delete global.locked;\n    const result = afterTagCallback(callbackResult, component);\n    return result;\n}\nexport function afterTagCallback(callbackResult, eventHandlerSupport) {\n    const global = eventHandlerSupport.subject.global; // tag.subject.global as SupportTagGlobal\n    return renderCallbackSupport(eventHandlerSupport, callbackResult, global);\n}\nfunction renderCallbackSupport(last, callbackResult, global) {\n    const tagsToUpdate = getUpTags(last);\n    renderTagUpdateArray(tagsToUpdate);\n    return checkAfterCallbackPromise(callbackResult, last, global);\n}\nexport function checkAfterCallbackPromise(callbackResult, last, global) {\n    if (isPromise(callbackResult)) {\n        const global0 = last.subject.global;\n        global0.locked = true;\n        return callbackResult.then(() => {\n            if (global.deleted === true) {\n                return promiseNoData; // tag was deleted during event processing\n            }\n            const global1 = last.subject.global;\n            delete global1.locked;\n            const tagsToUpdate = getUpTags(last);\n            renderTagUpdateArray(tagsToUpdate);\n            return promiseNoData;\n        });\n    }\n    return noData;\n}\nexport function runBlocked(tag) {\n    const global = tag.subject.global;\n    const blocked = global.blocked;\n    for (const block of blocked) {\n        const lastResult = renderSupport(block);\n        global.newest = lastResult;\n    }\n    global.blocked = [];\n    return global.newest;\n}\n//# sourceMappingURL=bindSubjectCallback.function.js.map","// taggedjs-no-compile\nimport { specialAttribute } from './specialAttribute.js';\nimport { processTagCallbackFun } from './processAttribute.function.js';\nimport { BasicTypes } from '../../tag/ValueTypes.enum.js';\nconst actions = ['init', 'destroy']; // oninit ondestroy\nexport function processDynamicNameValueAttribute(attrName, value, contextItem, element, howToSet, support, counts, isSpecial) {\n    contextItem.attrName = attrName;\n    contextItem.element = element;\n    contextItem.howToSet = howToSet;\n    if (typeof (value) === BasicTypes.function) {\n        if (isSpecial && actions.includes(attrName)) {\n            specialAttribute(attrName, value, element, attrName, support, counts);\n            return;\n        }\n        return processTagCallbackFun(contextItem, value, support, attrName, element);\n    }\n    contextItem.attrName = attrName;\n    contextItem.element = element;\n    contextItem.howToSet = howToSet;\n    contextItem.isSpecial = isSpecial;\n    return processNonDynamicAttr(attrName, value, element, howToSet, counts, support, isSpecial);\n}\nexport function processNonDynamicAttr(attrName, value, element, howToSet, counts, support, isSpecial) {\n    if (isSpecial) {\n        return specialAttribute(attrName, value, element, isSpecial, support, counts);\n    }\n    howToSet(element, attrName, value);\n}\n//# sourceMappingURL=processNameValueAttribute.function.js.map","export function addSupportEventListener(support, eventName, element, callback) {\n    const elm = support.appElement;\n    // cast events that do not bubble up into ones that do\n    if (eventName === 'blur') {\n        eventName = 'focusout';\n    }\n    const replaceEventName = '_' + eventName;\n    // const replaceEventName = eventName\n    const global = support.subject.global;\n    const eventReg = global.events;\n    if (!eventReg[eventName]) {\n        const listener = function eventCallback(event) {\n            event.originalStopPropagation = event.stopPropagation;\n            bubbleEvent(event, replaceEventName, event.target);\n        };\n        eventReg[eventName] = listener;\n        elm.addEventListener(eventName, listener);\n    }\n    // attach to element but not as \"_click\" and \"_keyup\"\n    ;\n    element[replaceEventName] = callback;\n    element[eventName] = callback;\n}\nfunction bubbleEvent(event, replaceEventName, target) {\n    const callback = target[replaceEventName];\n    if (callback) {\n        let stopped = false;\n        event.stopPropagation = function () {\n            stopped = true;\n            event.originalStopPropagation.call(event);\n        };\n        callback(event);\n        if (event.defaultPrevented || stopped) {\n            return;\n        }\n    }\n    const parentNode = target.parentNode;\n    if (parentNode) {\n        bubbleEvent(event, replaceEventName, parentNode);\n    }\n}\n//# sourceMappingURL=addSupportEventListener.function.js.map","import { addSupportEventListener } from './addSupportEventListener.function.js';\nexport function processAttributeFunction(element, newAttrValue, support, attrName) {\n    const fun = function (...args) {\n        return fun.tagFunction(element, args);\n    };\n    // access to original function\n    fun.tagFunction = newAttrValue;\n    fun.support = support;\n    addSupportEventListener(support.appSupport, attrName, element, // support.appSupport.appElement as Element,\n    fun);\n}\n//# sourceMappingURL=processAttributeCallback.function.js.map","/** Looking for (class | style) followed by a period */\nexport function isSpecialAttr(attrName) {\n    if (attrName.startsWith('class.')) {\n        return 'class';\n    }\n    const specialAction = isSpecialAction(attrName);\n    if (specialAction !== false) {\n        return true;\n    }\n    if (attrName.startsWith('style.')) {\n        return 'style';\n    }\n    return false;\n}\nexport function isSpecialAction(attrName) {\n    switch (attrName) {\n        case 'autoselect':\n            return 'autoselect';\n        case 'autofocus':\n            return 'autofocus';\n        case 'oninit': // when read in compile process\n        case 'init': // when read in realtime\n            return 'oninit';\n        case 'ondestroy': // when read in compile process\n        case 'destroy': // when read in realtime\n            return 'destroy';\n    }\n    return false;\n}\n//# sourceMappingURL=isSpecialAttribute.function.js.map","import { processAttributeEmit } from '../interpolations/attributes/processAttribute.function.js';\nimport { updateNameOnlyAttrValue } from '../interpolations/attributes/updateAttribute.function.js';\nconst emptyCounts = { added: 0, removed: 0 };\nexport function processUpdateAttrContext(values, value, contextItem, ownerSupport) {\n    if (contextItem.isNameOnly) {\n        updateNameOnlyAttrValue(values, value, contextItem.value, contextItem.element, // global.element as Element,\n        ownerSupport, contextItem.howToSet, [], // Context, but we dont want to alter current\n        emptyCounts);\n        contextItem.value = value;\n        return;\n    }\n    const element = contextItem.element;\n    processAttributeEmit(value, contextItem.attrName, contextItem, element, ownerSupport, contextItem.howToSet, contextItem.isSpecial, emptyCounts);\n    contextItem.value = value;\n    return;\n}\n//# sourceMappingURL=processUpdateAttrContext.function.js.map","// taggedjs-no-compile\nimport { BasicTypes } from '../../tag/ValueTypes.enum.js';\nimport { paintContent } from '../../tag/paint.function.js';\nimport { isNoDisplayValue, processNameOnlyAttrValue } from './processAttribute.function.js';\nexport function updateNameOnlyAttrValue(values, attrValue, lastValue, element, ownerSupport, howToSet, context, counts) {\n    // check to remove previous attribute(s)\n    if (lastValue) {\n        if (isNoDisplayValue(attrValue)) {\n            element.removeAttribute(lastValue);\n            return;\n        }\n        if (typeof (lastValue) === BasicTypes.object) {\n            const isObStill = typeof (attrValue) === BasicTypes.object;\n            if (isObStill) {\n                for (const name in lastValue) {\n                    // if((attrValue as any)[name]) {\n                    if (name in attrValue) {\n                        continue;\n                    }\n                    paintContent.push(function paintContent() {\n                        element.removeAttribute(name);\n                    });\n                }\n            }\n            else {\n                for (const name in lastValue) {\n                    paintContent.push(function paintContent() {\n                        element.removeAttribute(name);\n                    });\n                }\n            }\n        }\n    }\n    processNameOnlyAttrValue(values, attrValue, element, ownerSupport, howToSet, context, counts);\n}\n//# sourceMappingURL=updateAttribute.function.js.map","// taggedjs-no-compile\nimport { specialAttribute } from './specialAttribute.js';\nimport { isFunction, isObject, isSubjectInstance } from '../../isInstance.js';\nimport { bindSubjectCallback } from './bindSubjectCallback.function.js';\nimport { BasicTypes, ValueTypes, empty } from '../../tag/ValueTypes.enum.js';\nimport { paintContent } from '../../tag/paint.function.js';\nimport { processDynamicNameValueAttribute, processNonDynamicAttr } from './processNameValueAttribute.function.js';\nimport { addOneContext, checkSimpleValueChange } from '../../tag/index.js';\nimport { processAttributeFunction } from './processAttributeCallback.function.js';\nimport { isSpecialAttr } from './isSpecialAttribute.function.js';\nimport { processUpdateAttrContext } from '../../tag/processUpdateAttrContext.function.js';\nimport { blankHandler } from '../optimizers/attachDomElements.function.js';\n/** MAIN FUNCTION. Sets attribute value, subscribes to value updates  */\nexport function processAttribute(values, attrName, element, support, howToSet, //  = howToSetInputValue\ncontext, isSpecial, counts, value) {\n    const nameVar = getTagJsVar(attrName);\n    const isNameVar = nameVar >= 0;\n    if (isNameVar) {\n        const value = values[nameVar];\n        const contextItem = addOneContext(value, context, true);\n        contextItem.isAttr = true;\n        contextItem.element = element;\n        contextItem.howToSet = howToSet;\n        contextItem.isNameOnly = true;\n        // how to process value updates\n        contextItem.handler = (newValue, newValues) => processUpdateAttrContext(newValues, newValue, contextItem, support);\n        processNameOnlyAttrValue(values, value, element, support, howToSet, context, counts);\n        return;\n    }\n    const valueVar = getTagJsVar(value);\n    if (valueVar >= 0) {\n        const value = values[valueVar];\n        const contextItem = {\n            isAttr: true,\n            element,\n            attrName: attrName,\n            checkValueChange: checkSimpleValueChange,\n            withinOwnerElement: true,\n        };\n        context.push(contextItem);\n        const isSubject = isSubjectInstance(contextItem.value);\n        if (isSubject) {\n            return processNameValueAttributeAttrSubject(attrName, contextItem, element, support, howToSet, isSpecial, counts);\n        }\n        contextItem.handler = (newValue, newValues) => processUpdateAttrContext(newValues, newValue, contextItem, support);\n        /*\n        processNameOnlyAttrValue(\n          values,\n          newValue as any,\n          element as Element,\n          support,\n          howToSet as HowToSet,\n          context,\n          counts,\n        )\n        */\n        processDynamicNameValueAttribute(attrName, value, contextItem, element, howToSet, support, counts, isSpecial);\n        contextItem.value = value;\n        return;\n    }\n    return processNonDynamicAttr(attrName, value, element, howToSet, counts, support, isSpecial);\n}\nexport function processNameOnlyAttrValue(values, attrValue, element, ownerSupport, howToSet, context, counts) {\n    if (isNoDisplayValue(attrValue)) {\n        return;\n    }\n    // process an object of attributes ${{class:'something, checked:true}}\n    if (typeof attrValue === BasicTypes.object) {\n        for (const name in attrValue) {\n            const value = attrValue[name];\n            processAttribute(values, name, element, ownerSupport, howToSet, context, isSpecialAttr(name), // only object variables are evaluated for is special attr\n            counts, value);\n        }\n        return;\n    }\n    // regular attributes\n    if (attrValue.length === 0) {\n        return; // ignore, do not set at this time\n    }\n    howToSet(element, attrValue, empty);\n}\n/** Processor for flat attributes and object attributes */\nfunction processNameValueAttributeAttrSubject(attrName, contextItem, element, support, howToSet, isSpecial, counts) {\n    if (isSpecial) {\n        paintContent.push(function paintContent() {\n            element.removeAttribute(attrName);\n        });\n    }\n    const contextValueSubject = contextItem.value;\n    if (isSubjectInstance(contextValueSubject)) {\n        contextItem.handler = blankHandler;\n        const callback = function processAttrCallback(newAttrValue) {\n            processAttributeEmit(newAttrValue, attrName, contextItem, element, support, howToSet, isSpecial, counts);\n        };\n        // 🗞️ Subscribe. Above callback called immediately since its a ValueSubject()\n        const sub = contextValueSubject.subscribe(callback);\n        // Record subscription for later unsubscribe when element destroyed\n        const global = contextItem.global;\n        const subs = global.subscriptions = global.subscriptions || [];\n        subs.push(sub);\n    }\n    processAttributeEmit(contextItem.value, attrName, contextItem, element, support, howToSet, isSpecial, counts);\n    return;\n}\nexport function processAttributeEmit(newAttrValue, attrName, subject, element, support, howToSet, isSpecial, counts) {\n    // should the function be wrapped so every time its called we re-render?\n    if (isFunction(newAttrValue)) {\n        return callbackFun(support, newAttrValue, element, attrName, isSpecial, howToSet, subject, counts);\n    }\n    return processAttributeSubjectValue(newAttrValue, element, attrName, isSpecial, howToSet, support, counts);\n}\nexport function processAttributeSubjectValue(newAttrValue, element, attrName, special, howToSet, support, counts) {\n    // process adding/removing style. class. (false means remove)\n    if (special !== false) {\n        specialAttribute(attrName, newAttrValue, element, special, // string name of special\n        support, counts);\n        return;\n    }\n    switch (newAttrValue) {\n        case undefined:\n        case false:\n        case null:\n            paintContent.push(function paintContentPush() {\n                element.removeAttribute(attrName);\n            });\n            return;\n    }\n    if (isFunction(newAttrValue)) {\n        return processAttributeFunction(element, newAttrValue, support, attrName);\n    }\n    // value is 0\n    howToSet(element, attrName, newAttrValue);\n}\nfunction callbackFun(support, newAttrValue, element, attrName, isSpecial, howToSet, subject, counts) {\n    const wrapper = support.templater.wrapper;\n    const tagJsType = wrapper?.tagJsType || wrapper?.original?.tagJsType;\n    const oneRender = tagJsType === ValueTypes.renderOnce;\n    if (!oneRender) {\n        return processTagCallbackFun(subject, newAttrValue, support, attrName, element);\n    }\n    return processAttributeSubjectValue(newAttrValue, element, attrName, isSpecial, howToSet, support, counts);\n}\nexport function processTagCallbackFun(subject, newAttrValue, support, attrName, element) {\n    const prevFun = subject.value;\n    if (prevFun && prevFun.tagFunction && prevFun.support) {\n        prevFun.tagFunction = newAttrValue;\n        prevFun.support = support;\n        return prevFun;\n    }\n    // tag has state and will need all functions wrapped to cause re-renders\n    newAttrValue = bindSubjectCallback(newAttrValue, support);\n    return processAttributeFunction(element, newAttrValue, support, attrName);\n}\nfunction getTagJsVar(attrPart) {\n    if (isObject(attrPart) && 'tagJsVar' in attrPart)\n        return attrPart.tagJsVar;\n    return -1;\n    // return (attrPart as TagVarIdNum)?.tagJsVar || -1\n}\nexport function isNoDisplayValue(attrValue) {\n    return undefined === attrValue || null === attrValue || false === attrValue;\n}\n//# sourceMappingURL=processAttribute.function.js.map","// taggedjs-no-compile\nimport { processFirstSubjectValue } from \"../../tag/update/processFirstSubjectValue.function.js\";\nimport { howToSetFirstInputValue } from \"../attributes/howToSetInputValue.function.js\";\nimport { paintAppends, paintInsertBefores } from \"../../tag/paint.function.js\";\nimport { processAttribute } from \"../attributes/processAttribute.function.js\";\nimport { addOneContext } from \"../../tag/index.js\";\nimport { isSubjectInstance } from \"../../isInstance.js\";\nimport { empty } from \"../../tag/ValueTypes.enum.js\";\nimport { updateExistingValue } from \"../../tag/update/updateExistingValue.function.js\";\nexport const blankHandler = () => undefined;\nconst someDiv = (typeof document === 'object' && document.createElement('div')); // used for content cleaning\nexport function attachDomElements(nodes, values, support, counts, // used for animation stagger computing\ncontext, depth, // used to know if dynamic variables live within parent owner tag/support\nappendTo, insertBefore, subs = []) {\n    const dom = [];\n    if (appendTo && insertBefore === undefined) {\n        insertBefore = document.createTextNode(empty);\n        paintAppends.push({\n            element: insertBefore,\n            relative: appendTo,\n        });\n        appendTo = undefined;\n    }\n    for (let index = 0; index < nodes.length; ++index) {\n        const node = nodes[index];\n        const value = node.v;\n        const isNum = !isNaN(value);\n        if (isNum) {\n            const index = context.length;\n            const value = values[index];\n            attachDynamicDom(value, index, context, support, subs, counts, depth, appendTo, insertBefore);\n            continue;\n        }\n        const newNode = {}; // DomObjectText\n        dom.push(newNode);\n        if (node.nn === 'text') {\n            attachDomText(newNode, node, appendTo, insertBefore);\n            continue;\n        }\n        // one single html element\n        const domElement = attachDomElement(newNode, node, values, support, context, counts, appendTo, insertBefore);\n        if (node.ch) {\n            newNode.ch = attachDomElements(node.ch, values, support, counts, context, depth + 1, domElement, insertBefore, subs).dom;\n        }\n    }\n    return { subs, dom, context };\n}\nfunction attachDomElement(newNode, node, values, support, context, counts, appendTo, insertBefore) {\n    const domElement = newNode.domElement = document.createElement(node.nn);\n    // attributes that may effect style, come first for performance\n    if (node.at) {\n        node.at.forEach(attr => {\n            const name = attr[0];\n            const value = attr[1];\n            const isSpecial = attr[2] || false;\n            processAttribute(values, name, domElement, support, \n            // howToSetInputValue, // maybe more performant for updates but not first renders\n            howToSetFirstInputValue, context, isSpecial, counts, value);\n        });\n    }\n    if (appendTo) {\n        paintAppends.push({\n            element: domElement,\n            relative: appendTo,\n        });\n    }\n    else {\n        paintInsertBefores.push({\n            element: domElement,\n            relative: insertBefore,\n        });\n    }\n    return domElement;\n}\nfunction attachDomText(newNode, node, owner, insertBefore) {\n    const textNode = newNode;\n    const string = textNode.tc = node.tc;\n    someDiv.innerHTML = string;\n    const domElement = textNode.domElement = document.createTextNode(someDiv.innerText);\n    if (owner) {\n        paintAppends.push({\n            element: domElement,\n            relative: owner,\n        });\n    }\n    else {\n        paintInsertBefores.push({\n            element: domElement,\n            relative: insertBefore,\n        });\n    }\n}\nfunction attachDynamicDom(value, index, context, support, subs, counts, // used for animation stagger computing\ndepth, // used to indicate if variable lives within an owner's element\nappendTo, insertBefore) {\n    const marker = document.createTextNode(empty);\n    const isWithinOwnerElement = depth > 0;\n    const contextItem = addOneContext(value, context, isWithinOwnerElement);\n    contextItem.placeholder = marker;\n    if (appendTo) {\n        paintAppends.push({\n            relative: appendTo,\n            element: marker,\n        });\n    }\n    else {\n        paintInsertBefores.push({\n            relative: insertBefore,\n            element: marker,\n        });\n    }\n    if (isSubjectInstance(value)) {\n        subs.push({\n            insertBefore: marker,\n            appendTo,\n            subject: value,\n            support, // ownerSupport,\n            counts,\n            contextItem,\n        });\n        contextItem.handler = blankHandler;\n        return;\n    }\n    // how to handle value updates\n    contextItem.handler = (newValue, _newValues, newSupport, newContextItem) => updateExistingValue(newContextItem, newValue, newSupport);\n    const global = support.subject.global;\n    global.locked = true;\n    processFirstSubjectValue(value, contextItem, support, counts, appendTo, insertBefore);\n    const global2 = support.subject.global;\n    delete global2.locked;\n    contextItem.value = value;\n    return;\n}\n//# sourceMappingURL=attachDomElements.function.js.map","import { attachDomElements } from '../interpolations/optimizers/attachDomElements.function.js';\nimport { checkSimpleValueChange } from './index.js';\nimport { getDomMeta } from './domMetaCollector.js';\nimport { ValueTypes } from './ValueTypes.enum.js';\nimport { painting } from './paint.function.js';\n/** Function that kicks off actually putting tags down as HTML elements */\nexport function buildBeforeElement(support, counts, appendTo, insertBefore) {\n    const global = support.subject.global;\n    global.oldest = support;\n    global.newest = support;\n    ++painting.locks;\n    const result = attachHtmlDomMeta(support, counts, appendTo, insertBefore);\n    global.htmlDomMeta = result.dom;\n    --painting.locks;\n    // return fragment\n    return result;\n}\nfunction attachHtmlDomMeta(support, counts, appendTo, insertBefore) {\n    const domMeta = loadDomMeta(support);\n    const thisTag = support.templater.tag;\n    const values = thisTag.values;\n    const context = [];\n    const global = support.subject.global;\n    global.context = context;\n    const result = attachDomElements(domMeta, values, support, counts, context, 0, appendTo, insertBefore);\n    return result;\n}\nfunction loadDomMeta(support) {\n    const templater = support.templater;\n    const thisTag = templater.tag; // || templater\n    if (thisTag.tagJsType === ValueTypes.dom) {\n        return thisTag.dom;\n    }\n    const strings = thisTag.strings;\n    return getDomMeta(strings, thisTag.values);\n}\nexport function addOneContext(value, context, withinOwnerElement) {\n    const contextItem = {\n        value,\n        checkValueChange: checkSimpleValueChange,\n        withinOwnerElement,\n    };\n    context.push(contextItem);\n    return contextItem;\n}\n//# sourceMappingURL=buildBeforeElement.function.js.map","// taggedjs-no-compile\nimport { htmlInterpolationToDomMeta } from '../interpolations/optimizers/htmlInterpolationToDomMeta.function.js';\nimport { replacePlaceholders } from '../interpolations/optimizers/replacePlaceholders.function.js';\nimport { restorePlaceholders } from '../interpolations/optimizers/restorePlaceholders.function.js';\nimport { isLastRunMatched } from './isLastRunMatched.function.js';\nimport { getStringsId } from './getStringsId.function.js';\nconst lastRuns = {};\n/** Converts strings & values into dom meta */\nexport function getDomMeta(strings, values) {\n    const stringId = getStringsId(strings);\n    const lastRun = lastRuns[stringId];\n    const matches = lastRun && isLastRunMatched(strings, values, lastRun);\n    if (matches) {\n        return lastRun.domMetaMap;\n    }\n    const domMeta = htmlInterpolationToDomMeta(strings, values);\n    const map = replacePlaceholders(domMeta, values.length);\n    // Restore any sanitized placeholders in text nodes\n    restorePlaceholders(map);\n    const template = {\n        interpolation: undefined,\n        string: undefined,\n        strings,\n        values,\n        domMetaMap: map,\n    };\n    lastRuns[stringId] = template;\n    return map;\n}\n//# sourceMappingURL=domMetaCollector.js.map","export function getStringsId(strings) {\n    const array = strings.map(x => x.length);\n    array.push(strings.length);\n    return Number(array.join(''));\n}\n//# sourceMappingURL=getStringsId.function.js.map","export function isLastRunMatched(strings, values, lastRun) {\n    if (lastRun) {\n        if (lastRun.strings.length === strings.length) {\n            const stringsMatch = lastRun.strings.every((string, index) => \n            // string.length === strings[index].length\n            string === strings[index]);\n            if (stringsMatch && lastRun.values.length === values.length) {\n                return true; // performance savings using the last time this component was rendered\n            }\n        }\n    }\n    return false;\n}\n//# sourceMappingURL=isLastRunMatched.function.js.map","import { variablePrefix, variableSuffix } from \"../../tag/getDomTag.function.js\";\nimport { isSpecialAttr } from \"../attributes/isSpecialAttribute.function.js\";\nconst ondoubleclick = 'ondoubleclick';\nconst fragFindAny = /(:tagvar\\d+:)/;\nconst fragReplacer = /(^:tagvar\\d+:|:tagvar\\d+:$)/g;\nconst safeVar = '__safeTagVar';\nconst regexAttr = /([:_a-zA-Z0-9\\-.]+)\\s*(?:=\\s*\"([^\"]*)\"|=\\s*(\\S+))?/g;\nconst regexTagOrg = /<\\/?([a-zA-Z0-9-]+)((?:\\s+[a-zA-Z_:][\\w:.-]*(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s\"'=<>`]+))?)+\\s*|\\s*)\\/?>/g;\n/** Run only during compile step OR when no compile step occurred at runtime */\nexport function htmlInterpolationToDomMeta(strings, values) {\n    htmlInterpolationToPlaceholders(strings, values);\n    // Parse the modified fragments\n    const htmlString = htmlInterpolationToPlaceholders(strings, values).join('');\n    const domMeta = parseHTML(htmlString);\n    return domMeta;\n}\nexport function htmlInterpolationToPlaceholders(strings, values) {\n    // Sanitize placeholders in the fragments\n    const sanitizedFragments = sanitizePlaceholders(strings);\n    // Add placeholders to the fragments\n    return addPlaceholders(sanitizedFragments, values);\n}\nfunction sanitizePlaceholders(fragments) {\n    return fragments.map(fragment => fragment.replace(fragReplacer, (match, index) => safeVar + index));\n}\nfunction addPlaceholders(strings, values) {\n    const results = strings.map((fragment, index) => {\n        if (index < values.length) {\n            return fragment + variablePrefix + index + variableSuffix;\n        }\n        return fragment;\n    });\n    balanceArrayByArrays(results, strings, values);\n    return results;\n}\nexport function parseHTML(html) {\n    const valuePositions = [];\n    const elements = [];\n    const stack = [];\n    let currentElement = null;\n    let valueIndex = -1;\n    let position = 0;\n    const regexTag = new RegExp(regexTagOrg, 'g');\n    html = preprocessTagsInComments(html);\n    while (position < html.length) {\n        const tagMatch = regexTag.exec(html);\n        if (!tagMatch) {\n            break;\n        }\n        const [fullMatch, tagName, attrString] = tagMatch;\n        const isClosingTag = fullMatch.startsWith('</');\n        const isSelfClosing = fullMatch.endsWith('/>');\n        if (position < tagMatch.index) {\n            const textContent = html.slice(position, tagMatch.index);\n            if (textContent.trim()) {\n                const textVarMatches = splitByTagVar(textContent);\n                textVarMatches.forEach(textContent => {\n                    if (textContent.startsWith(variablePrefix)) {\n                        textContent = variablePrefix + (++valueIndex) + variableSuffix;\n                    }\n                    pushTextTo(currentElement, elements, textContent);\n                });\n            }\n        }\n        position = tagMatch.index + fullMatch.length;\n        if (isClosingTag) {\n            currentElement = stack.pop() || null;\n            continue;\n        }\n        const attributes = [];\n        let attrMatch;\n        while ((attrMatch = regexAttr.exec(attrString)) !== null) {\n            const attrName = attrMatch[1] || attrMatch[3] || attrMatch[5];\n            const attrChoice = attrMatch[2] || attrMatch[4] || attrMatch[6];\n            let attrValue = attrChoice;\n            if (attrName === undefined) {\n                continue;\n            }\n            const notEmpty = attrMatch[2] !== '';\n            const noValue = attrValue === undefined && notEmpty;\n            const lowerName = attrName.toLowerCase();\n            const fixedName = lowerName.startsWith('on') ? cleanEventName(lowerName) : lowerName;\n            if (noValue) {\n                const standAloneVar = attrName.slice(0, variablePrefix.length) === variablePrefix;\n                if (standAloneVar) {\n                    const valueName = variablePrefix + (++valueIndex) + variableSuffix;\n                    valuePositions.push(['at', valueName]);\n                    attributes.push([valueName]); // the name itself is dynamic\n                    continue;\n                }\n                const startMatched = attrMatch[0].startsWith(attrName);\n                const standAloneAttr = startMatched && attrMatch[0].slice(attrName.length, attrMatch[0].length).search(/\\s+$/) >= 0;\n                if (standAloneAttr) {\n                    attributes.push([fixedName]);\n                    continue;\n                }\n                const valueName = variablePrefix + (++valueIndex) + variableSuffix;\n                attrValue = valueName;\n            }\n            if (!notEmpty) {\n                attrValue = attrMatch[2];\n            }\n            const attrSet = [fixedName, attrValue];\n            const isSpecial = isSpecialAttr(lowerName); // check original name for \"oninit\" or \"autofocus\"\n            if (isSpecial) {\n                attrSet.push(isSpecial);\n            }\n            attributes.push(attrSet);\n        }\n        const element = {\n            nn: tagName, // nodeName\n        };\n        if (attributes.length) {\n            element.at = attributes;\n        }\n        if (currentElement) {\n            if (!currentElement.ch) {\n                currentElement.ch = [];\n            }\n            currentElement.ch.push(element);\n        }\n        else {\n            elements.push(element);\n        }\n        if (!isSelfClosing) {\n            stack.push(currentElement);\n            currentElement = element;\n        }\n    }\n    if (position < html.length) {\n        const textContent = html.slice(position);\n        if (textContent.trim()) {\n            const textVarMatches = splitByTagVar(textContent);\n            textVarMatches.forEach(textContent => {\n                if (textContent.startsWith(variablePrefix)) {\n                    ++valueIndex;\n                }\n                return pushTextTo(currentElement, elements, textContent);\n            });\n        }\n    }\n    return elements;\n}\nexport function balanceArrayByArrays(results, strings, values) {\n    const diff = values.length - strings.length;\n    if (diff > 0) {\n        for (let x = diff; x > 0; --x) {\n            results.push(variablePrefix + (strings.length + x - 1) + variableSuffix);\n        }\n    }\n}\nfunction splitByTagVar(inputString) {\n    // Split the string using the regular expression, keep delimiters in the output\n    const parts = inputString.split(fragFindAny);\n    // Filter out any empty strings from the results\n    const filteredParts = parts.filter(part => part !== '');\n    return filteredParts;\n}\nfunction pushTo(currentElement, elements, textNode) {\n    if (currentElement) {\n        if (!currentElement.ch) {\n            currentElement.ch = [];\n        }\n        currentElement.ch.push(textNode);\n    }\n    else {\n        elements.push(textNode);\n    }\n}\nfunction pushTextTo(currentElement, elements, textContent) {\n    const textNode = {\n        nn: 'text', // nodeName\n        tc: postprocessTagsInComments(textContent), // textContent\n    };\n    pushTo(currentElement, elements, textNode);\n}\nconst removeCommentRegX = new RegExp('(<!--[\\\\s\\\\S]*?-->)', 'g');\nfunction preprocessTagsInComments(html) {\n    // Use a regex to find all HTML comments\n    return html.replace(removeCommentRegX, function (match) {\n        // For each comment found, replace < and > inside it\n        return match.replace(/\\[l t\\]/g, '[l&nbsp;t]').replace(/\\[g t\\]/g, '[g&nbsp;t]').replace(/</g, '[l t]').replace(/>/g, '[g t]');\n    });\n}\nfunction postprocessTagsInComments(html) {\n    // Use a regex to find all segments that look like processed comments\n    return html.replace(/(\\[l t\\]!--[\\s\\S]*?--\\[g t\\])/g, function (match) {\n        // For each processed comment found, replace *lt* and *gt* back to < and >\n        return match.replace(/\\[l t\\]/g, '<').replace(/\\[g t\\]/g, '>').replace(/\\[l&nbsp;t\\]/g, '[l t]').replace(/\\[g&nbsp;t\\]/g, '[g t]');\n    });\n}\nfunction cleanEventName(eventName) {\n    if (eventName.startsWith('on')) {\n        const couldByDblClick = eventName.length === ondoubleclick.length && eventName === ondoubleclick;\n        if (couldByDblClick) {\n            return 'dblclick';\n        }\n        return eventName.slice(2, eventName.length);\n    }\n    return eventName;\n}\n//# sourceMappingURL=htmlInterpolationToDomMeta.function.js.map","import { variableSuffix, variablePrefix } from \"../../tag/getDomTag.function.js\";\nimport { ImmutableTypes } from \"../../tag/ValueTypes.enum.js\";\nexport const safeVar = '__safeTagVar';\nexport function restorePlaceholders(elements) {\n    elements.forEach(traverseAndRestore);\n}\nconst safeReplacer = /__safeTagVar(\\d+)/g;\nfunction traverseAndRestore(element) {\n    if (element.at) {\n        element.at = element.at ? element.at.map(attr => {\n            if (attr.length === 1) {\n                return attr;\n            }\n            const [, value] = attr;\n            if (typeof value === ImmutableTypes.string && value.startsWith(safeVar)) {\n                const index = parseInt(value.replace(safeVar, ''), 10);\n                attr[1] = variablePrefix + index + variableSuffix;\n            }\n            return attr;\n        }) : [];\n    }\n    if (element.ch) {\n        const children = element.ch;\n        for (let i = 0; i < children.length; i++) {\n            const child = children[i];\n            if (child.nn === 'text') {\n                if (typeof child.tc !== ImmutableTypes.string) {\n                    return;\n                }\n                child.tc = child.tc.replace(safeReplacer, (_match, index) => variablePrefix + index + variableSuffix);\n            }\n            traverseAndRestore(child);\n        }\n        // Remove empty children array\n        if (children.length === 0) {\n            delete element.ch;\n        }\n    }\n}\n//# sourceMappingURL=restorePlaceholders.function.js.map","import { subscribeToTemplate } from '../../interpolations/subscribeToTemplate.function.js';\nimport { getHtmlSupport } from '../getSupport.function.js';\nimport { checkTagValueChange } from '../checkTagValueChange.function.js';\nimport { buildBeforeElement } from '../buildBeforeElement.function.js';\nimport { ValueTypes } from '../ValueTypes.enum.js';\n/** When first time render, adds to owner childTags\n * Used for BOTH inserts & updates to values that were something else\n * Intended use only for updates\n*/\nexport function processTag(ownerSupport, // owner\nsubject, // could be tag via result.tag\ncounts) {\n    const global = subject.global;\n    const support = global.newest;\n    support.ownerSupport = ownerSupport;\n    subject.checkValueChange = checkTagValueChange;\n    const ph = subject.placeholder;\n    const result = buildBeforeElement(support, counts, undefined, ph);\n    for (const sub of result.subs) {\n        subscribeToTemplate(sub);\n    }\n    return support;\n}\nexport function tagFakeTemplater(tag) {\n    const templater = getFakeTemplater();\n    templater.tag = tag;\n    tag.templater = templater;\n    return templater;\n}\nexport function getFakeTemplater() {\n    const fake = {\n        tagJsType: ValueTypes.templater,\n    };\n    return fake;\n}\n/** Create support for a tag component */\nexport function newSupportByTemplater(templater, ownerSupport, subject) {\n    const support = getHtmlSupport(templater, ownerSupport, ownerSupport.appSupport, subject);\n    const global = subject.global;\n    global.context = [];\n    return support;\n}\n//# sourceMappingURL=processTag.function.js.map","export function processUpdateContext(support, context) {\n    const thisTag = support.templater.tag;\n    const values = thisTag.values;\n    let index = 0;\n    const len = values.length;\n    while (index < len) {\n        processUpdateOneContext(values, index, context, support);\n        ++index;\n    }\n    return context;\n}\n/** returns boolean of did render */\nexport function processUpdateOneContext(values, // the interpolated values\nindex, context, ownerSupport) {\n    const value = values[index];\n    // is something already there?\n    const contextItem = context[index];\n    // Do not continue if the value is just the same\n    if (value === contextItem.value) {\n        return;\n    }\n    const handler = contextItem.handler;\n    handler(value, values, ownerSupport, contextItem);\n    contextItem.value = value;\n}\n//# sourceMappingURL=processUpdateContext.function.js.map","import { paint, painting } from './paint.function.js';\nimport { processUpdateContext } from './processUpdateContext.function.js';\nexport function updateSupportBy(olderSupport, newerSupport) {\n    const global = olderSupport.subject.global;\n    const context = global.context;\n    updateSupportValuesBy(olderSupport, newerSupport);\n    ++painting.locks;\n    processUpdateContext(olderSupport, context);\n    --painting.locks;\n    paint();\n}\nexport function updateSupportValuesBy(olderSupport, newerSupport) {\n    const tempTag = (newerSupport.templater.tag || newerSupport.templater);\n    const values = newerSupport.templater.values || tempTag.values;\n    const tag = olderSupport.templater.tag;\n    tag.values = values;\n}\n//# sourceMappingURL=updateSupportBy.function.js.map","import { getTemplaterResult } from '../getTemplaterResult.function.js';\nimport { checkTagValueChange } from '../checkTagValueChange.function.js';\nimport { ValueTypes } from '../ValueTypes.enum.js';\nimport { getNewGlobal } from './getNewGlobal.function.js';\nimport { PropWatches } from '../tag.js';\nimport { getSupport } from '../getSupport.function.js';\nexport function processNewArrayValue(value, ownerSupport, contextItem) {\n    const tagJsType = value.tagJsType;\n    if (tagJsType) {\n        switch (tagJsType) {\n            case ValueTypes.templater: {\n                const templater = value;\n                const tag = templater.tag;\n                processNewTag(tag, ownerSupport, contextItem);\n                break;\n            }\n            case ValueTypes.tag:\n            case ValueTypes.dom:\n                processNewTag(value, ownerSupport, contextItem);\n                break;\n        }\n    }\n    return contextItem;\n}\nfunction processNewTag(value, ownerSupport, contextItem) {\n    contextItem.checkValueChange = checkTagValueChange;\n    const tag = value;\n    let templater = tag.templater;\n    // TODO: Can this ever happen?\n    if (!templater) {\n        templater = getTemplaterResult(PropWatches.DEEP);\n        templater.tag = tag;\n        tag.templater = templater;\n    }\n    const global = contextItem.global = getNewGlobal(contextItem); // contextItem.global as SupportTagGlobal\n    const newest = global.newest = getSupport(templater, ownerSupport, ownerSupport.appSupport, contextItem);\n    global.oldest = newest;\n    return contextItem;\n}\n//# sourceMappingURL=processNewValue.function.js.map","// taggedjs-no-compile\nimport { paintAppends, paintInsertBefores } from '../paint.function.js';\nimport { processFirstSubjectValue } from './processFirstSubjectValue.function.js';\nimport { checkSimpleValueChange } from '../checkDestroyPrevious.function.js';\nimport { updateExistingValue } from './updateExistingValue.function.js';\nimport { processNewArrayValue } from './processNewValue.function.js';\nimport { compareArrayItems } from './compareArrayItems.function.js';\nexport function processTagArray(subject, value, // arry of Tag classes\nownerSupport, counts, appendTo) {\n    if (!subject.lastArray) {\n        subject.lastArray = [];\n    }\n    const lastArray = subject.lastArray;\n    let runtimeInsertBefore = subject.placeholder;\n    let removed = 0;\n    /** 🗑️ remove previous items first */\n    const filteredLast = [];\n    for (let index = 0; index < lastArray.length; ++index) {\n        const item = lastArray[index];\n        // 👁️ COMPARE & REMOVE\n        const newRemoved = compareArrayItems(item, value, index, lastArray, removed, counts);\n        if (newRemoved === 0) {\n            filteredLast.push(item);\n            continue;\n        }\n        removed = removed + newRemoved;\n        // do the same number again because it was a mid delete\n        if (newRemoved === 2) {\n            index = index - 1;\n        }\n    }\n    subject.lastArray = filteredLast;\n    // const eAppendTo = existed ? undefined : appendTo\n    const eAppendTo = appendTo; // existed ? undefined : appendTo\n    const length = value.length;\n    for (let index = 0; index < length; ++index) {\n        const newSubject = reviewArrayItem(value, index, filteredLast, ownerSupport, runtimeInsertBefore, counts, eAppendTo);\n        runtimeInsertBefore = newSubject.placeholder;\n    }\n}\nfunction reviewArrayItem(array, index, lastArray, ownerSupport, runtimeInsertBefore, // used during updates\ncounts, appendTo) {\n    const item = array[index];\n    const previous = lastArray[index];\n    if (previous) {\n        return reviewPreviousArrayItem(item, previous, lastArray, ownerSupport, index, runtimeInsertBefore, counts, appendTo);\n    }\n    return processAddTagArrayItem(item, runtimeInsertBefore, // thisInsert as any,\n    ownerSupport, counts, lastArray, appendTo);\n}\nfunction reviewPreviousArrayItem(value, itemSubject, lastArray, ownerSupport, index, runtimeInsertBefore, // used during updates\ncounts, appendTo) {\n    const couldBeSame = lastArray.length > index;\n    if (couldBeSame) {\n        updateExistingValue(itemSubject, value, ownerSupport);\n        return itemSubject;\n    }\n    const result = processAddTagArrayItem(value, runtimeInsertBefore, // thisInsert as any,\n    ownerSupport, counts, lastArray, appendTo);\n    return result;\n}\nfunction processAddTagArrayItem(value, before, // used during updates\nownerSupport, counts, lastArray, appendTo) {\n    const itemSubject = {\n        value,\n        checkValueChange: checkSimpleValueChange,\n        withinOwnerElement: false, // TODO: we need to pass down depth so we can answer this truthfully\n    };\n    counts.added = counts.added + 1; // index\n    const subPlaceholder = document.createTextNode('');\n    itemSubject.placeholder = subPlaceholder;\n    if (!appendTo) {\n        paintInsertBefores.push({\n            element: subPlaceholder,\n            relative: before,\n        });\n    }\n    processNewArrayValue(value, ownerSupport, itemSubject);\n    processFirstSubjectValue(value, itemSubject, ownerSupport, counts, appendTo);\n    // after processing\n    itemSubject.value = value;\n    // Added to previous array\n    lastArray.push(itemSubject);\n    if (appendTo) {\n        paintAppends.push({\n            element: subPlaceholder,\n            relative: appendTo,\n        });\n    }\n    return itemSubject;\n}\n//# sourceMappingURL=processTagArray.js.map","import { getFakeTemplater, newSupportByTemplater, processTag } from './processTag.function.js';\nimport { processNowRegularValue } from './processRegularValue.function.js';\nimport { processReplacementComponent } from './processFirstSubjectComponent.function.js';\nimport { updateExistingTagComponent } from './updateExistingTagComponent.function.js';\nimport { BasicTypes, ValueTypes } from '../ValueTypes.enum.js';\nimport { updateSupportBy } from '../updateSupportBy.function.js';\nimport { isArray, isTagComponent } from '../../isInstance.js';\nimport { getNewGlobal } from './getNewGlobal.function.js';\nimport { processTagArray } from './processTagArray.js';\nimport { getSupport } from '../getSupport.function.js';\nconst fooCounts = { added: 0, removed: 0 };\n/** Used for all tag value updates. Determines if value changed since last render */\nexport function updateExistingValue(contextItem, newValue, // newValue\nownerSupport) {\n    // Do not continue if the value is just the same\n    if (newValue === contextItem.value) {\n        return;\n    }\n    // Have the context check itself (avoid having to detect old value)\n    const ignoreOrDestroyed = contextItem.checkValueChange(newValue, contextItem);\n    // ignore\n    if (ignoreOrDestroyed === -1) {\n        return; // do nothing\n    }\n    // is new value a tag?\n    const tagJsType = newValue && newValue.tagJsType;\n    if (tagJsType) {\n        if (tagJsType === ValueTypes.renderOnce) {\n            return;\n        }\n        tryUpdateToTag(contextItem, newValue, ownerSupport);\n        return;\n    }\n    if (isArray(newValue)) {\n        processTagArray(contextItem, newValue, ownerSupport, { added: 0, removed: 0 });\n        return;\n    }\n    if (typeof (newValue) === BasicTypes.function) {\n        contextItem.value = newValue; // do not render functions that are not explicity defined as tag html processing\n        return;\n    }\n    if (ignoreOrDestroyed) {\n        processNowRegularValue(newValue, contextItem);\n    }\n}\nfunction updateToTag(value, contextItem, ownerSupport) {\n    const tag = value;\n    let templater = tag.templater;\n    if (!templater) {\n        templater = getFakeTemplater();\n        tag.templater = templater;\n        templater.tag = tag;\n    }\n    const nowGlobal = (contextItem.global ? contextItem.global : getNewGlobal(contextItem));\n    nowGlobal.newest = newSupportByTemplater(templater, ownerSupport, contextItem);\n    processTag(ownerSupport, contextItem, fooCounts);\n}\nfunction handleStillTag(lastSupport, subject, value, ownerSupport) {\n    const templater = value.templater || value;\n    const valueSupport = getSupport(templater, ownerSupport, ownerSupport.appSupport, subject);\n    const lastSubject = lastSupport.subject;\n    const newGlobal = lastSubject.global;\n    const oldest = newGlobal.oldest;\n    updateSupportBy(oldest, valueSupport);\n}\nexport function prepareUpdateToComponent(templater, contextItem, ownerSupport) {\n    const global = contextItem.global;\n    // When last value was not a component\n    if (!global.newest) {\n        processReplacementComponent(templater, contextItem, ownerSupport, { added: 0, removed: 0 });\n        return;\n    }\n    const support = getSupport(templater, ownerSupport, ownerSupport.appSupport, contextItem);\n    updateExistingTagComponent(ownerSupport, support, // latest value\n    contextItem);\n}\nexport function updateContextItemBySupport(support, contextItem, value, ownerSupport) {\n    if (typeof (value) === BasicTypes.function) {\n        return;\n    }\n    handleStillTag(support, contextItem, value, ownerSupport);\n    return;\n}\n/** result is an indication to ignore further processing but that does not seem in use anymore */\nexport function tryUpdateToTag(contextItem, newValue, // newValue\nownerSupport) {\n    const tagJsType = newValue.tagJsType;\n    const isComp = isTagComponent(newValue);\n    if (isComp) {\n        if (contextItem.global === undefined) {\n            getNewGlobal(contextItem);\n        }\n        prepareUpdateToComponent(newValue, contextItem, ownerSupport);\n        return true;\n    }\n    // detect if previous value was a tag\n    const global = contextItem.global;\n    if (global) {\n        // its html/dom based tag\n        const support = global.newest;\n        if (support) {\n            updateContextItemBySupport(support, contextItem, newValue, ownerSupport);\n            return true;\n        }\n    }\n    switch (tagJsType) {\n        case ValueTypes.templater:\n            processTag(ownerSupport, contextItem, fooCounts);\n            return true;\n        // when value was not a Tag before\n        case ValueTypes.tag:\n        case ValueTypes.dom: {\n            updateToTag(newValue, contextItem, ownerSupport);\n            return true;\n        }\n    }\n    return false;\n}\n//# sourceMappingURL=updateExistingValue.function.js.map","import { deepCompareDepth, hasSupportChanged, shallowCompareDepth } from '../hasSupportChanged.function.js';\nimport { processReplacementComponent } from './processFirstSubjectComponent.function.js';\nimport { castProps, isSkipPropValue } from '../../alterProp.function.js';\nimport { renderSupport } from '../render/renderSupport.function.js';\nimport { BasicTypes, ValueTypes } from '../ValueTypes.enum.js';\nimport { destroySupport } from '../destroySupport.function.js';\nimport { getNewGlobal } from './getNewGlobal.function.js';\nimport { isLikeTags } from '../isLikeTags.function.js';\nimport { isArray } from '../../isInstance.js';\nimport { PropWatches } from '../tag.js';\nexport function updateExistingTagComponent(ownerSupport, support, // lastest\nsubject) {\n    const global = subject.global;\n    const lastSupport = global.newest;\n    const oldWrapper = lastSupport.templater.wrapper;\n    const newWrapper = support.templater.wrapper;\n    let isSameTag = false;\n    const tagJsType = support.templater.tagJsType;\n    const skipComparing = ValueTypes.stateRender === tagJsType || ValueTypes.renderOnce === tagJsType;\n    if (skipComparing) {\n        isSameTag = support.templater.tagJsType === ValueTypes.renderOnce || isLikeTags(lastSupport, support);\n    }\n    else if (oldWrapper && newWrapper) {\n        const oldFunction = oldWrapper.original;\n        const newFunction = newWrapper.original;\n        // string compare both functions\n        isSameTag = oldFunction === newFunction;\n    }\n    const templater = support.templater;\n    if (!isSameTag) {\n        swapTags(subject, templater, ownerSupport);\n        return;\n    }\n    const hasChanged = skipComparing || hasSupportChanged(lastSupport, templater);\n    // everyhing has matched, no display needs updating.\n    if (!hasChanged) {\n        const maxDepth = templater.propWatch === PropWatches.DEEP ? deepCompareDepth : shallowCompareDepth;\n        syncSupports(templater, support, lastSupport, ownerSupport, maxDepth);\n        return;\n    }\n    if (global.locked) {\n        global.blocked.push(support);\n        return;\n    }\n    renderSupport(support);\n    return;\n}\nexport function syncFunctionProps(newSupport, lastSupport, ownerSupport, newPropsArray, // templater.props\nmaxDepth, depth = -1) {\n    const global = lastSupport.subject.global;\n    const newest = global.newest;\n    if (!newest) {\n        const castedProps = castProps(newPropsArray, newSupport, depth);\n        newPropsArray.push(...castedProps);\n        const propsConfig = newSupport.propsConfig;\n        propsConfig.castProps = castedProps;\n        return newPropsArray;\n    }\n    lastSupport = newest || lastSupport;\n    const priorPropConfig = lastSupport.propsConfig;\n    const priorPropsArray = priorPropConfig.castProps;\n    const newArray = [];\n    for (let index = 0; index < newPropsArray.length; ++index) {\n        const prop = newPropsArray[index];\n        const priorProp = priorPropsArray[index];\n        const newValue = syncPriorPropFunction(priorProp, prop, newSupport, ownerSupport, depth + 1, maxDepth);\n        newArray.push(newValue);\n    }\n    const newPropsConfig = newSupport.propsConfig;\n    newPropsConfig.castProps = newArray;\n    return newArray;\n}\nfunction syncPriorPropFunction(priorProp, prop, newSupport, ownerSupport, maxDepth, depth) {\n    if (priorProp === undefined) {\n        return prop;\n    }\n    if (typeof (priorProp) === BasicTypes.function) {\n        // the prop i am receiving, is already being monitored/controlled by another parent\n        if (prop.mem) {\n            priorProp.mem = prop.mem;\n            return prop;\n        }\n        priorProp.mem = prop;\n        return priorProp;\n    }\n    // prevent infinite recursion\n    if (depth === maxDepth) {\n        return prop;\n    }\n    if (isSkipPropValue(prop)) {\n        return prop; // no children to crawl through\n    }\n    if (isArray(prop)) {\n        return updateExistingArray(prop, priorProp, newSupport, ownerSupport, depth);\n    }\n    return updateExistingObject(prop, priorProp, newSupport, ownerSupport, depth, maxDepth);\n}\nfunction updateExistingObject(prop, priorProp, newSupport, ownerSupport, depth, maxDepth) {\n    const keys = Object.keys(prop);\n    for (const name of keys) {\n        const subValue = prop[name];\n        const oldProp = priorProp[name];\n        const result = syncPriorPropFunction(oldProp, subValue, newSupport, ownerSupport, maxDepth, depth + 1);\n        if (subValue === result) {\n            continue;\n        }\n        const hasSetter = Object.getOwnPropertyDescriptor(prop, name)?.set;\n        if (hasSetter) {\n            continue;\n        }\n        prop[name] = result;\n    }\n    return prop;\n}\nfunction updateExistingArray(prop, priorProp, newSupport, ownerSupport, depth) {\n    for (let index = prop.length - 1; index >= 0; --index) {\n        const x = prop[index];\n        const oldProp = priorProp[index];\n        prop[index] = syncPriorPropFunction(oldProp, x, newSupport, ownerSupport, depth + 1, index);\n    }\n    return prop;\n}\nexport function moveProviders(lastSupport, newSupport) {\n    const global = lastSupport.subject.global;\n    let pIndex = -1;\n    const providers = global.providers = global.providers || [];\n    const pLen = providers.length - 1;\n    while (pIndex++ < pLen) {\n        const provider = providers[pIndex];\n        let index = -1;\n        const pcLen = provider.children.length - 1;\n        while (index++ < pcLen) {\n            const child = provider.children[index];\n            const wasSameGlobals = global === child.subject.global;\n            if (wasSameGlobals) {\n                provider.children.splice(index, 1);\n                provider.children.push(newSupport);\n                return;\n            }\n        }\n    }\n}\nfunction syncSupports(templater, support, lastSupport, ownerSupport, maxDepth) {\n    // update function refs to use latest references\n    const newProps = templater.props;\n    const castedProps = syncFunctionProps(support, lastSupport, ownerSupport, newProps, maxDepth);\n    const propsConfig = support.propsConfig;\n    // When new support actually makes call to real function, use these pre casted props\n    propsConfig.castProps = castedProps;\n    const lastPropsConfig = lastSupport.propsConfig;\n    // update support to think it has different cloned props\n    lastPropsConfig.latest = propsConfig.latest;\n    return lastSupport; // its the same tag component  \n}\n/** Was tag, will be tag */\nfunction swapTags(subject, templater, // new tag\nownerSupport) {\n    const global = subject.global;\n    const oldestSupport = global.oldest;\n    destroySupport(oldestSupport);\n    getNewGlobal(subject);\n    const newSupport = processReplacementComponent(templater, subject, ownerSupport, { added: 0, removed: 0 });\n    return newSupport;\n}\n//# sourceMappingURL=updateExistingTagComponent.function.js.map","import { getNewGlobal } from './update/getNewGlobal.function.js';\nimport { destroySupport } from './destroySupport.function.js';\nimport { isStaticTag } from '../isInstance.js';\nimport { isLikeTags } from './isLikeTags.function.js';\nimport { tryUpdateToTag } from './update/updateExistingValue.function.js';\nexport function checkTagValueChange(newValue, contextItem) {\n    const global = contextItem.global;\n    const lastSupport = global?.newest;\n    const isValueTag = isStaticTag(newValue);\n    const newTag = newValue;\n    if (isValueTag) {\n        // its a different tag now\n        const likeTags = isLikeTags(newTag, lastSupport);\n        if (!likeTags) {\n            destroySupport(lastSupport);\n            getNewGlobal(contextItem);\n            return 7; // 'tag-swap'\n        }\n        return false;\n    }\n    const isTag = newValue?.tagJsType;\n    if (isTag) {\n        const support = global.newest;\n        const ownerSupport = support.ownerSupport;\n        const result = tryUpdateToTag(contextItem, newValue, ownerSupport);\n        return result === true ? -1 : false;\n    }\n    // destroy old component, value is not a component\n    destroySupport(lastSupport);\n    delete contextItem.global;\n    contextItem.renderCount = 0;\n    return 8; // 'no-longer-tag'\n}\n//# sourceMappingURL=checkTagValueChange.function.js.map","import { StateMismatchError } from '../errors.js';\nexport function checkStateMismatch(config, support) {\n    const rearray = config.rearray;\n    if (rearray.length && rearray.length !== config.stateArray.length) {\n        throwStateMismatch(rearray, support, config);\n    }\n}\nconst hint = 'State tracking requires same number of state calls on every render. This error typically occurs when a state call is only reachable behind a condition. Also, wrapping tags that have state, with tag(), often helps when tag is only reachable by a condition.';\nfunction throwStateMismatch(rearray, support, config) {\n    const message = `Saved states between renders are inconsistent. Expected ${rearray.length} states got ${config.stateArray.length}.`;\n    const wrapper = support.templater?.wrapper;\n    let tagFunction = wrapper;\n    if (wrapper?.original) {\n        tagFunction = wrapper.original;\n    }\n    else if (wrapper?.original) {\n        tagFunction = wrapper.original;\n    }\n    const details = {\n        oldStates: config.stateArray,\n        newStates: config.rearray,\n        tagFunction,\n        templater: support.templater,\n    };\n    const error = new StateMismatchError(message, details);\n    console.error(hint, details);\n    throw error;\n}\n//# sourceMappingURL=checkStateMismatch.function.js.map","import { setUseMemory } from '../state/setUseMemory.object.js';\nimport { checkStateMismatch } from './checkStateMismatch.function.js';\n/** Compares states of previous renders\n * @property support - The workflow that supports a single tag\n * @property ownerSupport - undefined when \"support\" is the app element\n */\nexport function runAfterRender(support, ownerSupport) {\n    const subject = support.subject;\n    ++subject.renderCount;\n    const config = setUseMemory.stateConfig;\n    delete config.support;\n    support.state = config.stateArray;\n    // support.states = config.states\n    setUseMemory.tagClosed$.next(ownerSupport);\n    checkStateMismatch(config, support);\n    subject.global.newest = support;\n}\n//# sourceMappingURL=afterRender.function.js.map","import { executeWrap } from '../executeWrap.function.js';\nimport { ValueTypes } from '../ValueTypes.enum.js';\nimport { runAfterRender } from '../afterRender.function.js';\nimport { initState, reState } from '../../state/state.utils.js';\nimport { setUseMemory } from '../../state/setUseMemory.object.js';\nimport { getSupport } from '../getSupport.function.js';\nexport function renderTagOnly(newSupport, prevSupport, // causes restate\nsubject, ownerSupport) {\n    const global = subject.global;\n    const oldRenderCount = subject.renderCount;\n    const prevState = prevSupport?.state;\n    const config = setUseMemory.stateConfig;\n    if (prevState) {\n        const prevStates = prevSupport.states;\n        config.prevSupport = prevSupport;\n        reState(newSupport, setUseMemory.stateConfig, prevState, prevStates);\n    }\n    else {\n        initState(newSupport, config);\n    }\n    const templater = newSupport.templater;\n    let reSupport;\n    // NEW TAG CREATED HERE\n    if (templater.tagJsType === ValueTypes.stateRender) {\n        const result = templater; // .wrapper as any// || {original: templater} as any\n        // TODO: Not sure if useSupport could be replaced by just using \"newSupport\"\n        const useSupport = getSupport(templater, ownerSupport, newSupport.appSupport, // ownerSupport.appSupport as AnySupport,\n        subject);\n        reSupport = executeWrap(templater, result, useSupport);\n        reSupport.states = newSupport.states;\n    }\n    else {\n        // functions wrapped in tag()\n        const wrapper = templater.wrapper;\n        // calls the function returned from getTagWrap()\n        reSupport = wrapper(newSupport, subject, prevSupport);\n        reSupport.states = newSupport.states;\n    }\n    runAfterRender(reSupport, ownerSupport);\n    // When we rendered, only 1 render should have taken place OTHERWISE rendering caused another render and that is the latest instead\n    // TODO: below most likely not needed\n    if (subject.renderCount > oldRenderCount + 1) {\n        return global.newest;\n    }\n    return reSupport;\n}\n//# sourceMappingURL=renderTagOnly.function.js.map","import { subscribeToTemplate } from '../../interpolations/subscribeToTemplate.function.js';\nimport { checkTagValueChange } from '../checkTagValueChange.function.js';\nimport { buildBeforeElement } from '../buildBeforeElement.function.js';\nimport { paintAppends, paintInsertBefores } from '../paint.function.js';\nimport { newSupportByTemplater } from './processTag.function.js';\nexport function processNewSubjectTag(templater, ownerSupport, // owner\nsubject, // could be tag via result.tag\ncounts, appendTo, insertBefore) {\n    subject.checkValueChange = checkTagValueChange;\n    const support = newSupportByTemplater(templater, ownerSupport, subject);\n    support.ownerSupport = ownerSupport;\n    const result = buildBeforeElement(support, counts, appendTo, appendTo ? undefined : insertBefore);\n    for (const dom of result.dom) {\n        if (dom.marker) {\n            if (appendTo) {\n                paintAppends.push({\n                    element: dom.marker,\n                    relative: appendTo, // ph.parentNode as Element,\n                });\n            }\n            else {\n                paintInsertBefores.push({\n                    element: dom.marker,\n                    relative: insertBefore, // ph.parentNode as Element,\n                });\n            }\n        }\n        if (dom.domElement) {\n            /*\n            paintAppends.push({\n              element: dom.domElement,\n              relative: appendTo as Element, // ph.parentNode as Element,\n            })\n            */\n            if (appendTo) {\n                paintAppends.push({\n                    element: dom.domElement,\n                    relative: appendTo, // ph.parentNode as Element,\n                });\n            }\n            else {\n                paintInsertBefores.push({\n                    element: dom.domElement,\n                    relative: insertBefore, // ph.parentNode as Element,\n                });\n            }\n        }\n    }\n    let index = -1;\n    const length = result.subs.length - 1;\n    //++painting.locks\n    while (index++ < length) {\n        const sub = result.subs[index];\n        subscribeToTemplate(sub);\n    }\n    return support;\n}\n//# sourceMappingURL=processNewSubjectTag.function.js.map","import { checkArrayValueChange, checkSimpleValueChange } from '../checkDestroyPrevious.function.js';\nimport { checkTagValueChange } from '../checkTagValueChange.function.js';\nimport { processFirstSubjectComponent, processReplacementComponent } from './processFirstSubjectComponent.function.js';\nimport { newSupportByTemplater, processTag, tagFakeTemplater } from './processTag.function.js';\nimport { castTextValue, updateBeforeTemplate } from '../../updateBeforeTemplate.function.js';\nimport { oneRenderToSupport } from './oneRenderToSupport.function.js';\nimport { renderTagOnly } from '../render/renderTagOnly.function.js';\nimport { isArray, isSubjectInstance } from '../../isInstance.js';\nimport { ValueTypes } from '../ValueTypes.enum.js';\nimport { getNewGlobal } from './getNewGlobal.function.js';\nimport { processTagArray } from './processTagArray.js';\nimport { processNewSubjectTag } from './processNewSubjectTag.function.js';\nexport function processFirstSubjectValue(value, contextItem, // could be tag via result.tag\nownerSupport, // owningSupport\ncounts, // {added:0, removed:0}\nappendTo, insertBefore) {\n    const tagJsType = value?.tagJsType;\n    if (tagJsType) {\n        return processFirstTagValue(tagJsType, contextItem, value, ownerSupport, counts, appendTo, insertBefore);\n    }\n    if (isArray(value)) {\n        processTagArray(contextItem, value, ownerSupport, counts, appendTo);\n        contextItem.checkValueChange = checkArrayValueChange;\n        return;\n    }\n    if (isSubjectInstance(value)) {\n        return; // will be subscribed to for value\n    }\n    processFirstRegularValue(value, contextItem, contextItem.placeholder);\n}\nfunction processFirstRegularValue(value, subject, // could be tag via subject.tag\ninsertBefore) {\n    const castedValue = castTextValue(value);\n    const clone = updateBeforeTemplate(castedValue, insertBefore);\n    subject.simpleValueElm = clone;\n    subject.checkValueChange = checkSimpleValueChange;\n}\nfunction processFirstTagValue(tagJsType, contextItem, value, ownerSupport, // owningSupport\ncounts, // {added:0, removed:0}\nappendTo, insertBefore) {\n    switch (tagJsType) {\n        // TODO: Do we ever get in here? because dom, tag, and component are covered below\n        case ValueTypes.templater:\n            contextItem.checkValueChange = checkTagValueChange;\n            if (appendTo) {\n                return processNewSubjectTag(value, ownerSupport, contextItem, counts, appendTo, insertBefore);\n            }\n            return processTag(ownerSupport, contextItem, counts);\n        case ValueTypes.dom:\n        case ValueTypes.tag: {\n            contextItem.checkValueChange = checkTagValueChange;\n            const tag = value;\n            let templater = tag.templater;\n            if (!templater) {\n                templater = tagFakeTemplater(tag); // TODO: most likely a not needed performance hit\n            }\n            const global = getNewGlobal(contextItem);\n            if (appendTo) {\n                return processNewSubjectTag(templater, ownerSupport, contextItem, counts, appendTo, insertBefore);\n            }\n            global.newest = newSupportByTemplater(templater, ownerSupport, contextItem);\n            contextItem.checkValueChange = checkTagValueChange;\n            return processTag(ownerSupport, contextItem, counts);\n        }\n        case ValueTypes.stateRender:\n        case ValueTypes.tagComponent: {\n            getNewGlobal(contextItem);\n            contextItem.checkValueChange = checkTagValueChange;\n            if (appendTo) {\n                const processResult = processFirstSubjectComponent(value, contextItem, ownerSupport, counts, appendTo);\n                return processResult;\n            }\n            const processResult = processReplacementComponent(value, contextItem, ownerSupport, counts);\n            return processResult;\n        }\n        case ValueTypes.renderOnce: {\n            getNewGlobal(contextItem);\n            const support = oneRenderToSupport(value, contextItem, ownerSupport);\n            renderTagOnly(support, undefined, contextItem, ownerSupport);\n            const result = processNewSubjectTag(support.templater, ownerSupport, contextItem, counts, appendTo, insertBefore);\n            contextItem.checkValueChange = checkTagValueChange;\n            return result;\n        }\n    }\n}\n//# sourceMappingURL=processFirstSubjectValue.function.js.map","import { processFirstTagResult, processReplaceTagResult } from './processTagResult.function.js';\nimport { renderWithSupport } from '../render/renderWithSupport.function.js';\nimport { ValueTypes } from '../ValueTypes.enum.js';\nimport { getCastedProps } from '../getTagWrap.function.js';\nimport { getSupport } from '../getSupport.function.js';\nexport function processReplacementComponent(templater, subject, ownerSupport, counts) {\n    // TODO: This below check not needed in production mode\n    // validateTemplater(templater)\n    const newSupport = getSupport(templater, ownerSupport, ownerSupport.appSupport, subject);\n    const newPropsConfig = newSupport.propsConfig;\n    if (newPropsConfig) {\n        const castedProps = templater.tagJsType !== ValueTypes.tagComponent ? [] : getCastedProps(templater, newSupport);\n        newPropsConfig.castProps = castedProps;\n    }\n    const global = subject.global;\n    const { support } = renderWithSupport(newSupport, global.newest, // existing tag\n    subject, ownerSupport);\n    processReplaceTagResult(support, counts, subject);\n    return support;\n}\nexport function processFirstSubjectComponent(templater, subject, ownerSupport, counts, appendTo) {\n    // TODO: This below check not needed in production mode\n    // validateTemplater(templater)\n    const newSupport = getSupport(templater, ownerSupport, ownerSupport.appSupport, subject);\n    const newPropsConfig = newSupport.propsConfig;\n    if (newPropsConfig) {\n        const castedProps = templater.tagJsType !== ValueTypes.tagComponent ? [] : getCastedProps(templater, newSupport);\n        newPropsConfig.castProps = castedProps;\n    }\n    const global = subject.global;\n    const { support } = renderWithSupport(newSupport, global.newest, // existing tag   \n    subject, ownerSupport);\n    processFirstTagResult(support, counts, appendTo);\n    return support;\n}\n//# sourceMappingURL=processFirstSubjectComponent.function.js.map","import { subscribeToTemplate } from '../../interpolations/subscribeToTemplate.function.js';\nimport { buildBeforeElement } from '../buildBeforeElement.function.js';\nimport { paintAppends } from '../paint.function.js';\nimport { checkTagValueChange } from '../index.js';\nexport function processReplaceTagResult(support, counts, contextItem) {\n    contextItem.checkValueChange = checkTagValueChange;\n    const ph = contextItem.placeholder;\n    const result = buildBeforeElement(support, counts, undefined, // element for append child\n    ph);\n    const subs = result.subs;\n    for (const sub of subs) {\n        subscribeToTemplate(sub);\n    }\n    return support;\n}\nexport function processFirstTagResult(support, counts, appendTo) {\n    let appendIndex = paintAppends.length;\n    const result = buildBeforeElement(support, counts, appendTo, undefined);\n    for (const dom of result.dom) {\n        if (dom.domElement) {\n            paintAppends.splice(appendIndex++, 0, {\n                element: dom.domElement,\n                relative: appendTo,\n            });\n        }\n        if (dom.marker) {\n            paintAppends.splice(appendIndex++, 0, {\n                element: dom.marker,\n                relative: appendTo,\n            });\n        }\n    }\n    const subs = result.subs;\n    for (const sub of subs) {\n        subscribeToTemplate(sub);\n    }\n    return support;\n}\n//# sourceMappingURL=processTagResult.function.js.map","import { getTemplaterResult } from '../getTemplaterResult.function.js';\nimport { newSupportByTemplater } from './processTag.function.js';\nimport { PropWatches } from '../tag.js';\nexport function oneRenderToSupport(wrapper, subject, ownerSupport) {\n    const templater = getTemplaterResult(PropWatches.DEEP);\n    templater.tagJsType = wrapper.tagJsType;\n    const support = newSupportByTemplater(templater, ownerSupport, subject);\n    let tag;\n    function wrap() {\n        templater.tag = tag || wrapper();\n        return support;\n    }\n    templater.wrapper = wrap;\n    wrap.tagJsType = wrapper.tagJsType;\n    wrap.original = wrapper.original || wrapper;\n    return support;\n}\n//# sourceMappingURL=oneRenderToSupport.function.js.map","import { processFirstSubjectValue } from '../tag/update/processFirstSubjectValue.function.js';\nimport { processSubUpdate } from './processSubscriptionUpdate.function.js';\nimport { setUseMemory } from '../state/setUseMemory.object.js';\nimport { paint } from '../tag/paint.function.js';\n/** Used for when dynamic value is truly something to subscribe to */\nexport function subscribeToTemplate({ subject, support, counts, contextItem, appendTo, }) {\n    let onValue = function onSubValue(value) {\n        processFirstSubjectValue(value, contextItem, support, { ...counts }, syncRun ? appendTo : undefined);\n        if (!syncRun && !setUseMemory.stateConfig.support) {\n            paint();\n        }\n        // from now on just run update\n        onValue = function subscriptionUpdate(value) {\n            processSubUpdate(value, contextItem, support);\n        };\n    };\n    // onValue mutates so function below calls original and mutation\n    const callback = function subValueProcessor(value) {\n        onValue(value);\n    };\n    let syncRun = true;\n    const sub = subject.subscribe(callback);\n    contextItem.subject = subject;\n    syncRun = false;\n    const global = support.subject.global;\n    const subs = global.subscriptions = global.subscriptions || [];\n    subs.push(sub);\n    // contextItem.handler = blankHandler\n}\n//# sourceMappingURL=subscribeToTemplate.function.js.map","import { updateExistingValue } from '../tag/update/updateExistingValue.function.js';\nimport { setUseMemory } from '../state/setUseMemory.object.js';\nimport { paint } from '../tag/paint.function.js';\nexport function processSubUpdate(value, contextItem, support) {\n    if (value === contextItem.value) {\n        return; // same value emitted\n    }\n    updateExistingValue(contextItem, value, support);\n    if (!setUseMemory.stateConfig.support) {\n        paint();\n    }\n    return;\n}\n//# sourceMappingURL=processSubscriptionUpdate.function.js.map","import { getChildTagsToSoftDestroy } from '../getChildTagsToDestroy.function.js';\nimport { getNewGlobal } from '../update/getNewGlobal.function.js';\nimport { smartRemoveKids } from '../smartRemoveKids.function.js';\n/** used when a tag swaps content returned */\nexport function softDestroySupport(lastSupport) {\n    const global = lastSupport.subject.global;\n    const { subs, tags } = getChildTagsToSoftDestroy(global.context);\n    softDestroyOne(lastSupport);\n    for (const child of tags) {\n        softDestroyOne(child);\n    }\n    const mySubs = global.subscriptions;\n    if (mySubs) {\n        subs.forEach(sub => sub.unsubscribe());\n    }\n    getNewGlobal(lastSupport.subject);\n}\nfunction softDestroyOne(child) {\n    const subject = child.subject;\n    const global = subject.global;\n    if (global.deleted === true) {\n        return;\n    }\n    global.deleted = true; // the children are truly destroyed but the main support will be swapped\n    subject.renderCount = 0; // TODO: most likely can be removed\n    smartRemoveKids(child, []);\n}\n//# sourceMappingURL=softDestroySupport.function.js.map","import { moveProviders } from '../update/updateExistingTagComponent.function.js';\nimport { softDestroySupport } from './softDestroySupport.function.js';\nimport { renderTagOnly } from './renderTagOnly.function.js';\nimport { isLikeTags } from '../isLikeTags.function.js';\nimport { ValueTypes } from '../ValueTypes.enum.js';\n/** TODO: This seems to support both new and updates and should be separated? */\nexport function renderWithSupport(newSupport, lastSupport, // previous\nsubject, // events & memory\nownerSupport) {\n    const lastTemplater = lastSupport?.templater;\n    const lastTag = lastTemplater?.tag;\n    const reSupport = renderTagOnly(newSupport, lastSupport, subject, ownerSupport);\n    const isLikeTag = !lastSupport || isLikeTags(lastSupport, reSupport);\n    if (!isLikeTag) {\n        moveProviders(lastSupport, reSupport);\n        softDestroySupport(lastSupport);\n        const global = reSupport.subject.global;\n        global.oldest = reSupport;\n        global.newest = reSupport;\n    }\n    else if (lastSupport) {\n        const tag = lastSupport.templater.tag;\n        if (tag && subject.renderCount > 0) {\n            checkTagSoftDestroy(tag, lastSupport, lastTag);\n        }\n    }\n    const lastOwnerSupport = lastSupport?.ownerSupport;\n    reSupport.ownerSupport = (ownerSupport || lastOwnerSupport);\n    return { support: reSupport, wasLikeTags: isLikeTag };\n}\nfunction checkTagSoftDestroy(tag, lastSupport, lastTag) {\n    if (tag.tagJsType === ValueTypes.dom) {\n        const lastDom = lastTag?.dom;\n        const newDom = tag.dom;\n        if (lastDom !== newDom) {\n            softDestroySupport(lastSupport);\n        }\n        return;\n    }\n    if (lastTag) {\n        const lastStrings = lastTag.strings;\n        if (lastStrings) {\n            const oldLength = lastStrings?.length;\n            const newLength = tag.strings.length;\n            if (oldLength !== newLength) {\n                softDestroySupport(lastSupport);\n            }\n        }\n    }\n}\n//# sourceMappingURL=renderWithSupport.function.js.map","import { renderWithSupport } from './renderWithSupport.function.js';\nimport { processTag } from '../update/processTag.function.js';\nimport { updateSupportBy } from '../updateSupportBy.function.js';\nconst fooCounts = { added: 0, removed: 0 };\n// TODO: This function is being called for 1st time renders WHEN renderCount === 1\nexport function renderExistingReadyTag(lastSupport, newSupport, // new to be rendered\nownerSupport, // ownerSupport\nsubject) {\n    const global = subject.global;\n    const { support, wasLikeTags } = renderWithSupport(newSupport, lastSupport, // renderCount <= 0 ? undefined : lastSupport\n    subject, ownerSupport);\n    if (wasLikeTags) {\n        updateSupportBy(global.oldest, support);\n        return support;\n    }\n    processTag(ownerSupport, subject, fooCounts);\n    return support;\n}\n//# sourceMappingURL=renderExistingTag.function.js.map","import { getSupportInCycle } from '../tag/getSupportInCycle.function.js';\nimport { setUseMemory } from './setUseMemory.object.js';\nimport { SyncCallbackError } from '../errors.js';\nimport { createTrigger } from './callback.function.js';\nexport const callbackMaker = () => {\n    const support = getSupportInCycle();\n    // callback as typeof innerCallback\n    if (!support) {\n        throw syncError;\n    }\n    const oldState = setUseMemory.stateConfig; // .stateArray\n    // oldState.support = support // TODO: should not be need and already set\n    return function triggerMaker(callback) {\n        return createTrigger(support, oldState, callback);\n    };\n};\nexport const syncError = new SyncCallbackError('callback() was called outside of synchronous rendering. Use `callback = callbackMaker()` to create a callback that could be called out of sync with rendering');\n//# sourceMappingURL=callbackMaker.function.js.map","import { state } from './state.function.js';\n/** runs a callback function one time and never again. Same as calling state(() => ...) */\nexport function onInit(callback) {\n    state(callback);\n}\n//# sourceMappingURL=onInit.js.map","import { setUseMemory } from '../state/index.js';\nexport function getSupportInCycle() {\n    return setUseMemory.stateConfig.support;\n}\n//# sourceMappingURL=getSupportInCycle.function.js.map","// taggedjs-no-compile\nimport { ValueTypes } from './ValueTypes.enum.js';\nimport { getSupportInCycle } from './getSupportInCycle.function.js';\nexport const variablePrefix = ':tagvar';\nexport const variableSuffix = ':';\nexport function getStringTag(strings, values) {\n    const tag = {\n        values,\n        ownerSupport: getSupportInCycle(),\n        tagJsType: ValueTypes.tag,\n        strings,\n        /** Used within an array.map() that returns html aka array.map(x => html``.key(x)) */\n        key(arrayValue) {\n            tag.arrayValue = arrayValue;\n            return tag;\n        },\n        html: function html(strings, values) {\n            tag.children = { strings, values };\n            return tag;\n        }\n    };\n    return tag;\n}\nexport function getDomTag(dom, values) {\n    const tag = {\n        values,\n        ownerSupport: getSupportInCycle(),\n        dom,\n        tagJsType: ValueTypes.dom,\n        key: function keyFun(arrayValue) {\n            tag.arrayValue = arrayValue;\n            return tag;\n        },\n        html: {\n            dom: function dom(dom, // ObjectChildren\n            values) {\n                tag.children = { dom: dom, values };\n                return tag;\n            }\n        }\n    };\n    return tag;\n}\n//# sourceMappingURL=getDomTag.function.js.map","// taggedjs-no-compile\nimport { variableSuffix, variablePrefix } from \"../../tag/getDomTag.function.js\";\nimport { ImmutableTypes } from \"../../tag/ValueTypes.enum.js\";\nconst placeholderRegex = new RegExp(variablePrefix + '(\\\\d+)' + variableSuffix, 'g');\nconst ch = 'ch'; // short for children\nexport function replacePlaceholders(dom, valueCount, valuePositions = [], currentTail = []) {\n    const elements = dom;\n    for (let i = 0; i < elements.length; i++) {\n        const loopTail = [...currentTail, i];\n        const element = elements[i];\n        if (element.at) {\n            const attrs = element.at;\n            element.at = processAttributes(attrs, valueCount);\n        }\n        if (element.ch) {\n            const children = element.ch;\n            const innerLoopTail = [...loopTail, ch];\n            element.ch = replacePlaceholders(children, valueCount, valuePositions, innerLoopTail);\n        }\n        i = examineChild(element, valueCount, elements, i);\n    }\n    return elements;\n}\nfunction examineChild(child, valueCount, children, index) {\n    if (child.nn !== 'text') {\n        return index;\n    }\n    const textChild = child;\n    let textContent = textChild.tc;\n    if (typeof textContent !== ImmutableTypes.string) {\n        return index;\n    }\n    let match;\n    while ((match = placeholderRegex.exec(textContent)) !== null) {\n        const secondMatch = match[1];\n        const wIndex = parseInt(secondMatch, 10);\n        const examine = !isNaN(wIndex) && wIndex < valueCount;\n        if (examine) {\n            const varContent = variablePrefix + wIndex + variableSuffix;\n            const after = textContent.slice(match.index + varContent.length);\n            children.splice(index, 1, ...[{\n                    nn: 'text',\n                    v: wIndex\n                }]);\n            textContent = after;\n            placeholderRegex.lastIndex = 0; // Reset regex index due to split\n        }\n    }\n    textChild.tc = textContent;\n    return index;\n}\nfunction processAttributes(attributes, valueCount) {\n    return attributes.map(attrSet => {\n        const [key, value, isSpecial] = attrSet;\n        if (key.startsWith(variablePrefix)) {\n            const index = parseInt(key.replace(variablePrefix, ''), 10);\n            if (!isNaN(index) && index < valueCount) {\n                return [{ tagJsVar: index }];\n            }\n        }\n        if (typeof value === ImmutableTypes.string && value.startsWith(variablePrefix)) {\n            const index = parseInt(value.replace(variablePrefix, ''), 10);\n            if (!isNaN(index) && index < valueCount) {\n                return [key, { tagJsVar: index }, isSpecial];\n            }\n        }\n        return attrSet;\n    });\n}\n//# sourceMappingURL=replacePlaceholders.function.js.map","import { getStringTag, getDomTag } from './getDomTag.function.js';\nimport { PropWatches } from './tag.js';\nimport { getTemplaterResult } from './getTemplaterResult.function.js';\nexport function html(strings, ...values) {\n    const stringTag = getStringTag(strings, values);\n    const templater = getTemplaterResult(PropWatches.NONE);\n    templater.tag = stringTag;\n    stringTag.templater = templater;\n    return stringTag;\n}\nhtml.dom = function (dom, ...values) {\n    return getDomTag(dom, values);\n};\n//# sourceMappingURL=html.js.map"],"names":["empty","BasicTypes","ImmutableTypes","ValueTypes","tag","dom","templater","tagComponent","tagArray","subject","tagJsSubject","renderOnce","stateRender","version","Date","now","signal","initialValue","Signal","value","subscribers","Set","newValue","forEach","callback","subscribe","add","unsub","delete","unsubscribe","isStaticTag","tagJsType","isTagComponent","tagType","isSubjectInstance","isObject","function","isFunction","object","isArray","Array","getSubscription","countSubject","Subject","globalSubCount$","next","subscription","subscriptions","index","findIndex","sub","splice","removeSubFromArray","valSub","push","runPipedMethods","methods","onComplete","cloneMethods","firstMethod","shift","length","handler","methodResponse","setHandler","x","onSubscription","isSubject","subscribeWith","constructor","this","orgCallback","lastValue","emit","set","bind","subs","toPromise","Promise","res","toCallback","runtimeSub","tagJsUnsub","setTimeout","pipe","operations","setMethods","all","args","subjects","output","valuesSeen","values","setValue","item","clones","map","combineLatest","arg","static","ValueSubject","super","defaultValue","stateConfig","handlers","firstStatesHandler","setter","config","states","statesIndex","support","reStatesHandler","prevSupport","oldStates","lastValues","stateArray","get","initState","runFirstState","statesHandler","rearray","reState","prevState","prevStates","runRestate","StateEchoBack","getStateValue","state","oldState","checkValue","getCallbackValue","restate","initValue","original","stateFrom","stateTo","statesFrom","fromValue","oldValues","oldGetCallback","getIndex","newSetCallback","_","watch","currentValues","setupWatch","defaultFinally","init","before","final","previous","pastResult","undefined","previousValues","result","every","defineOnMethod","getWatch","attachTo","Object","defineProperty","setup","oldWatch","firstSupport","method","nowSupport","setTo","newestState","oldest","global","letProp","propStates2","passes","passedOn","nowValues","passed","newWatch","_value","oldestState","TagError","Error","details","message","errorCode","name","StateMismatchError","SyncCallbackError","deepClone","obj","maxDepth","makeDeepClone","RegExp","clone","create","getPrototypeOf","i","key","prototype","hasOwnProperty","call","deepEqual","obj1","obj2","isDeepEqual","fn0","fn1","toString","getTime","isArrayDeepEqual","keys1","keys","keys2","includes","isObjectDeepEqual","getTemplaterResult","propWatch","props","arrayValue","tags","castProps","newSupport","depth","prop","ownerSupport","checkProp","alterProp","already","mem","wrap","toCall","callWith","newest","noCycle","callbackResult","run","locked","isInline","isInlineHtml","renderInlineHtml","renderExistingReadyTag","safeRenderSupport","tagClosed$","callbackPropOwner","assign","getPropWrap","deepCompareDepth","isSkipPropValue","subValue","afterCheckProp","checkArrayProp","getset","getOwnPropertyDescriptor","checkObjectProp","originalValue","newProp","destroy$","executeWrap","useSupport","castedProps","originalFunction","cloneValueArray","cloneTagJsValue","getBaseSupport","baseSupport","appSupport","blocked","upgradeBaseToSupport","propsConfig","PropWatches","IMMUTABLE","latest","SHALLOW","shallowCompareDepth","clonePropsBy","getSupport","getCastedProps","lastSupport","DEEP","preCastedProps","lastPropsConfig","lastCastProps","syncFunctionProps","tagCount","parentWrap","innerTagWrap","getTagWrap","wrapper","setUse","tagIndex","tagUseFn","hasSupportChanged","newTemplater","propsChanged","pastCloneProps","hasLenChanged","hasPropLengthsChanged","NONE","shallowPropMatch","immutablePropMatch","castedPastProps","compare","subCastedProps","subCompareProps","matched","entries","compareProps","onePropCompare","deepPropChangeCompare","hasPropChanges","len","pastProp","obEntries","subItem","objectItemMatches","use","route","_routeProps","app","_routeTag","deepPropWatch","immutableProps","watchProps","oneRenderFunction","renderFunction","onDelete","compareOriginal","pastValue","paintRemoves","setContent","paintAppends","paintInsertBefores","paintAfters","painting","locks","paint","toRemove","parentNode","removeChild","content","text","textNode","textContent","relative","appendChild","element","insertBefore","updateBeforeTemplate","lastFirstChild","document","createTextNode","castTextValue","runBeforeDestroy","providers","provider","children","renderCount","getChildTagsToDestroy","childTags","child","lastArray","iSubs","iSub","context","getChildTagsToSoftDestroy","subTags","smartRemoveKids","allPromises","destroys","promises","destroy","maybePromise","lastPromise","then","smartRemoveByContext","destroyClones","processContextDestroys","withinOwnerElement","destroyArray","elm","simpleValueElm","subGlobal","deleted","htmlDomMeta","marker","domElement","destroySupport","compareArrayItems","_subTag","removed","counts","newLength","at","lessLength","prevContext","destroyArrayItem","oldKey","oldValueTag","isDiff","newKey","console","warn","destroyArrayItemByGlobal","runArrayItemDiff","checkArrayValueChange","added","checkSimpleValueChange","contextItem","castedValue","oldClone","processUpdateRegularValue","getNewGlobal","isLikeTags","support0","support1","templater0","templater1","tag0","tag1","domMeta0","domMeta1","isLikeDomTags","like","strings0","strings","strings1","string","values0","values1","valuesLengthsMatch","allVarsMatch","compareTo","isLikeValueSets","isLikeStringTags","howToSetFirstInputValue","setAttribute","removeAttribute","specialAttribute","specialName","stagger","target","focus","select","names","split","style","classList","remove","processSpecialClass","handleProviderChanges","tagsWithProvider","memory","cSubject","getTagsWithProvider","getUpTags","supports","inlineHtml","isComponent","continueUp","selfPropChange","nowProps","latestProps","hasPropsToOwnerChanged","checkRenderUp","proSupports","prosWithChanges","hasChange","owner","providersChangeCheck","renderTagUpdateArray","mapTagUpdate","noData","promiseNoData","bindSubjectCallback","subjectFunction","bindTo","component","apply","eventHandlerSupport","last","checkAfterCallbackPromise","renderCallbackSupport","afterTagCallback","runTagCallback","tagFunction","actions","processNonDynamicAttr","attrName","howToSet","isSpecial","addSupportEventListener","eventName","appElement","replaceEventName","eventReg","events","listener","event","originalStopPropagation","stopPropagation","bubbleEvent","addEventListener","stopped","defaultPrevented","processAttributeFunction","newAttrValue","fun","isSpecialAttr","startsWith","specialAction","isSpecialAction","emptyCounts","processUpdateAttrContext","isNameOnly","attrValue","isNoDisplayValue","processNameOnlyAttrValue","updateNameOnlyAttrValue","processAttributeEmit","processAttribute","nameVar","getTagJsVar","addOneContext","isAttr","newValues","valueVar","checkValueChange","contextValueSubject","blankHandler","processNameValueAttributeAttrSubject","processTagCallbackFun","processDynamicNameValueAttribute","processAttributeSubjectValue","callbackFun","special","prevFun","attrPart","tagJsVar","someDiv","createElement","attachDomElements","nodes","appendTo","node","v","isNaN","attachDynamicDom","newNode","nn","attachDomText","attachDomElement","ch","attr","tc","innerHTML","innerText","placeholder","_newValues","newContextItem","updateExistingValue","processFirstSubjectValue","buildBeforeElement","domMeta","thisTag","stringId","array","Number","join","getStringsId","lastRun","lastRuns","matches","isLastRunMatched","domMetaMap","htmlInterpolationToPlaceholders","htmlString","html","valuePositions","elements","stack","currentElement","valueIndex","position","regexTag","regexTagOrg","replace","removeCommentRegX","match","preprocessTagsInComments","tagMatch","exec","fullMatch","tagName","attrString","isClosingTag","isSelfClosing","endsWith","slice","trim","splitByTagVar","variablePrefix","variableSuffix","pushTextTo","pop","attributes","attrMatch","regexAttr","notEmpty","noValue","lowerName","toLowerCase","fixedName","cleanEventName","valueName","search","attrSet","parseHTML","htmlInterpolationToDomMeta","replacePlaceholders","traverseAndRestore","template","interpolation","getDomMeta","loadDomMeta","attachHtmlDomMeta","processTag","checkTagValueChange","subscribeToTemplate","getFakeTemplater","newSupportByTemplater","getHtmlSupport","processUpdateOneContext","updateSupportBy","olderSupport","newerSupport","tempTag","updateSupportValuesBy","processUpdateContext","processNewTag","processTagArray","runtimeInsertBefore","filteredLast","newRemoved","eAppendTo","reviewArrayItem","itemSubject","couldBeSame","processAddTagArrayItem","reviewPreviousArrayItem","subPlaceholder","processNewArrayValue","fooCounts","ignoreOrDestroyed","tryUpdateToTag","processNowRegularValue","prepareUpdateToComponent","processReplacementComponent","oldWrapper","newWrapper","isSameTag","skipComparing","oldestSupport","swapTags","hasChanged","newProps","syncSupports","updateExistingTagComponent","updateContextItemBySupport","valueSupport","handleStillTag","updateToTag","isTag","checkStateMismatch","newStates","error","hint","throwStateMismatch","runAfterRender","renderTagOnly","oldRenderCount","reSupport","processNewSubjectTag","tagFakeTemplater","processResult","newPropsConfig","renderWithSupport","appendIndex","processFirstTagResult","processFirstSubjectComponent","oneRenderToSupport","processFirstTagValue","processFirstRegularValue","onValue","syncRun","processSubUpdate","processReplaceTagResult","newPropsArray","priorPropsArray","newArray","syncPriorPropFunction","priorProp","oldProp","updateExistingArray","hasSetter","updateExistingObject","softDestroySupport","softDestroyOne","lastTemplater","lastTag","isLikeTag","lastDom","lastStrings","oldLength","checkTagSoftDestroy","pIndex","pLen","pcLen","moveProviders","lastOwnerSupport","wasLikeTags","ownGlobal","onInit","ondoubleclick","fragFindAny","fragReplacer","safeVar","results","fragment","diff","balanceArrayByArrays","addPlaceholders","inputString","filter","part","pushTo","postprocessTagsInComments","placeholderRegex","valueCount","currentTail","loopTail","attrs","processAttributes","innerLoopTail","examineChild","textChild","secondMatch","wIndex","parseInt","varContent","after","lastIndex","safeReplacer","_match","stringTag","getStringTag","getDomTag"],"sourceRoot":""}