{"version":3,"file":"main.js","mappings":"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","sources":["webpack://taggedjs-dump/webpack/runtime/chunk loaded","webpack://taggedjs-dump/./ts/columnEditor.component.ts","webpack://taggedjs-dump/./ts/arrayTable.component.ts","webpack://taggedjs-dump/./ts/arrayDisplay.tag.ts","webpack://taggedjs-dump/./ts/arraysDisplay.component.ts","webpack://taggedjs-dump/./ts/dumpArray.tag.ts","webpack://taggedjs-dump/./ts/copyText.function.ts","webpack://taggedjs-dump/./ts/dumpSimple.tag.ts","webpack://taggedjs-dump/./ts/dumpObject.tag.ts","webpack://taggedjs-dump/./ts/controlPanel.tag.ts","webpack://taggedjs-dump/./ts/dump.tag.ts","webpack://taggedjs-dump/webpack/bootstrap","webpack://taggedjs-dump/webpack/runtime/define property getters","webpack://taggedjs-dump/webpack/runtime/hasOwnProperty shorthand","webpack://taggedjs-dump/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","import { html, state, states, tag } from \"taggedjs\"\n\ntype Formula = {\n  value: any // unknown\n  title: string\n  stringFormula: string\n}\n\nexport const columnEditor = tag(({\n  name,\n  array,\n  included,\n  columnNames,\n  allColumnNames\n}: {\n  name: string,\n  array: unknown[],\n  included: boolean,\n  columnNames: string[]\n  allColumnNames: string[]\n}) => {\n  let mouseOverEditShow = false\n  let edit = false\n  let editFormula = undefined as Formula | undefined\n  const formulas = state([] as Formula[])\n\n  states(get => [{\n    mouseOverEditShow, edit, editFormula\n  }] = get({\n    mouseOverEditShow, edit, editFormula\n  }))\n\n  const goAll = () => {\n    columnNames.length = 0\n    columnNames.push(...allColumnNames)\n  }\n\n  const goOnly = () => {\n    columnNames.length = 0\n    columnNames.push(name)\n  }\n\n  function toggle() {\n    const index = columnNames.indexOf(name)\n\n    if(index >= 0) {\n      columnNames.splice(index, 1)\n      return\n    }\n\n    columnNames.push(name)\n  }\n\n  const addSumFormula = () => {\n    const stringFormula = `\n      array.reduce((all, item) => {\n        const value = item['${name}']\n        return isNaN(value) ? all : (all + value)\n      }, 0)\n    `\n    \n    formulas.push({\n      title: 'sum',\n      stringFormula,\n      value: sandboxRunEval(stringFormula, {array})\n    })\n  }\n\n  const updateFormula = (formula: Formula, newFormula: string) => {\n    formula.stringFormula = newFormula\n    formula.value = sandboxRunEval(newFormula, {array})\n  }\n\n  return html`\n    <a onclick=${toggle} style=\"cursor:pointer;\">\n      <input type=\"checkbox\" ${included && 'checked'} />&nbsp;${name}\n    </a>\n\n    <div\n      onmouseover=${() => mouseOverEditShow = true}\n      onmouseout=${() => mouseOverEditShow = false}\n    >\n      <a style.visibility=${(edit || mouseOverEditShow) ? 'visible' : 'hidden'}\n        onclick=${() => edit = !edit}\n      >⚙️&nbsp;</a>\n      \n      ${included && columnNames.length !== allColumnNames.length ? html`\n        <a style=\"color:blue;\" onclick=${goAll}><small>all</small></a>\n      ` : html`\n        <a style=\"color:blue;\" onclick=${goOnly}><small>only</small></a>\n      `}\n    </div>\n\n    ${edit && html`\n      <div style=\"width:100%;padding:0.3em;\">\n        <div style=\"font-size:0.7em;text-align:center;\">\n          <strong>Column Settings</strong>\n        </div>\n        <div>\n          ${editFormula && html`\n            <div style=\"padding:0.3em;\">\n              <strong>edit formula</strong>\n            </div>\n            <textarea wrap=\"off\"\n              onchange=${(evt: any) => updateFormula(editFormula as Formula, evt.target.value)}\n            >${editFormula.value}</textarea>\n          `}\n          <div style=\"display:flex;flex-wrap:wrap;gap:1em\">\n            ${formulas.map(formula =>\n              html`\n                <div>\n                  <div>\n                    <strong>${formula.title}</strong>\n                    <a onclick=${() => editFormula = formula}>✏️</a>\n                  </div>\n                  <div>${formula.value}</div>\n                </div>\n              `.key(formula)\n            )}\n          </div>\n          <button type=\"button\" onclick=${addSumFormula}>sum</button>\n        </div>\n      </div>\n    `}\n  `\n})\n\nfunction sandboxRunEval(stringFormula: string, context: Record<string, any> = {}) {\n  return sandboxEval(stringFormula, {isNaN, Math, Number, Date, ...context})\n}\n\n// execute script in private context\nfunction sandboxEval(\n  src: string,\n  ctx: Record<string, any>\n){\n  if(!src) {\n    return src\n  }\n\n  ctx = new Proxy(ctx, {has: () => true})\n  let func = (new Function(\"with(this) { return (\" + src + \")}\"));\n  return func.call(ctx)\n}\n","import { html, tag } from \"taggedjs\"\nimport { FormatChange, dump } from \"./index\"\nimport { EverySimpleValue } from \"./dump.props\"\n\nexport const arrayTable = tag(({\n  array,\n  // showLevels,\n  showAll,\n  showKids,\n  toggleColumnDialog,\n  columnNames,\n  formatChange,\n  allowMaximize,\n  everySimpleValue,\n}: {\n  array: any[]\n  // showLevels: number\n  showAll?: boolean\n  showKids: boolean\n  toggleColumnDialog: any\n  columnNames: string[],\n  formatChange: FormatChange,\n  allowMaximize?: boolean,\n  everySimpleValue?: EverySimpleValue\n}) => {\n  return html`<!-- array table -->\n    <!-- overflow-y: scroll; -->\n    <div style=\"max-height: 800px;max-width:100vw;overflow: scroll;\">\n      <table cellPadding=\"2\" cellSpacing=\"2\" border=\"0\">\n        ${array.length && html`\n          <thead style=\"position: sticky;top: 0;font-size: 0.8em;\">\n            <tr>\n              ${columnNames.map(key => html`\n                <th\n                  style.cursor=${toggleColumnDialog && 'pointer'}\n                  onclick=${toggleColumnDialog}\n                >${key}</th>\n              `.key(key))}\n            </tr>\n          </thead>\n        `}\n        <tbody>\n          ${array.map(row => html`\n            <tr>\n              ${columnNames.map(name => html`\n                <td>\n                  ${dump({\n                    value: row[name],\n                    showLevels: 0,\n                    showAll,\n                    showKids:showAll || showKids,\n                    isRootDump:false,\n                    formatChange,\n                    allowMaximize,\n                  })}\n                </td>\n              `.key(row[name]))}\n            </tr>\n          `.key(row))}\n        </tbody>\n      </table>\n    </div>\n  `\n})\n","import { html, tag } from \"taggedjs\"\nimport { FormatChange, dump } from \"./index\"\nimport { EverySimpleValue } from \"./dump.props\"\nimport { getAllKeys } from \"./arraysDisplay.component\"\n\nexport const arrayDisplay = tag(({\n  array, showLevels,\n  showAll, showKids,\n  columnNames,\n  formatChange,\n  toggleColumnDialog,\n  allowMaximize,\n  everySimpleValue,\n}: {\n  array: any[]\n  showLevels: number\n  showAll?: boolean\n  showKids: boolean\n  columnNames?: string[]\n  formatChange: FormatChange\n  toggleColumnDialog: () => any\n  allowMaximize?: boolean,\n  everySimpleValue?: EverySimpleValue,\n}) => {\n  return html`\n    ${array.map((\n      item: any,\n      index: number\n    ) => {\n      const value = paramValueKeys(item, columnNames)\n      return html`${dump({\n        value,\n        showLevels,\n        showAll,\n        showKids: true, // showAll || showKids,\n        isRootDump:false,\n        formatChange,\n        onHeaderClick: toggleColumnDialog,\n        allowMaximize,\n        everySimpleValue,\n      })}`.key(index)\n    })}\n  `\n})\n\nfunction paramValueKeys(\n  inputObject: Record<string, any> | string,\n  keysArray?: string[]\n) {\n  if(['string','number','boolean'].includes(typeof(inputObject))) {\n    return inputObject\n  }\n\n  if(Array.isArray(inputObject)) {\n    return inputObject\n  }\n\n  return filterObjectByKeys(inputObject as Record<string, any>, keysArray)\n}\n\nfunction filterObjectByKeys(\n  inputObject: Record<string, any>,\n  keysArray?: string[]\n) {\n  if(!keysArray) {\n    // keysArray = Object.keys(inputObject)\n    // return {...inputObject} // must be clone so unchecking items does not change original object\n    return inputObject\n  }\n\n  const filteredObject: Record<string, any> = {}\n\n  keysArray.forEach(key => {\n    if (inputObject.hasOwnProperty(key) || key in inputObject) {\n      filteredObject[key] = inputObject[key]\n    }\n  })\n\n  return filteredObject\n}\n","import { columnEditor } from \"./columnEditor.component\"\nimport { html, state, states, tag, watch } from \"taggedjs\"\nimport { FormatChange } from \"./index\"\nimport { arrayTable } from \"./arrayTable.component\"\nimport { arrayDisplay } from \"./arrayDisplay.tag\"\nimport { EverySimpleValue } from \"./dump.props\"\n\nexport const arraysDisplay = tag(({\n  showLevels,\n  showAll,\n  showKids,\n  array,\n  arrayView,\n  formatChange,\n  allowMaximize,\n  everySimpleValue,\n}: {\n  formatChange: FormatChange\n  array: any[]\n  arrayView: string\n  showLevels: number\n  showAll?: boolean\n  showKids: boolean\n  allowMaximize?: boolean\n  everySimpleValue?: EverySimpleValue\n}) => {\n  // used to display list of all possible columns\n  const allColumnNames = watch([array, array.length], () =>\n    array.length ? getAllKeys(array) : []\n  )\n  \n  // an editable list of column names\n  let columnNames: string[] | undefined = undefined\n  const defaultColumnNames: string[] = watch([allColumnNames], () => [...allColumnNames])\n\n  let showColumnDialog = false\n  const uniqueId = state(() => 'columnDialog' + performance.now())\n\n  states(get => [{columnNames, showColumnDialog}] = get({columnNames, showColumnDialog}))\n\n  watch.noInit([defaultColumnNames.length], () => {\n    if(!columnNames) {\n      columnNames = defaultColumnNames\n    }\n  })\n\n  const toggleColumnDialog = () => {\n    showColumnDialog = !showColumnDialog\n    const element = document.getElementById(uniqueId) as any\n    \n    if(showColumnDialog) {\n      element.showModal()\n    } else {\n      element.close() // <- element has onclose event that is called slow\n    }\n  }\n\n  const arrayTag = arrayView === 'table' ? arrayTable({\n    showAll, showKids,\n    array, toggleColumnDialog,\n    columnNames: columnNames || allColumnNames,\n    formatChange, everySimpleValue,\n  }) : arrayDisplay({\n    array, showLevels, showAll, showKids,\n    formatChange,\n    columnNames: columnNames || allColumnNames,\n    toggleColumnDialog,\n    allowMaximize, everySimpleValue\n  })\n\n  return html`\n    ${arrayTag}\n\n    <dialog id=${uniqueId} class=\"dump-dialog\" style=\"padding:0\"\n      onmousedown=\"var r = this.getBoundingClientRect();(r.top<=event.clientY&&event.clientY<=r.top+r.height&&r.left<=event.clientX&&event.clientX<=r.left+r.width) || this.close()\"\n      ondragstart=\"const {e,dt,t} = {t:this,e:event,dt:event.dataTransfer};const d=t.drag=t.drag||{x:0,y:0};d.initX=d.x;d.startX=event.clientX-t.offsetLeft;d.startY=event.clientY-t.offsetTop;t.ondragover=e.target.ondragover=(e)=>e.preventDefault();dt.effectAllowed='move';dt.dropEffect='move'\"\n      ondrag=\"const {t,e,dt,d}={e:event,dt:event.dataTransfer,d:this.drag}; if(e.clientX===0) return;d.x = d.x + e.offsetX - d.startX; d.y = d.y + e.offsetY - d.startY; this.style.left = d.x + 'px'; this.style.top = d.y+'px';\"\n      ondragend=\"const {t,e,d}={t:this,e:event,d:this.drag};if (d.initX === d.x) {d.x=d.x+e.offsetX-(d.startX-d.x);d.y=d.y+e.offsetY-(d.startY-d.y);this.style.transform=translate3d(d.x+'px', d.y+'px', 0)};this.draggable=false\"\n    >\n      <div\n        style=\"padding:.25em;background-color:#666;color:white;\"\n        onmousedown=\"this.parentNode.draggable=true\"\n      >Column Modifier</div>\n      <div style=\"padding:.25em\">\n        ${allColumnNames.map(name => {\n          const included = columnNames === undefined || columnNames.includes(name)\n          return html`\n            <div\n              style=\"display:flex;justify-content: space-between;flex-wrap:wrap\"\n              class=\"hover-bg-warning\"\n            >\n              ${columnEditor({\n                name,\n                array,\n                included,\n                columnNames: columnNames || defaultColumnNames,\n                allColumnNames,\n              })}\n            </div>\n          `.key(name)\n        })}\n        <button style=\"width:100%\" type=\"button\" onclick=${toggleColumnDialog}>🅧 close</button>\n      </div>\n    </dialog>\n  `\n})\n\nexport function getAllKeys(array: any[]): string[] {\n  return array.reduce((all, x) => {\n    if(x && typeof(x) === 'object') {\n      if(Array.isArray(x)) {\n        return all\n      }\n\n      Object.keys(x).forEach((x) => {\n        if(all.includes(x)) {\n          return // already have it\n        }\n\n        all.push(x)\n      })\n    }\n    \n    return all\n  }, [])\n}\n","import { arraysDisplay } from \"./arraysDisplay.component\"\nimport { html, letProp, state, states, tag, watch } from \"taggedjs\"\nimport { FormatChange } from \"./index.js\"\nimport { EverySimpleValue } from \"./dump.props\"\n\nexport const dumpArray = tag(({// dumpArray\n  key,\n  value,\n  show,\n  showAll,\n  showKids,\n  // arrayView,\n  showLevels,\n  formatChange,\n  allowMaximize,\n  everySimpleValue,\n}: {\n  value: any\n  showLevels: number\n  key?: string\n  show: boolean\n  showAll?: boolean\n  showKids: boolean\n  // arrayView?: string\n  formatChange: FormatChange\n  allowMaximize?: boolean\n  everySimpleValue?: EverySimpleValue\n}) => {\n  let showLower = undefined as boolean | undefined\n  let arrayView = undefined as undefined | 'table'\n  let maximize = false\n  \n  states(get => [{showLower, arrayView, maximize}] = get({showLower, arrayView, maximize}))\n  letProp(get => [showKids] = get(showKids))\n  letProp(get => [showAll] = get(showAll))\n  \n  watch.noInit([show], ([show])=> showLower = show)\n  watch.noInit([showAll], ([showAll])=> showLower = showAll)\n\n  const maximizeId = state(() => 'maximize-dump-' + performance.now())\n  const toggleMaximize = () => {\n    maximize = !maximize\n    if(maximize) {\n      (document.getElementById(maximizeId) as any).showModal()\n    }\n  }\n  const minimize = () => (document.getElementById(maximizeId) as any).close()\n\n  const getHeader = (allowMaximize?: boolean) => html`\n    <div class=\"taggedjs-array-label\"\n      style=${showLower ? 'border-bottom-width:1px;border-bottom-style:solid;border-color:black;':''}\n    >\n      <a style=\"flex-grow:1\" onclick=${() => {\n        if(showLower === undefined) {\n          return showAll = showKids = showLower = !(showAll || showKids || showLower)\n        }\n\n        showAll = showKids = showLower = !showLower\n      }}>\n        <strong>${key}</strong>\n      </a>\n      <sup style=\"opacity:80%;font-size:75%;padding-left:0.4em\">\n        <a style=\"text-decoration:underline;\" style.font-weight=${arrayView === 'table' ? 'bold' : ''}\n          onclick=${() => arrayView = arrayView === 'table' ? undefined : 'table'\n        }>${arrayView === 'table' ? 'flex' : 'table'}</a>\n      </sup>\n      <sup style=\"opacity:80%;font-size:75%;padding-left:0.4em\">[${value.length}]</sup>\n      ${allowMaximize && html`\n        &nbsp;<a onclick=${toggleMaximize}><span style=\"width:10px;height:10px;border:1px solid white;border-top-width:3px;display:inline-block;\"></span></a>\n      `}\n    </div>\n  `\n\n  const displayOptions = {\n    showLevels, showAll, showKids,\n    formatChange,\n    array: value,\n    arrayView: arrayView as string,\n    allowMaximize,\n    everySimpleValue,\n  }\n\n  const getBody = () => html`\n    <!-- array displays wrap -->\n    <div class=\"taggedjs-array-body\">\n      ${arraysDisplay(displayOptions)}\n    </div>\n  `\n\n  return html`<!-- array -->\n    <div class=\"taggedjs-array-wrap\">\n      ${getHeader(allowMaximize)}\n      ${(showAll || showLower || showKids || (showLower==undefined && showLevels > 0)) && getBody()}\n    </div>\n\n    <!-- maximize -->\n    <dialog id=${maximizeId} class=\"dump-dialog\" style=\"padding:0\"\n      onmousedown=\"var r = this.getBoundingClientRect();(r.top<=event.clientY&&event.clientY<=r.top+r.height&&r.left<=event.clientX&&event.clientX<=r.left+r.width) || this.close()\"\n      ondragstart=\"const {e,dt,t} = {t:this,e:event,dt:event.dataTransfer};const d=t.drag=t.drag||{x:0,y:0};d.initX=d.x;d.startX=event.clientX-t.offsetLeft;d.startY=event.clientY-t.offsetTop;t.ondragover=e.target.ondragover=(e)=>e.preventDefault();dt.effectAllowed='move';dt.dropEffect='move'\"\n      ondrag=\"const {t,e,dt,d}={e:event,dt:event.dataTransfer,d:this.drag}; if(e.clientX===0) return;d.x = d.x + e.offsetX - d.startX; d.y = d.y + e.offsetY - d.startY; this.style.left = d.x + 'px'; this.style.top = d.y+'px';\"\n      ondragend=\"const {t,e,d}={t:this,e:event,d:this.drag};if (d.initX === d.x) {d.x=d.x+e.offsetX-(d.startX-d.x);d.y=d.y+e.offsetY-(d.startY-d.y);this.style.transform=translate3d(d.x+'px', d.y+'px', 0)};this.draggable=false\"\n    >\n      <div style=\"padding:.25em\" onmousedown=\"this.parentNode.draggable=true\">\n        ${maximize && getHeader(false)}\n      </div>\n      \n      ${maximize && html`\n        <div style=\"text-align:left;display:flex;flex-wrap:wrap;margin:0.2em;gap:0.2em\">\n          ${arraysDisplay({...displayOptions, allowMaximize: false})}\n        </div>\n      `}\n\n      <div style=\"padding:.25em\">\n        <button type=\"button\" onclick=${minimize} style=\"width:100%\">🅧 close array</button>\n      </div>\n    </dialog>\n  `\n})\n","export function copyText(text: string) {\n  var copyText = document.createElement('textarea')\n  copyText.value = text\n  document.body.appendChild(copyText)\n  copyText.select()\n  copyText.setSelectionRange(0, 99999)\n  document.execCommand(\"copy\")\n  document.body.removeChild(copyText)\n}\n","import { Tag, html, states, tag } from \"taggedjs\"\nimport { OnHeaderClick } from \"./index\"\nimport { copyText } from \"./copyText.function\"\nimport { EverySimpleValue, SimpleValue } from \"./dump.props\"\n\nexport function dumpSimple({\n  key, value, onHeaderClick, everySimpleValue\n}: {\n  key: string | undefined\n  value: any\n  onHeaderClick?: OnHeaderClick,\n  everySimpleValue?: EverySimpleValue,\n}) {\n  const isLinkValue = value.search && (value.slice(0,8)==='https://' || value.slice(0,7)==='http://')\n\n  // const result = everySimpleValue && everySimpleValue(value, key)\n  let displayValue: SimpleValue | Tag\n\n  if(everySimpleValue) {\n    displayValue = simpleValue({value, everySimpleValue})\n  } else {\n    displayValue = isLinkValue ? linkValue(value) : simpleValue({value})\n  }\n  \n  return html`\n    <div style=\"font-size:75%;flex:1 1 10em;color:#111111\">\n      ${key && html`\n        <div class=\"taggedjs-simple-label\"\n          style.cursor=${ onHeaderClick && \"pointer\" }\n          onclick=${onHeaderClick}\n        >${key}</div>\n      `}\n      ${displayValue}\n    </div>\n  `\n}\n\nconst simpleValue = tag(({value, everySimpleValue}: {\n  value: string | undefined | null | boolean,\n  everySimpleValue?: EverySimpleValue,\n}) => {\n  const isLikeNull = [undefined,null,'null'].includes(value as null | undefined)\n  const number = value as unknown as number\n  const isLargeNumber = !isNaN(number) && number > 1000000000\n  const title = !isLargeNumber ? '' : getLargeNumberTitle(number)\n  let downTime = 0\n  \n  states(get => [downTime] = get(downTime))\n\n  const startMouseDown = () => {\n    downTime = Date.now()\n  }\n\n  const markMouseUp = (event: Event) => {\n    if(Date.now() - downTime > 300) {\n      event.preventDefault()\n      event.stopPropagation()\n      return true // a manual drag copy is taking place\n    }\n\n    copyText(value as string) // a regular click took place\n  }\n\n  let displayValue = value\n\n  if(everySimpleValue) {\n    displayValue = everySimpleValue(value) as any\n  }\n\n  displayValue = displayValue === null && 'null' || displayValue === false && 'false' || displayValue === undefined && 'undefined' || displayValue\n\n  return html`\n    <div class=\"hover-bg-warning active-bg-energized\"\n      onmousedown=${startMouseDown}\n      onmouseup=${markMouseUp}\n      style=\"cursor:pointer;\"\n      style.background-color=${isLikeNull ? 'rgba(0,0,0,.5)' : ''}\n      style.color = ${\n        (value === true && '#28a54c') ||\n        (value === false && '#e42112') ||\n        isLikeNull && 'white' || ''\n      }\n      title=${title}\n    >${displayValue}</div>\n  `\n})\n\nfunction getLargeNumberTitle(number: number) {\n  return number > 946702800000 ?\n  'Milliseconds > Unix epoch:\\n' + (new Date(number).toLocaleString()) :\n  'Seconds > Unix epoch:\\n' + (new Date(number*1000).toLocaleString())\n}\n\nconst linkValue = (value: string) => {\n  return html`\n    <a onclick=${() => copyText(value)} href=${value}\n      target=\"_blank\"\n      class=\"hover-bg-warning active-bg-energized\"\n      title=\"tap to copy\"\n    >${value}</a>\n  `\n}","import { html, letProp, state, states, tag, watch } from \"taggedjs\"\nimport { FormatChange, OnHeaderClick, dump } from \"./index\"\nimport { EverySimpleValue } from \"./dump.props\"\n\nexport const dumpObject = tag(<T>({// dumpObject\n  key, showKids,\n  show,\n  showLevels,\n  value,\n  showAll,\n  onHeaderClick,\n  formatChange,\n  allowMaximize,\n  everySimpleValue,\n}:{\n  key?: string\n  value: T\n  showAll?: boolean\n  showKids: boolean\n  show: boolean\n  showLevels: number\n  formatChange: FormatChange\n  onHeaderClick?: OnHeaderClick\n  allowMaximize?: boolean\n  everySimpleValue?: EverySimpleValue\n}) => {\n  let showLower = undefined as boolean | undefined\n  let maximize = false\n  const maximizeId = state(() => 'maximize-dump-' + performance.now())\n\n  states(get => [{showLower, maximize}] = get({showLower, maximize}))\n  letProp(get => [showKids] = get(showKids))\n\n  watch.noInit([show], ([show]) => showLower = show)\n  watch.noInit([showAll], ([showAll]) => showLower = showAll)\n\n  const continueDump = !key || showKids || showLower || (showLower===undefined && showLevels > 0)\n\n  const toggleMaximize = () => {\n    maximize = !maximize\n    if(maximize) {\n      (document.getElementById(maximizeId) as any).showModal()\n    }\n  }\n  const minimize = () => (document.getElementById(maximizeId) as any).close()\n\n  const getHead = (allowMaximize?: boolean) => html`\n    <div class=\"taggedjs-object-label\" style=${showLower ? 'border-bottom-width:1px;border-bottom-style:solid;border-color:black;' : ''}>\n      <a onclick=${() => {\n        if(showLower === undefined) {\n          return showAll = showKids = showLower = !(showAll || showKids || showLower)\n        }\n\n        showKids = showLower = !showLower\n      }}>\n        <strong>${key}</strong>\n        <sup style=\"opacity:80%;font-size:75%;padding-left:0.4em\">\n          {${Object.keys(value as any).length}}\n        </sup>\n      </a>\n      ${allowMaximize && html`\n        &nbsp;<a onclick=${toggleMaximize}><span style=\"width:10px;height:10px;border:1px solid white;border-top-width:3px;display:inline-block;\"></span></a>\n      `}\n    </div>\n  `\n\n  const getDumpBody = (allowMaximize?: boolean) => html`\n    <div class=\"taggedjs-object-body-wrap\">\n      ${Object.entries(value as any).map(([key, value]) => html`\n        <!-- recurse -->\n        <div class=\"taggedjs-object\"\n          style=${!value || typeof(value) !== 'object' ? 'flex: 1 1 10em;' : 'flex-grow:1;'}\n        >\n          ${dump({\n            value,\n            key,\n            show: showLower,\n            showAll,\n            showLevels: showLevels - 1,\n            showKids: showAll || showKids,\n            isRootDump: false,\n            formatChange,\n            onHeaderClick,\n            allowMaximize,\n            everySimpleValue,\n          })}\n      `.key(key))}\n    </div>\n  `\n\n  return html`\n    <div style=\"flex: 1 1 10em;text-align:left;\">\n      <div class=\"taggedjs-object-wrap\">\n        ${key && getHead(allowMaximize)}\n        ${continueDump && getDumpBody(allowMaximize)}\n\n        <!-- maximize -->\n        <dialog id=${maximizeId} class=\"dump-dialog\" style=\"padding:0\"\n          onmousedown=\"var r = this.getBoundingClientRect();(r.top<=event.clientY&&event.clientY<=r.top+r.height&&r.left<=event.clientX&&event.clientX<=r.left+r.width) || this.close()\"\n          ondragstart=\"const {e,dt,t} = {t:this,e:event,dt:event.dataTransfer};const d=t.drag=t.drag||{x:0,y:0};d.initX=d.x;d.startX=event.clientX-t.offsetLeft;d.startY=event.clientY-t.offsetTop;t.ondragover=e.target.ondragover=(e)=>e.preventDefault();dt.effectAllowed='move';dt.dropEffect='move'\"\n          ondrag=\"const {t,e,dt,d}={e:event,dt:event.dataTransfer,d:this.drag}; if(e.clientX===0) return;d.x = d.x + e.offsetX - d.startX; d.y = d.y + e.offsetY - d.startY; this.style.left = d.x + 'px'; this.style.top = d.y+'px';\"\n          ondragend=\"const {t,e,d}={t:this,e:event,d:this.drag};if (d.initX === d.x) {d.x=d.x+e.offsetX-(d.startX-d.x);d.y=d.y+e.offsetY-(d.startY-d.y);this.style.transform=translate3d(d.x+'px', d.y+'px', 0)};this.draggable=false\"\n        >\n          <div style=\"padding:.25em\" onmousedown=\"this.parentNode.draggable=true\">\n            ${maximize && getHead(false)}\n          </div>\n          \n          ${maximize && getDumpBody(false)}\n\n          <div style=\"padding:.25em\">\n            <button type=\"button\" onclick=${minimize} style=\"width:100%\">🅧 close object</button>\n          </div>\n        </dialog>\n      </div>\n    </div>\n  `\n})\n","import { html, tag } from \"taggedjs\"\nimport { FormatChange } from \"./index\"\nimport { copyText } from \"./copyText.function\"\n\nexport const controlPanel = tag(({\n  value, format, showAll, formatChange, showAllChange,\n}: {\n  value: any\n  format: string\n  showAll?: boolean\n  showAllChange: (x: boolean) => unknown\n  formatChange: FormatChange\n}) => {\n  return html`\n    <style>\n      dialog.dump-dialog::backdrop {\n        background-color: rgba(0, 0, 0, 0.7); /* Set a semi-transparent black background */\n      }\n\n      .child-margin-xxs {margin:0.2em;}\n      \n      .taggedjs-dump .hover-bg-warning:hover {background-color:#fcf8e3}\n      .taggedjs-dump .hover-bg-balanced:hover {background-color:#33cd5f}\n      .taggedjs-dump .active-bg-energized:active {background-color:#ffc900}\n      .taggedjs-dump .bg-dark {background-color:#444444}\n      .taggedjs-dump .bg-balanced {background-color:#33cd5f}\n      \n      .taggedjs-dump .taggedjs-object {margin:0.2em;padding:0.2em;overflow:auto;display:flex;flex-wrap:wrap;}\n      .taggedjs-dump .taggedjs-object-label {\n        padding:0.2em;display:flex;justify-content:space-between;font-size:65%;color:white;\n        border-color:white;flex-grow:1;\n        background-color:#387ef5;\n      }\n\n      .taggedjs-dump .taggedjs-simple-label {\n        border-bottom-width:1px;border-bottom-style:solid;border-color:black;font-size:65%;border-color:white;line-height: 95%;font-weight:bold;\n      }\n\n      .taggedjs-dump .taggedjs-object-body-wrap {\n        display:flex;flex-wrap:wrap\n      }\n\n      .taggedjs-dump .taggedjs-object-wrap {\n        font-size:90%;color:#111111;background-color:#d9edf7;border:1px solid black;border-radius:5px;flex-direction: column;display:flex;\n      }\n      \n      .taggedjs-dump .taggedjs-array-label {\n        padding:0.2em;display:flex;justify-content:space-between;flex-grow:1;font-size:65%;border-color:white;color:white;background-color:#ef473a;\n      }\n\n      .taggedjs-dump .taggedjs-array-body {\n        text-align:left;display:flex;flex-wrap:wrap;margin:0.2em;gap:0.2em\n      }\n      \n      .taggedjs-dump .taggedjs-array-wrap {\n        color:#111111;background-color:#f2dede;border:1px solid black;border-radius:5px;flex-direction: column;display:flex\n      }\n    </style>\n    <div style=\"width: 100%;line-height: 90%;\">\n      <div style=\"position:relative;\">\n        <div style=\"display:flex;font-size:50%;position:absolute;top:-18px;right:-6px\">\n          ${!format || format==='flex' && html`\n            <a\n              style=${\n                \"margin:1px;border-radius:5px;color:white;align-items:center;display:flex;padding-left:0.2em;padding-right:0.2em;\" +\n                (showAll ? 'background-color:#33cd5f;' : 'background-color:#444444')\n              }\n              class=\"hover-bg-balanced\"\n              onclick=${() => showAllChange(showAll = !showAll)}\n              title=\"hide/show all sub objects\"\n            >👁</a>\n          `}\n          <a\n            style=${\n              \"margin:1px;border-radius:5px;color:white;align-items:center;display:flex;padding-left:0.2em;padding-right:0.2em;\" +\n              (!format || format==='flex' ? 'background-color:#33cd5f;' : 'background-color:#444444')\n            }\n            class=\"hover-bg-balanced\"\n            onclick=${() => formatChange(format='flex')}\n          >flex</a>\n          <a style=${\n            \"margin:1px;border-radius:5px;color:white;align-items:center;display:flex;padding-left:0.2em;padding-right:0.2em;\" +\n            (format==='json' ? 'background-color:#33cd5f;' : 'background-color:#444444')\n            }\n            class=\"hover-bg-balanced\"\n            onclick=${() => formatChange(format='json')}\n          >json</a>\n          <a style=\"margin:1px;border-radius:5px;color:white;align-items:center;display:flex;padding-left:0.2em;padding-right:0.2em;\"\n            class=\"bg-dark hover-bg-balanced active-bg-energized\"\n            onclick=${() => copyAsJsonText(value)}\n          >copy</a>\n        </div>\n      </div>\n    </div>\n  `\n})\n\nfunction copyAsJsonText(value: any) {\n  const text = JSON.stringify(value, null, 2)\n  copyText( text )\n}\n","import { html, onInit, tag, letProp, states, StringTag, DomTag } from \"taggedjs\"\nimport { dumpArray } from \"./dumpArray.tag\"\nimport { dumpSimple } from \"./dumpSimple.tag\"\nimport { dumpObject } from \"./dumpObject.tag\"\nimport { controlPanel } from \"./controlPanel.tag\"\nimport { DumpProps, FormatChange } from \"./dump.props\"\n\nexport const dump = tag(<T>({// dump tag\n  key, value,\n  showKids = false,\n  showLevels = -1,\n  showAll = false,\n  format = 'flex',\n  formatChange = x => format = x,\n  isRootDump = true,\n  onHeaderClick,\n  allowMaximize,\n  everySimpleValue,\n}: DumpProps<T>) => {\n  if(isRootDump && allowMaximize === undefined) {\n    allowMaximize = true\n  }\n  const isObject = () => value && value instanceof Object\n  const typing = value === null ? 'null' : typeof(value)\n  \n  let show = false\n  letProp(get => [format] = get(format))\n  letProp(get => [showAll] = get(showAll))\n  letProp(get => [showLevels] = get(showLevels))\n  let arrayView = undefined as undefined | 'table'\n\n  states(get => [{ show, arrayView }] = get({ show, arrayView }))\n\n  onInit(() => {\n    const levelsDefined = (showLevels>=0 && showLevels)\n    // detect auto levels (default) and if object lets only show 2 levels deep\n    const autoShowObjectLevels = showLevels === -1 && !key && isObject()\n    showLevels = levelsDefined || (autoShowObjectLevels ? 2 : 0)\n\n    if (showLevels > 0) {\n      show = true\n    }\n  })\n\n  /* IF 1: undefined ELSE goto simpleTemplate */\n  if([null, undefined].includes(value as any)) {\n    return dumpSimple({\n      key: key as string,\n      value: typing,\n      onHeaderClick,\n      everySimpleValue,\n    })\n  }\n  \n  /* IF 2: simple value ELSE goto objectTemplate */\n  if(['boolean','number','string'].includes(typing)) {\n    return dumpSimple({key:key as string, value, onHeaderClick, everySimpleValue})\n  }\n\n  return getObjectTemplate({\n    value,\n    showKids,\n    key,\n    onHeaderClick,\n    everySimpleValue,\n    format,\n    isRootDump,\n    showAll,\n    showAllChange: (x:boolean) => showAll = x,\n    formatChange,\n    show,\n    showLevels,\n    allowMaximize,    \n  })\n})\n\nlet dumpCount = 0\nconst getObjectTemplate = <T>({\n  value,\n  showKids,\n  key,\n  onHeaderClick,\n  everySimpleValue,\n  format,\n  isRootDump,\n  showAll,\n  showAllChange,\n  formatChange,\n  show,\n  showLevels,\n  allowMaximize,\n}: DumpProps<T> & {\n  format: string\n  show: boolean\n  formatChange: FormatChange\n  showAllChange: any\n  showKids: boolean\n  showLevels: number\n}): StringTag | DomTag => {\n  if(value === null) {\n    if(!showKids) {\n      return html`no kids`\n    }\n\n    return dumpSimple({\n      key: key as string,\n      value: 'null',\n      onHeaderClick,\n      everySimpleValue,\n    })\n  }\n\n  const isArray = (!format || format==='flex') && ((value as any).push && (value as any).pop)\n\n  const getArrayDump = () => dumpArray({\n    key,\n    value,\n    show,\n    // arrayView,\n    showAll,\n    showKids,\n    showLevels,\n    formatChange,\n    allowMaximize,\n    everySimpleValue,\n  })\n\n  const getObjectDump = () => dumpObject({\n    key,\n    show,\n    // showChange: x => showChangeValue(show = x),\n    showKids,\n    showLevels,\n    value,\n    showAll,\n    formatChange,\n    onHeaderClick,\n    allowMaximize,\n    everySimpleValue,\n  })\n\n  const getJsonDump = () => html`\n    <textarea *ngIf=\"\" disabled wrap=\"off\" style=\"width:100%;height:25vh;min-height:400px;color:white;\"\n    >${ JSON.stringify(value, null, 2) }</textarea>\n  `\n\n  return html`\n    <div id=${`taggedjs-dump-${++dumpCount}`} class=\"taggedjs-dump\">\n      ${isRootDump && controlPanel({\n        value,\n        format,\n        showAll,\n        showAllChange,\n        formatChange,\n      })}\n      ${(format==='json' && getJsonDump()) || isArray ? getArrayDump() : getObjectDump()}\n    </div>\n  `\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [929], () => (__webpack_require__(698)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","columnEditor","name","array","included","columnNames","allColumnNames","editFormula","mouseOverEditShow","edit","formulas","get","index","indexOf","splice","push","length","evt","updateFormula","formula","newFormula","target","value","stringFormula","sandboxRunEval","map","title","key","context","src","ctx","Proxy","has","Function","call","sandboxEval","isNaN","Math","Number","Date","arrayTable","showAll","showKids","toggleColumnDialog","formatChange","allowMaximize","everySimpleValue","row","dump","showLevels","isRootDump","arrayDisplay","item","inputObject","keysArray","includes","Array","isArray","filteredObject","forEach","hasOwnProperty","filterObjectByKeys","paramValueKeys","onHeaderClick","arraysDisplay","arrayView","reduce","all","x","Object","keys","getAllKeys","defaultColumnNames","showColumnDialog","uniqueId","performance","now","noInit","element","document","getElementById","showModal","close","arrayTag","undefined","dumpArray","show","showLower","maximize","maximizeId","toggleMaximize","getHeader","displayOptions","copyText","text","createElement","body","appendChild","select","setSelectionRange","execCommand","removeChild","dumpSimple","isLinkValue","search","slice","displayValue","simpleValue","linkValue","isLikeNull","number","toLocaleString","getLargeNumberTitle","downTime","event","preventDefault","stopPropagation","dumpObject","continueDump","getHead","getDumpBody","entries","controlPanel","format","showAllChange","JSON","stringify","copyAsJsonText","typing","getObjectTemplate","dumpCount","pop","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","every","r","d","definition","o","defineProperty","enumerable","obj","prop","prototype","__webpack_exports__"],"sourceRoot":""}